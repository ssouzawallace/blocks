Created by PLY version 3.2 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> procedures
Rule 1     procedures -> procedure procedures
Rule 2     procedures -> procedure
Rule 3     procedure -> TO PROCEDURENAME statements END
Rule 4     procedure -> TO PROCEDURENAME parameterDeclaration statements END
Rule 5     parameterDeclaration -> RECEIVER parameterDeclaration
Rule 6     parameterDeclaration -> RECEIVER
Rule 7     statements -> statement statements
Rule 8     statements -> statement
Rule 9     statement -> REPEAT expression LBRACKET statements RBRACKET
Rule 10    statement -> WHILE expression LBRACKET statements RBRACKET
Rule 11    statement -> LOOP LBRACKET statements RBRACKET
Rule 12    statement -> FOREVER LBRACKET statements RBRACKET
Rule 13    statement -> IF expression LBRACKET statements RBRACKET
Rule 14    statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET
Rule 15    statement -> WAITUNTIL LBRACKET expression RBRACKET
Rule 16    statement -> WHEN expression LBRACKET expression RBRACKET
Rule 17    statement -> SHOW expression
Rule 18    statement -> SHOW RECEIVER
Rule 19    statement -> MAKE RECEIVER expression
Rule 20    statement -> WAIT expression
Rule 21    statement -> SEND expression
Rule 22    statement -> RECORD expression
Rule 23    statement -> ERASE expression
Rule 24    statement -> SETSVH expression
Rule 25    statement -> SVR expression
Rule 26    statement -> SVL expression
Rule 27    statement -> SETPOWER expression
Rule 28    statement -> I2C_WRITE expression
Rule 29    statement -> OUTPUT expression
Rule 30    statement -> ONFOR expression
Rule 31    statement -> BSEND expression
Rule 32    statement -> BSR expression
Rule 33    statement -> SETDP expression
Rule 34    statement -> FASTSEND expression
Rule 35    statement -> BEEP
Rule 36    statement -> STOP
Rule 37    statement -> RESET
Rule 38    statement -> RESETDP
Rule 39    statement -> ON
Rule 40    statement -> OFF
Rule 41    statement -> THISWAY
Rule 42    statement -> THATWAY
Rule 43    statement -> RD
Rule 44    statement -> BRAKE
Rule 45    statement -> LEDON
Rule 46    statement -> LEDOFF
Rule 47    statement -> I2C_START
Rule 48    statement -> I2C_STOP
Rule 49    statement -> WHENOFF
Rule 50    statement -> procedurecall
Rule 51    statement -> MOTORATTENTION
Rule 52    statement -> BYTES
Rule 53    expression -> REPORTER
Rule 54    expression -> expression AND expression
Rule 55    expression -> expression OR expression
Rule 56    expression -> expression XOR expression
Rule 57    expression -> expression LESSTHAN expression
Rule 58    expression -> expression GREATERTHAN expression
Rule 59    expression -> expression EQUALS expression
Rule 60    expression -> expression PLUS expression
Rule 61    expression -> expression MINUS expression
Rule 62    expression -> expression TIMES expression
Rule 63    expression -> expression DIVIDE expression
Rule 64    expression -> expression PERCENT expression
Rule 65    expression -> MINUS expression
Rule 66    expression -> NOT expression
Rule 67    expression -> LPAREN expression RPAREN
Rule 68    expression -> LBRACKET expression RBRACKET
Rule 69    expression -> I2C_READ expression
Rule 70    expression -> HIGHBYTE expression
Rule 71    expression -> LOWBYTE expression
Rule 72    expression -> NUMBERLITERAL
Rule 73    expression -> TIMER
Rule 74    expression -> RANDOM
Rule 75    expression -> RECALL
Rule 76    expression -> SENSOR1
Rule 77    expression -> SENSOR2
Rule 78    expression -> SENSOR3
Rule 79    expression -> SENSOR4
Rule 80    expression -> SENSOR5
Rule 81    expression -> SENSOR6
Rule 82    expression -> SENSOR7
Rule 83    expression -> SENSOR8
Rule 84    expression -> SWITCH1
Rule 85    expression -> SWITCH2
Rule 86    expression -> SWITCH3
Rule 87    expression -> SWITCH4
Rule 88    expression -> SWITCH5
Rule 89    expression -> SWITCH6
Rule 90    expression -> SWITCH7
Rule 91    expression -> SWITCH8
Rule 92    expression -> NEWIRQ
Rule 93    expression -> SERIAL
Rule 94    parm -> parm expression
Rule 95    parm -> expression
Rule 96    procedurecall -> PROCEDURENAME parm
Rule 97    procedurecall -> PROCEDURENAME

Terminals, with rules where they appear

AND                  : 54
BEEP                 : 35
BRAKE                : 44
BSEND                : 31
BSR                  : 32
BYTES                : 52
DIVIDE               : 63
END                  : 3 4
EQUALS               : 59
ERASE                : 23
FASTSEND             : 34
FOREVER              : 12
GREATERTHAN          : 58
HIGHBYTE             : 70
I2C_READ             : 69
I2C_START            : 47
I2C_STOP             : 48
I2C_WRITE            : 28
IF                   : 13
IFELSE               : 14
LBRACKET             : 9 10 11 12 13 14 14 15 16 68
LEDOFF               : 46
LEDON                : 45
LESSTHAN             : 57
LOOP                 : 11
LOWBYTE              : 71
LPAREN               : 67
MAKE                 : 19
MINUS                : 61 65
MOTORATTENTION       : 51
NEWIRQ               : 92
NOT                  : 66
NUMBERLITERAL        : 72
OFF                  : 40
ON                   : 39
ONFOR                : 30
OR                   : 55
OUTPUT               : 29
PERCENT              : 64
PLUS                 : 60
PROCEDURENAME        : 3 4 96 97
RANDOM               : 74
RBRACKET             : 9 10 11 12 13 14 14 15 16 68
RD                   : 43
RECALL               : 75
RECEIVER             : 5 6 18 19
RECORD               : 22
REPEAT               : 9
REPORTER             : 53
RESET                : 37
RESETDP              : 38
RPAREN               : 67
SEND                 : 21
SENSOR1              : 76
SENSOR2              : 77
SENSOR3              : 78
SENSOR4              : 79
SENSOR5              : 80
SENSOR6              : 81
SENSOR7              : 82
SENSOR8              : 83
SERIAL               : 93
SETDP                : 33
SETPOWER             : 27
SETSVH               : 24
SHOW                 : 17 18
STOP                 : 36
SVL                  : 26
SVR                  : 25
SWITCH1              : 84
SWITCH2              : 85
SWITCH3              : 86
SWITCH4              : 87
SWITCH5              : 88
SWITCH6              : 89
SWITCH7              : 90
SWITCH8              : 91
THATWAY              : 42
THISWAY              : 41
TIMER                : 73
TIMES                : 62
TO                   : 3 4
WAIT                 : 20
WAITUNTIL            : 15
WHEN                 : 16
WHENOFF              : 49
WHILE                : 10
XOR                  : 56
error                : 

Nonterminals, with rules where they appear

expression           : 9 10 13 14 15 16 16 17 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 66 67 68 69 70 71 94 95
parameterDeclaration : 4 5
parm                 : 94 96
procedure            : 1 2
procedurecall        : 50
procedures           : 1 0
statement            : 7 8
statements           : 3 4 7 9 10 11 12 13 14 14

Parsing method: LALR

state 0

    (0) S' -> . procedures
    (1) procedures -> . procedure procedures
    (2) procedures -> . procedure
    (3) procedure -> . TO PROCEDURENAME statements END
    (4) procedure -> . TO PROCEDURENAME parameterDeclaration statements END

    TO              shift and go to state 1

    procedures                     shift and go to state 2
    procedure                      shift and go to state 3

state 1

    (3) procedure -> TO . PROCEDURENAME statements END
    (4) procedure -> TO . PROCEDURENAME parameterDeclaration statements END

    PROCEDURENAME   shift and go to state 4


state 2

    (0) S' -> procedures .



state 3

    (1) procedures -> procedure . procedures
    (2) procedures -> procedure .
    (1) procedures -> . procedure procedures
    (2) procedures -> . procedure
    (3) procedure -> . TO PROCEDURENAME statements END
    (4) procedure -> . TO PROCEDURENAME parameterDeclaration statements END

    $end            reduce using rule 2 (procedures -> procedure .)
    TO              shift and go to state 1

    procedures                     shift and go to state 5
    procedure                      shift and go to state 3

state 4

    (3) procedure -> TO PROCEDURENAME . statements END
    (4) procedure -> TO PROCEDURENAME . parameterDeclaration statements END
    (7) statements -> . statement statements
    (8) statements -> . statement
    (5) parameterDeclaration -> . RECEIVER parameterDeclaration
    (6) parameterDeclaration -> . RECEIVER
    (9) statement -> . REPEAT expression LBRACKET statements RBRACKET
    (10) statement -> . WHILE expression LBRACKET statements RBRACKET
    (11) statement -> . LOOP LBRACKET statements RBRACKET
    (12) statement -> . FOREVER LBRACKET statements RBRACKET
    (13) statement -> . IF expression LBRACKET statements RBRACKET
    (14) statement -> . IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET
    (15) statement -> . WAITUNTIL LBRACKET expression RBRACKET
    (16) statement -> . WHEN expression LBRACKET expression RBRACKET
    (17) statement -> . SHOW expression
    (18) statement -> . SHOW RECEIVER
    (19) statement -> . MAKE RECEIVER expression
    (20) statement -> . WAIT expression
    (21) statement -> . SEND expression
    (22) statement -> . RECORD expression
    (23) statement -> . ERASE expression
    (24) statement -> . SETSVH expression
    (25) statement -> . SVR expression
    (26) statement -> . SVL expression
    (27) statement -> . SETPOWER expression
    (28) statement -> . I2C_WRITE expression
    (29) statement -> . OUTPUT expression
    (30) statement -> . ONFOR expression
    (31) statement -> . BSEND expression
    (32) statement -> . BSR expression
    (33) statement -> . SETDP expression
    (34) statement -> . FASTSEND expression
    (35) statement -> . BEEP
    (36) statement -> . STOP
    (37) statement -> . RESET
    (38) statement -> . RESETDP
    (39) statement -> . ON
    (40) statement -> . OFF
    (41) statement -> . THISWAY
    (42) statement -> . THATWAY
    (43) statement -> . RD
    (44) statement -> . BRAKE
    (45) statement -> . LEDON
    (46) statement -> . LEDOFF
    (47) statement -> . I2C_START
    (48) statement -> . I2C_STOP
    (49) statement -> . WHENOFF
    (50) statement -> . procedurecall
    (51) statement -> . MOTORATTENTION
    (52) statement -> . BYTES
    (96) procedurecall -> . PROCEDURENAME parm
    (97) procedurecall -> . PROCEDURENAME

    RECEIVER        shift and go to state 50
    REPEAT          shift and go to state 32
    WHILE           shift and go to state 13
    LOOP            shift and go to state 53
    FOREVER         shift and go to state 7
    IF              shift and go to state 28
    IFELSE          shift and go to state 25
    WAITUNTIL       shift and go to state 51
    WHEN            shift and go to state 21
    SHOW            shift and go to state 20
    MAKE            shift and go to state 45
    WAIT            shift and go to state 41
    SEND            shift and go to state 47
    RECORD          shift and go to state 19
    ERASE           shift and go to state 24
    SETSVH          shift and go to state 18
    SVR             shift and go to state 39
    SVL             shift and go to state 31
    SETPOWER        shift and go to state 10
    I2C_WRITE       shift and go to state 40
    OUTPUT          shift and go to state 52
    ONFOR           shift and go to state 37
    BSEND           shift and go to state 42
    BSR             shift and go to state 22
    SETDP           shift and go to state 27
    FASTSEND        shift and go to state 14
    BEEP            shift and go to state 48
    STOP            shift and go to state 11
    RESET           shift and go to state 6
    RESETDP         shift and go to state 33
    ON              shift and go to state 15
    OFF             shift and go to state 16
    THISWAY         shift and go to state 49
    THATWAY         shift and go to state 36
    RD              shift and go to state 23
    BRAKE           shift and go to state 38
    LEDON           shift and go to state 43
    LEDOFF          shift and go to state 9
    I2C_START       shift and go to state 46
    I2C_STOP        shift and go to state 17
    WHENOFF         shift and go to state 44
    MOTORATTENTION  shift and go to state 30
    BYTES           shift and go to state 35
    PROCEDURENAME   shift and go to state 12

    statements                     shift and go to state 8
    parameterDeclaration           shift and go to state 34
    statement                      shift and go to state 26
    procedurecall                  shift and go to state 29

state 5

    (1) procedures -> procedure procedures .

    $end            reduce using rule 1 (procedures -> procedure procedures .)


state 6

    (37) statement -> RESET .

    REPEAT          reduce using rule 37 (statement -> RESET .)
    WHILE           reduce using rule 37 (statement -> RESET .)
    LOOP            reduce using rule 37 (statement -> RESET .)
    FOREVER         reduce using rule 37 (statement -> RESET .)
    IF              reduce using rule 37 (statement -> RESET .)
    IFELSE          reduce using rule 37 (statement -> RESET .)
    WAITUNTIL       reduce using rule 37 (statement -> RESET .)
    WHEN            reduce using rule 37 (statement -> RESET .)
    SHOW            reduce using rule 37 (statement -> RESET .)
    MAKE            reduce using rule 37 (statement -> RESET .)
    WAIT            reduce using rule 37 (statement -> RESET .)
    SEND            reduce using rule 37 (statement -> RESET .)
    RECORD          reduce using rule 37 (statement -> RESET .)
    ERASE           reduce using rule 37 (statement -> RESET .)
    SETSVH          reduce using rule 37 (statement -> RESET .)
    SVR             reduce using rule 37 (statement -> RESET .)
    SVL             reduce using rule 37 (statement -> RESET .)
    SETPOWER        reduce using rule 37 (statement -> RESET .)
    I2C_WRITE       reduce using rule 37 (statement -> RESET .)
    OUTPUT          reduce using rule 37 (statement -> RESET .)
    ONFOR           reduce using rule 37 (statement -> RESET .)
    BSEND           reduce using rule 37 (statement -> RESET .)
    BSR             reduce using rule 37 (statement -> RESET .)
    SETDP           reduce using rule 37 (statement -> RESET .)
    FASTSEND        reduce using rule 37 (statement -> RESET .)
    BEEP            reduce using rule 37 (statement -> RESET .)
    STOP            reduce using rule 37 (statement -> RESET .)
    RESET           reduce using rule 37 (statement -> RESET .)
    RESETDP         reduce using rule 37 (statement -> RESET .)
    ON              reduce using rule 37 (statement -> RESET .)
    OFF             reduce using rule 37 (statement -> RESET .)
    THISWAY         reduce using rule 37 (statement -> RESET .)
    THATWAY         reduce using rule 37 (statement -> RESET .)
    RD              reduce using rule 37 (statement -> RESET .)
    BRAKE           reduce using rule 37 (statement -> RESET .)
    LEDON           reduce using rule 37 (statement -> RESET .)
    LEDOFF          reduce using rule 37 (statement -> RESET .)
    I2C_START       reduce using rule 37 (statement -> RESET .)
    I2C_STOP        reduce using rule 37 (statement -> RESET .)
    WHENOFF         reduce using rule 37 (statement -> RESET .)
    MOTORATTENTION  reduce using rule 37 (statement -> RESET .)
    BYTES           reduce using rule 37 (statement -> RESET .)
    PROCEDURENAME   reduce using rule 37 (statement -> RESET .)
    RBRACKET        reduce using rule 37 (statement -> RESET .)
    END             reduce using rule 37 (statement -> RESET .)


state 7

    (12) statement -> FOREVER . LBRACKET statements RBRACKET

    LBRACKET        shift and go to state 54


state 8

    (3) procedure -> TO PROCEDURENAME statements . END

    END             shift and go to state 55


state 9

    (46) statement -> LEDOFF .

    REPEAT          reduce using rule 46 (statement -> LEDOFF .)
    WHILE           reduce using rule 46 (statement -> LEDOFF .)
    LOOP            reduce using rule 46 (statement -> LEDOFF .)
    FOREVER         reduce using rule 46 (statement -> LEDOFF .)
    IF              reduce using rule 46 (statement -> LEDOFF .)
    IFELSE          reduce using rule 46 (statement -> LEDOFF .)
    WAITUNTIL       reduce using rule 46 (statement -> LEDOFF .)
    WHEN            reduce using rule 46 (statement -> LEDOFF .)
    SHOW            reduce using rule 46 (statement -> LEDOFF .)
    MAKE            reduce using rule 46 (statement -> LEDOFF .)
    WAIT            reduce using rule 46 (statement -> LEDOFF .)
    SEND            reduce using rule 46 (statement -> LEDOFF .)
    RECORD          reduce using rule 46 (statement -> LEDOFF .)
    ERASE           reduce using rule 46 (statement -> LEDOFF .)
    SETSVH          reduce using rule 46 (statement -> LEDOFF .)
    SVR             reduce using rule 46 (statement -> LEDOFF .)
    SVL             reduce using rule 46 (statement -> LEDOFF .)
    SETPOWER        reduce using rule 46 (statement -> LEDOFF .)
    I2C_WRITE       reduce using rule 46 (statement -> LEDOFF .)
    OUTPUT          reduce using rule 46 (statement -> LEDOFF .)
    ONFOR           reduce using rule 46 (statement -> LEDOFF .)
    BSEND           reduce using rule 46 (statement -> LEDOFF .)
    BSR             reduce using rule 46 (statement -> LEDOFF .)
    SETDP           reduce using rule 46 (statement -> LEDOFF .)
    FASTSEND        reduce using rule 46 (statement -> LEDOFF .)
    BEEP            reduce using rule 46 (statement -> LEDOFF .)
    STOP            reduce using rule 46 (statement -> LEDOFF .)
    RESET           reduce using rule 46 (statement -> LEDOFF .)
    RESETDP         reduce using rule 46 (statement -> LEDOFF .)
    ON              reduce using rule 46 (statement -> LEDOFF .)
    OFF             reduce using rule 46 (statement -> LEDOFF .)
    THISWAY         reduce using rule 46 (statement -> LEDOFF .)
    THATWAY         reduce using rule 46 (statement -> LEDOFF .)
    RD              reduce using rule 46 (statement -> LEDOFF .)
    BRAKE           reduce using rule 46 (statement -> LEDOFF .)
    LEDON           reduce using rule 46 (statement -> LEDOFF .)
    LEDOFF          reduce using rule 46 (statement -> LEDOFF .)
    I2C_START       reduce using rule 46 (statement -> LEDOFF .)
    I2C_STOP        reduce using rule 46 (statement -> LEDOFF .)
    WHENOFF         reduce using rule 46 (statement -> LEDOFF .)
    MOTORATTENTION  reduce using rule 46 (statement -> LEDOFF .)
    BYTES           reduce using rule 46 (statement -> LEDOFF .)
    PROCEDURENAME   reduce using rule 46 (statement -> LEDOFF .)
    RBRACKET        reduce using rule 46 (statement -> LEDOFF .)
    END             reduce using rule 46 (statement -> LEDOFF .)


state 10

    (27) statement -> SETPOWER . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 86

state 11

    (36) statement -> STOP .

    REPEAT          reduce using rule 36 (statement -> STOP .)
    WHILE           reduce using rule 36 (statement -> STOP .)
    LOOP            reduce using rule 36 (statement -> STOP .)
    FOREVER         reduce using rule 36 (statement -> STOP .)
    IF              reduce using rule 36 (statement -> STOP .)
    IFELSE          reduce using rule 36 (statement -> STOP .)
    WAITUNTIL       reduce using rule 36 (statement -> STOP .)
    WHEN            reduce using rule 36 (statement -> STOP .)
    SHOW            reduce using rule 36 (statement -> STOP .)
    MAKE            reduce using rule 36 (statement -> STOP .)
    WAIT            reduce using rule 36 (statement -> STOP .)
    SEND            reduce using rule 36 (statement -> STOP .)
    RECORD          reduce using rule 36 (statement -> STOP .)
    ERASE           reduce using rule 36 (statement -> STOP .)
    SETSVH          reduce using rule 36 (statement -> STOP .)
    SVR             reduce using rule 36 (statement -> STOP .)
    SVL             reduce using rule 36 (statement -> STOP .)
    SETPOWER        reduce using rule 36 (statement -> STOP .)
    I2C_WRITE       reduce using rule 36 (statement -> STOP .)
    OUTPUT          reduce using rule 36 (statement -> STOP .)
    ONFOR           reduce using rule 36 (statement -> STOP .)
    BSEND           reduce using rule 36 (statement -> STOP .)
    BSR             reduce using rule 36 (statement -> STOP .)
    SETDP           reduce using rule 36 (statement -> STOP .)
    FASTSEND        reduce using rule 36 (statement -> STOP .)
    BEEP            reduce using rule 36 (statement -> STOP .)
    STOP            reduce using rule 36 (statement -> STOP .)
    RESET           reduce using rule 36 (statement -> STOP .)
    RESETDP         reduce using rule 36 (statement -> STOP .)
    ON              reduce using rule 36 (statement -> STOP .)
    OFF             reduce using rule 36 (statement -> STOP .)
    THISWAY         reduce using rule 36 (statement -> STOP .)
    THATWAY         reduce using rule 36 (statement -> STOP .)
    RD              reduce using rule 36 (statement -> STOP .)
    BRAKE           reduce using rule 36 (statement -> STOP .)
    LEDON           reduce using rule 36 (statement -> STOP .)
    LEDOFF          reduce using rule 36 (statement -> STOP .)
    I2C_START       reduce using rule 36 (statement -> STOP .)
    I2C_STOP        reduce using rule 36 (statement -> STOP .)
    WHENOFF         reduce using rule 36 (statement -> STOP .)
    MOTORATTENTION  reduce using rule 36 (statement -> STOP .)
    BYTES           reduce using rule 36 (statement -> STOP .)
    PROCEDURENAME   reduce using rule 36 (statement -> STOP .)
    RBRACKET        reduce using rule 36 (statement -> STOP .)
    END             reduce using rule 36 (statement -> STOP .)


state 12

    (96) procedurecall -> PROCEDURENAME . parm
    (97) procedurecall -> PROCEDURENAME .
    (94) parm -> . parm expression
    (95) parm -> . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPEAT          reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    WHILE           reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    LOOP            reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    FOREVER         reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    IF              reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    IFELSE          reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    WAITUNTIL       reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    WHEN            reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    SHOW            reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    MAKE            reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    WAIT            reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    SEND            reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    RECORD          reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    ERASE           reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    SETSVH          reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    SVR             reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    SVL             reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    SETPOWER        reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    I2C_WRITE       reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    OUTPUT          reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    ONFOR           reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    BSEND           reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    BSR             reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    SETDP           reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    FASTSEND        reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    BEEP            reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    STOP            reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    RESET           reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    RESETDP         reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    ON              reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    OFF             reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    THISWAY         reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    THATWAY         reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    RD              reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    BRAKE           reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    LEDON           reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    LEDOFF          reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    I2C_START       reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    I2C_STOP        reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    WHENOFF         reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    MOTORATTENTION  reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    BYTES           reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    PROCEDURENAME   reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    RBRACKET        reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    END             reduce using rule 97 (procedurecall -> PROCEDURENAME .)
    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    parm                           shift and go to state 87
    expression                     shift and go to state 88

state 13

    (10) statement -> WHILE . expression LBRACKET statements RBRACKET
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 89

state 14

    (34) statement -> FASTSEND . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 90

state 15

    (39) statement -> ON .

    REPEAT          reduce using rule 39 (statement -> ON .)
    WHILE           reduce using rule 39 (statement -> ON .)
    LOOP            reduce using rule 39 (statement -> ON .)
    FOREVER         reduce using rule 39 (statement -> ON .)
    IF              reduce using rule 39 (statement -> ON .)
    IFELSE          reduce using rule 39 (statement -> ON .)
    WAITUNTIL       reduce using rule 39 (statement -> ON .)
    WHEN            reduce using rule 39 (statement -> ON .)
    SHOW            reduce using rule 39 (statement -> ON .)
    MAKE            reduce using rule 39 (statement -> ON .)
    WAIT            reduce using rule 39 (statement -> ON .)
    SEND            reduce using rule 39 (statement -> ON .)
    RECORD          reduce using rule 39 (statement -> ON .)
    ERASE           reduce using rule 39 (statement -> ON .)
    SETSVH          reduce using rule 39 (statement -> ON .)
    SVR             reduce using rule 39 (statement -> ON .)
    SVL             reduce using rule 39 (statement -> ON .)
    SETPOWER        reduce using rule 39 (statement -> ON .)
    I2C_WRITE       reduce using rule 39 (statement -> ON .)
    OUTPUT          reduce using rule 39 (statement -> ON .)
    ONFOR           reduce using rule 39 (statement -> ON .)
    BSEND           reduce using rule 39 (statement -> ON .)
    BSR             reduce using rule 39 (statement -> ON .)
    SETDP           reduce using rule 39 (statement -> ON .)
    FASTSEND        reduce using rule 39 (statement -> ON .)
    BEEP            reduce using rule 39 (statement -> ON .)
    STOP            reduce using rule 39 (statement -> ON .)
    RESET           reduce using rule 39 (statement -> ON .)
    RESETDP         reduce using rule 39 (statement -> ON .)
    ON              reduce using rule 39 (statement -> ON .)
    OFF             reduce using rule 39 (statement -> ON .)
    THISWAY         reduce using rule 39 (statement -> ON .)
    THATWAY         reduce using rule 39 (statement -> ON .)
    RD              reduce using rule 39 (statement -> ON .)
    BRAKE           reduce using rule 39 (statement -> ON .)
    LEDON           reduce using rule 39 (statement -> ON .)
    LEDOFF          reduce using rule 39 (statement -> ON .)
    I2C_START       reduce using rule 39 (statement -> ON .)
    I2C_STOP        reduce using rule 39 (statement -> ON .)
    WHENOFF         reduce using rule 39 (statement -> ON .)
    MOTORATTENTION  reduce using rule 39 (statement -> ON .)
    BYTES           reduce using rule 39 (statement -> ON .)
    PROCEDURENAME   reduce using rule 39 (statement -> ON .)
    RBRACKET        reduce using rule 39 (statement -> ON .)
    END             reduce using rule 39 (statement -> ON .)


state 16

    (40) statement -> OFF .

    REPEAT          reduce using rule 40 (statement -> OFF .)
    WHILE           reduce using rule 40 (statement -> OFF .)
    LOOP            reduce using rule 40 (statement -> OFF .)
    FOREVER         reduce using rule 40 (statement -> OFF .)
    IF              reduce using rule 40 (statement -> OFF .)
    IFELSE          reduce using rule 40 (statement -> OFF .)
    WAITUNTIL       reduce using rule 40 (statement -> OFF .)
    WHEN            reduce using rule 40 (statement -> OFF .)
    SHOW            reduce using rule 40 (statement -> OFF .)
    MAKE            reduce using rule 40 (statement -> OFF .)
    WAIT            reduce using rule 40 (statement -> OFF .)
    SEND            reduce using rule 40 (statement -> OFF .)
    RECORD          reduce using rule 40 (statement -> OFF .)
    ERASE           reduce using rule 40 (statement -> OFF .)
    SETSVH          reduce using rule 40 (statement -> OFF .)
    SVR             reduce using rule 40 (statement -> OFF .)
    SVL             reduce using rule 40 (statement -> OFF .)
    SETPOWER        reduce using rule 40 (statement -> OFF .)
    I2C_WRITE       reduce using rule 40 (statement -> OFF .)
    OUTPUT          reduce using rule 40 (statement -> OFF .)
    ONFOR           reduce using rule 40 (statement -> OFF .)
    BSEND           reduce using rule 40 (statement -> OFF .)
    BSR             reduce using rule 40 (statement -> OFF .)
    SETDP           reduce using rule 40 (statement -> OFF .)
    FASTSEND        reduce using rule 40 (statement -> OFF .)
    BEEP            reduce using rule 40 (statement -> OFF .)
    STOP            reduce using rule 40 (statement -> OFF .)
    RESET           reduce using rule 40 (statement -> OFF .)
    RESETDP         reduce using rule 40 (statement -> OFF .)
    ON              reduce using rule 40 (statement -> OFF .)
    OFF             reduce using rule 40 (statement -> OFF .)
    THISWAY         reduce using rule 40 (statement -> OFF .)
    THATWAY         reduce using rule 40 (statement -> OFF .)
    RD              reduce using rule 40 (statement -> OFF .)
    BRAKE           reduce using rule 40 (statement -> OFF .)
    LEDON           reduce using rule 40 (statement -> OFF .)
    LEDOFF          reduce using rule 40 (statement -> OFF .)
    I2C_START       reduce using rule 40 (statement -> OFF .)
    I2C_STOP        reduce using rule 40 (statement -> OFF .)
    WHENOFF         reduce using rule 40 (statement -> OFF .)
    MOTORATTENTION  reduce using rule 40 (statement -> OFF .)
    BYTES           reduce using rule 40 (statement -> OFF .)
    PROCEDURENAME   reduce using rule 40 (statement -> OFF .)
    RBRACKET        reduce using rule 40 (statement -> OFF .)
    END             reduce using rule 40 (statement -> OFF .)


state 17

    (48) statement -> I2C_STOP .

    REPEAT          reduce using rule 48 (statement -> I2C_STOP .)
    WHILE           reduce using rule 48 (statement -> I2C_STOP .)
    LOOP            reduce using rule 48 (statement -> I2C_STOP .)
    FOREVER         reduce using rule 48 (statement -> I2C_STOP .)
    IF              reduce using rule 48 (statement -> I2C_STOP .)
    IFELSE          reduce using rule 48 (statement -> I2C_STOP .)
    WAITUNTIL       reduce using rule 48 (statement -> I2C_STOP .)
    WHEN            reduce using rule 48 (statement -> I2C_STOP .)
    SHOW            reduce using rule 48 (statement -> I2C_STOP .)
    MAKE            reduce using rule 48 (statement -> I2C_STOP .)
    WAIT            reduce using rule 48 (statement -> I2C_STOP .)
    SEND            reduce using rule 48 (statement -> I2C_STOP .)
    RECORD          reduce using rule 48 (statement -> I2C_STOP .)
    ERASE           reduce using rule 48 (statement -> I2C_STOP .)
    SETSVH          reduce using rule 48 (statement -> I2C_STOP .)
    SVR             reduce using rule 48 (statement -> I2C_STOP .)
    SVL             reduce using rule 48 (statement -> I2C_STOP .)
    SETPOWER        reduce using rule 48 (statement -> I2C_STOP .)
    I2C_WRITE       reduce using rule 48 (statement -> I2C_STOP .)
    OUTPUT          reduce using rule 48 (statement -> I2C_STOP .)
    ONFOR           reduce using rule 48 (statement -> I2C_STOP .)
    BSEND           reduce using rule 48 (statement -> I2C_STOP .)
    BSR             reduce using rule 48 (statement -> I2C_STOP .)
    SETDP           reduce using rule 48 (statement -> I2C_STOP .)
    FASTSEND        reduce using rule 48 (statement -> I2C_STOP .)
    BEEP            reduce using rule 48 (statement -> I2C_STOP .)
    STOP            reduce using rule 48 (statement -> I2C_STOP .)
    RESET           reduce using rule 48 (statement -> I2C_STOP .)
    RESETDP         reduce using rule 48 (statement -> I2C_STOP .)
    ON              reduce using rule 48 (statement -> I2C_STOP .)
    OFF             reduce using rule 48 (statement -> I2C_STOP .)
    THISWAY         reduce using rule 48 (statement -> I2C_STOP .)
    THATWAY         reduce using rule 48 (statement -> I2C_STOP .)
    RD              reduce using rule 48 (statement -> I2C_STOP .)
    BRAKE           reduce using rule 48 (statement -> I2C_STOP .)
    LEDON           reduce using rule 48 (statement -> I2C_STOP .)
    LEDOFF          reduce using rule 48 (statement -> I2C_STOP .)
    I2C_START       reduce using rule 48 (statement -> I2C_STOP .)
    I2C_STOP        reduce using rule 48 (statement -> I2C_STOP .)
    WHENOFF         reduce using rule 48 (statement -> I2C_STOP .)
    MOTORATTENTION  reduce using rule 48 (statement -> I2C_STOP .)
    BYTES           reduce using rule 48 (statement -> I2C_STOP .)
    PROCEDURENAME   reduce using rule 48 (statement -> I2C_STOP .)
    RBRACKET        reduce using rule 48 (statement -> I2C_STOP .)
    END             reduce using rule 48 (statement -> I2C_STOP .)


state 18

    (24) statement -> SETSVH . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 91

state 19

    (22) statement -> RECORD . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 92

state 20

    (17) statement -> SHOW . expression
    (18) statement -> SHOW . RECEIVER
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    RECEIVER        shift and go to state 93
    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 94

state 21

    (16) statement -> WHEN . expression LBRACKET expression RBRACKET
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 95

state 22

    (32) statement -> BSR . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 96

state 23

    (43) statement -> RD .

    REPEAT          reduce using rule 43 (statement -> RD .)
    WHILE           reduce using rule 43 (statement -> RD .)
    LOOP            reduce using rule 43 (statement -> RD .)
    FOREVER         reduce using rule 43 (statement -> RD .)
    IF              reduce using rule 43 (statement -> RD .)
    IFELSE          reduce using rule 43 (statement -> RD .)
    WAITUNTIL       reduce using rule 43 (statement -> RD .)
    WHEN            reduce using rule 43 (statement -> RD .)
    SHOW            reduce using rule 43 (statement -> RD .)
    MAKE            reduce using rule 43 (statement -> RD .)
    WAIT            reduce using rule 43 (statement -> RD .)
    SEND            reduce using rule 43 (statement -> RD .)
    RECORD          reduce using rule 43 (statement -> RD .)
    ERASE           reduce using rule 43 (statement -> RD .)
    SETSVH          reduce using rule 43 (statement -> RD .)
    SVR             reduce using rule 43 (statement -> RD .)
    SVL             reduce using rule 43 (statement -> RD .)
    SETPOWER        reduce using rule 43 (statement -> RD .)
    I2C_WRITE       reduce using rule 43 (statement -> RD .)
    OUTPUT          reduce using rule 43 (statement -> RD .)
    ONFOR           reduce using rule 43 (statement -> RD .)
    BSEND           reduce using rule 43 (statement -> RD .)
    BSR             reduce using rule 43 (statement -> RD .)
    SETDP           reduce using rule 43 (statement -> RD .)
    FASTSEND        reduce using rule 43 (statement -> RD .)
    BEEP            reduce using rule 43 (statement -> RD .)
    STOP            reduce using rule 43 (statement -> RD .)
    RESET           reduce using rule 43 (statement -> RD .)
    RESETDP         reduce using rule 43 (statement -> RD .)
    ON              reduce using rule 43 (statement -> RD .)
    OFF             reduce using rule 43 (statement -> RD .)
    THISWAY         reduce using rule 43 (statement -> RD .)
    THATWAY         reduce using rule 43 (statement -> RD .)
    RD              reduce using rule 43 (statement -> RD .)
    BRAKE           reduce using rule 43 (statement -> RD .)
    LEDON           reduce using rule 43 (statement -> RD .)
    LEDOFF          reduce using rule 43 (statement -> RD .)
    I2C_START       reduce using rule 43 (statement -> RD .)
    I2C_STOP        reduce using rule 43 (statement -> RD .)
    WHENOFF         reduce using rule 43 (statement -> RD .)
    MOTORATTENTION  reduce using rule 43 (statement -> RD .)
    BYTES           reduce using rule 43 (statement -> RD .)
    PROCEDURENAME   reduce using rule 43 (statement -> RD .)
    RBRACKET        reduce using rule 43 (statement -> RD .)
    END             reduce using rule 43 (statement -> RD .)


state 24

    (23) statement -> ERASE . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 97

state 25

    (14) statement -> IFELSE . expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 98

state 26

    (7) statements -> statement . statements
    (8) statements -> statement .
    (7) statements -> . statement statements
    (8) statements -> . statement
    (9) statement -> . REPEAT expression LBRACKET statements RBRACKET
    (10) statement -> . WHILE expression LBRACKET statements RBRACKET
    (11) statement -> . LOOP LBRACKET statements RBRACKET
    (12) statement -> . FOREVER LBRACKET statements RBRACKET
    (13) statement -> . IF expression LBRACKET statements RBRACKET
    (14) statement -> . IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET
    (15) statement -> . WAITUNTIL LBRACKET expression RBRACKET
    (16) statement -> . WHEN expression LBRACKET expression RBRACKET
    (17) statement -> . SHOW expression
    (18) statement -> . SHOW RECEIVER
    (19) statement -> . MAKE RECEIVER expression
    (20) statement -> . WAIT expression
    (21) statement -> . SEND expression
    (22) statement -> . RECORD expression
    (23) statement -> . ERASE expression
    (24) statement -> . SETSVH expression
    (25) statement -> . SVR expression
    (26) statement -> . SVL expression
    (27) statement -> . SETPOWER expression
    (28) statement -> . I2C_WRITE expression
    (29) statement -> . OUTPUT expression
    (30) statement -> . ONFOR expression
    (31) statement -> . BSEND expression
    (32) statement -> . BSR expression
    (33) statement -> . SETDP expression
    (34) statement -> . FASTSEND expression
    (35) statement -> . BEEP
    (36) statement -> . STOP
    (37) statement -> . RESET
    (38) statement -> . RESETDP
    (39) statement -> . ON
    (40) statement -> . OFF
    (41) statement -> . THISWAY
    (42) statement -> . THATWAY
    (43) statement -> . RD
    (44) statement -> . BRAKE
    (45) statement -> . LEDON
    (46) statement -> . LEDOFF
    (47) statement -> . I2C_START
    (48) statement -> . I2C_STOP
    (49) statement -> . WHENOFF
    (50) statement -> . procedurecall
    (51) statement -> . MOTORATTENTION
    (52) statement -> . BYTES
    (96) procedurecall -> . PROCEDURENAME parm
    (97) procedurecall -> . PROCEDURENAME

    END             reduce using rule 8 (statements -> statement .)
    RBRACKET        reduce using rule 8 (statements -> statement .)
    REPEAT          shift and go to state 32
    WHILE           shift and go to state 13
    LOOP            shift and go to state 53
    FOREVER         shift and go to state 7
    IF              shift and go to state 28
    IFELSE          shift and go to state 25
    WAITUNTIL       shift and go to state 51
    WHEN            shift and go to state 21
    SHOW            shift and go to state 20
    MAKE            shift and go to state 45
    WAIT            shift and go to state 41
    SEND            shift and go to state 47
    RECORD          shift and go to state 19
    ERASE           shift and go to state 24
    SETSVH          shift and go to state 18
    SVR             shift and go to state 39
    SVL             shift and go to state 31
    SETPOWER        shift and go to state 10
    I2C_WRITE       shift and go to state 40
    OUTPUT          shift and go to state 52
    ONFOR           shift and go to state 37
    BSEND           shift and go to state 42
    BSR             shift and go to state 22
    SETDP           shift and go to state 27
    FASTSEND        shift and go to state 14
    BEEP            shift and go to state 48
    STOP            shift and go to state 11
    RESET           shift and go to state 6
    RESETDP         shift and go to state 33
    ON              shift and go to state 15
    OFF             shift and go to state 16
    THISWAY         shift and go to state 49
    THATWAY         shift and go to state 36
    RD              shift and go to state 23
    BRAKE           shift and go to state 38
    LEDON           shift and go to state 43
    LEDOFF          shift and go to state 9
    I2C_START       shift and go to state 46
    I2C_STOP        shift and go to state 17
    WHENOFF         shift and go to state 44
    MOTORATTENTION  shift and go to state 30
    BYTES           shift and go to state 35
    PROCEDURENAME   shift and go to state 12

    statements                     shift and go to state 99
    procedurecall                  shift and go to state 29
    statement                      shift and go to state 26

state 27

    (33) statement -> SETDP . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 100

state 28

    (13) statement -> IF . expression LBRACKET statements RBRACKET
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 101

state 29

    (50) statement -> procedurecall .

    REPEAT          reduce using rule 50 (statement -> procedurecall .)
    WHILE           reduce using rule 50 (statement -> procedurecall .)
    LOOP            reduce using rule 50 (statement -> procedurecall .)
    FOREVER         reduce using rule 50 (statement -> procedurecall .)
    IF              reduce using rule 50 (statement -> procedurecall .)
    IFELSE          reduce using rule 50 (statement -> procedurecall .)
    WAITUNTIL       reduce using rule 50 (statement -> procedurecall .)
    WHEN            reduce using rule 50 (statement -> procedurecall .)
    SHOW            reduce using rule 50 (statement -> procedurecall .)
    MAKE            reduce using rule 50 (statement -> procedurecall .)
    WAIT            reduce using rule 50 (statement -> procedurecall .)
    SEND            reduce using rule 50 (statement -> procedurecall .)
    RECORD          reduce using rule 50 (statement -> procedurecall .)
    ERASE           reduce using rule 50 (statement -> procedurecall .)
    SETSVH          reduce using rule 50 (statement -> procedurecall .)
    SVR             reduce using rule 50 (statement -> procedurecall .)
    SVL             reduce using rule 50 (statement -> procedurecall .)
    SETPOWER        reduce using rule 50 (statement -> procedurecall .)
    I2C_WRITE       reduce using rule 50 (statement -> procedurecall .)
    OUTPUT          reduce using rule 50 (statement -> procedurecall .)
    ONFOR           reduce using rule 50 (statement -> procedurecall .)
    BSEND           reduce using rule 50 (statement -> procedurecall .)
    BSR             reduce using rule 50 (statement -> procedurecall .)
    SETDP           reduce using rule 50 (statement -> procedurecall .)
    FASTSEND        reduce using rule 50 (statement -> procedurecall .)
    BEEP            reduce using rule 50 (statement -> procedurecall .)
    STOP            reduce using rule 50 (statement -> procedurecall .)
    RESET           reduce using rule 50 (statement -> procedurecall .)
    RESETDP         reduce using rule 50 (statement -> procedurecall .)
    ON              reduce using rule 50 (statement -> procedurecall .)
    OFF             reduce using rule 50 (statement -> procedurecall .)
    THISWAY         reduce using rule 50 (statement -> procedurecall .)
    THATWAY         reduce using rule 50 (statement -> procedurecall .)
    RD              reduce using rule 50 (statement -> procedurecall .)
    BRAKE           reduce using rule 50 (statement -> procedurecall .)
    LEDON           reduce using rule 50 (statement -> procedurecall .)
    LEDOFF          reduce using rule 50 (statement -> procedurecall .)
    I2C_START       reduce using rule 50 (statement -> procedurecall .)
    I2C_STOP        reduce using rule 50 (statement -> procedurecall .)
    WHENOFF         reduce using rule 50 (statement -> procedurecall .)
    MOTORATTENTION  reduce using rule 50 (statement -> procedurecall .)
    BYTES           reduce using rule 50 (statement -> procedurecall .)
    PROCEDURENAME   reduce using rule 50 (statement -> procedurecall .)
    RBRACKET        reduce using rule 50 (statement -> procedurecall .)
    END             reduce using rule 50 (statement -> procedurecall .)


state 30

    (51) statement -> MOTORATTENTION .

    REPEAT          reduce using rule 51 (statement -> MOTORATTENTION .)
    WHILE           reduce using rule 51 (statement -> MOTORATTENTION .)
    LOOP            reduce using rule 51 (statement -> MOTORATTENTION .)
    FOREVER         reduce using rule 51 (statement -> MOTORATTENTION .)
    IF              reduce using rule 51 (statement -> MOTORATTENTION .)
    IFELSE          reduce using rule 51 (statement -> MOTORATTENTION .)
    WAITUNTIL       reduce using rule 51 (statement -> MOTORATTENTION .)
    WHEN            reduce using rule 51 (statement -> MOTORATTENTION .)
    SHOW            reduce using rule 51 (statement -> MOTORATTENTION .)
    MAKE            reduce using rule 51 (statement -> MOTORATTENTION .)
    WAIT            reduce using rule 51 (statement -> MOTORATTENTION .)
    SEND            reduce using rule 51 (statement -> MOTORATTENTION .)
    RECORD          reduce using rule 51 (statement -> MOTORATTENTION .)
    ERASE           reduce using rule 51 (statement -> MOTORATTENTION .)
    SETSVH          reduce using rule 51 (statement -> MOTORATTENTION .)
    SVR             reduce using rule 51 (statement -> MOTORATTENTION .)
    SVL             reduce using rule 51 (statement -> MOTORATTENTION .)
    SETPOWER        reduce using rule 51 (statement -> MOTORATTENTION .)
    I2C_WRITE       reduce using rule 51 (statement -> MOTORATTENTION .)
    OUTPUT          reduce using rule 51 (statement -> MOTORATTENTION .)
    ONFOR           reduce using rule 51 (statement -> MOTORATTENTION .)
    BSEND           reduce using rule 51 (statement -> MOTORATTENTION .)
    BSR             reduce using rule 51 (statement -> MOTORATTENTION .)
    SETDP           reduce using rule 51 (statement -> MOTORATTENTION .)
    FASTSEND        reduce using rule 51 (statement -> MOTORATTENTION .)
    BEEP            reduce using rule 51 (statement -> MOTORATTENTION .)
    STOP            reduce using rule 51 (statement -> MOTORATTENTION .)
    RESET           reduce using rule 51 (statement -> MOTORATTENTION .)
    RESETDP         reduce using rule 51 (statement -> MOTORATTENTION .)
    ON              reduce using rule 51 (statement -> MOTORATTENTION .)
    OFF             reduce using rule 51 (statement -> MOTORATTENTION .)
    THISWAY         reduce using rule 51 (statement -> MOTORATTENTION .)
    THATWAY         reduce using rule 51 (statement -> MOTORATTENTION .)
    RD              reduce using rule 51 (statement -> MOTORATTENTION .)
    BRAKE           reduce using rule 51 (statement -> MOTORATTENTION .)
    LEDON           reduce using rule 51 (statement -> MOTORATTENTION .)
    LEDOFF          reduce using rule 51 (statement -> MOTORATTENTION .)
    I2C_START       reduce using rule 51 (statement -> MOTORATTENTION .)
    I2C_STOP        reduce using rule 51 (statement -> MOTORATTENTION .)
    WHENOFF         reduce using rule 51 (statement -> MOTORATTENTION .)
    MOTORATTENTION  reduce using rule 51 (statement -> MOTORATTENTION .)
    BYTES           reduce using rule 51 (statement -> MOTORATTENTION .)
    PROCEDURENAME   reduce using rule 51 (statement -> MOTORATTENTION .)
    RBRACKET        reduce using rule 51 (statement -> MOTORATTENTION .)
    END             reduce using rule 51 (statement -> MOTORATTENTION .)


state 31

    (26) statement -> SVL . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 102

state 32

    (9) statement -> REPEAT . expression LBRACKET statements RBRACKET
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 103

state 33

    (38) statement -> RESETDP .

    REPEAT          reduce using rule 38 (statement -> RESETDP .)
    WHILE           reduce using rule 38 (statement -> RESETDP .)
    LOOP            reduce using rule 38 (statement -> RESETDP .)
    FOREVER         reduce using rule 38 (statement -> RESETDP .)
    IF              reduce using rule 38 (statement -> RESETDP .)
    IFELSE          reduce using rule 38 (statement -> RESETDP .)
    WAITUNTIL       reduce using rule 38 (statement -> RESETDP .)
    WHEN            reduce using rule 38 (statement -> RESETDP .)
    SHOW            reduce using rule 38 (statement -> RESETDP .)
    MAKE            reduce using rule 38 (statement -> RESETDP .)
    WAIT            reduce using rule 38 (statement -> RESETDP .)
    SEND            reduce using rule 38 (statement -> RESETDP .)
    RECORD          reduce using rule 38 (statement -> RESETDP .)
    ERASE           reduce using rule 38 (statement -> RESETDP .)
    SETSVH          reduce using rule 38 (statement -> RESETDP .)
    SVR             reduce using rule 38 (statement -> RESETDP .)
    SVL             reduce using rule 38 (statement -> RESETDP .)
    SETPOWER        reduce using rule 38 (statement -> RESETDP .)
    I2C_WRITE       reduce using rule 38 (statement -> RESETDP .)
    OUTPUT          reduce using rule 38 (statement -> RESETDP .)
    ONFOR           reduce using rule 38 (statement -> RESETDP .)
    BSEND           reduce using rule 38 (statement -> RESETDP .)
    BSR             reduce using rule 38 (statement -> RESETDP .)
    SETDP           reduce using rule 38 (statement -> RESETDP .)
    FASTSEND        reduce using rule 38 (statement -> RESETDP .)
    BEEP            reduce using rule 38 (statement -> RESETDP .)
    STOP            reduce using rule 38 (statement -> RESETDP .)
    RESET           reduce using rule 38 (statement -> RESETDP .)
    RESETDP         reduce using rule 38 (statement -> RESETDP .)
    ON              reduce using rule 38 (statement -> RESETDP .)
    OFF             reduce using rule 38 (statement -> RESETDP .)
    THISWAY         reduce using rule 38 (statement -> RESETDP .)
    THATWAY         reduce using rule 38 (statement -> RESETDP .)
    RD              reduce using rule 38 (statement -> RESETDP .)
    BRAKE           reduce using rule 38 (statement -> RESETDP .)
    LEDON           reduce using rule 38 (statement -> RESETDP .)
    LEDOFF          reduce using rule 38 (statement -> RESETDP .)
    I2C_START       reduce using rule 38 (statement -> RESETDP .)
    I2C_STOP        reduce using rule 38 (statement -> RESETDP .)
    WHENOFF         reduce using rule 38 (statement -> RESETDP .)
    MOTORATTENTION  reduce using rule 38 (statement -> RESETDP .)
    BYTES           reduce using rule 38 (statement -> RESETDP .)
    PROCEDURENAME   reduce using rule 38 (statement -> RESETDP .)
    RBRACKET        reduce using rule 38 (statement -> RESETDP .)
    END             reduce using rule 38 (statement -> RESETDP .)


state 34

    (4) procedure -> TO PROCEDURENAME parameterDeclaration . statements END
    (7) statements -> . statement statements
    (8) statements -> . statement
    (9) statement -> . REPEAT expression LBRACKET statements RBRACKET
    (10) statement -> . WHILE expression LBRACKET statements RBRACKET
    (11) statement -> . LOOP LBRACKET statements RBRACKET
    (12) statement -> . FOREVER LBRACKET statements RBRACKET
    (13) statement -> . IF expression LBRACKET statements RBRACKET
    (14) statement -> . IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET
    (15) statement -> . WAITUNTIL LBRACKET expression RBRACKET
    (16) statement -> . WHEN expression LBRACKET expression RBRACKET
    (17) statement -> . SHOW expression
    (18) statement -> . SHOW RECEIVER
    (19) statement -> . MAKE RECEIVER expression
    (20) statement -> . WAIT expression
    (21) statement -> . SEND expression
    (22) statement -> . RECORD expression
    (23) statement -> . ERASE expression
    (24) statement -> . SETSVH expression
    (25) statement -> . SVR expression
    (26) statement -> . SVL expression
    (27) statement -> . SETPOWER expression
    (28) statement -> . I2C_WRITE expression
    (29) statement -> . OUTPUT expression
    (30) statement -> . ONFOR expression
    (31) statement -> . BSEND expression
    (32) statement -> . BSR expression
    (33) statement -> . SETDP expression
    (34) statement -> . FASTSEND expression
    (35) statement -> . BEEP
    (36) statement -> . STOP
    (37) statement -> . RESET
    (38) statement -> . RESETDP
    (39) statement -> . ON
    (40) statement -> . OFF
    (41) statement -> . THISWAY
    (42) statement -> . THATWAY
    (43) statement -> . RD
    (44) statement -> . BRAKE
    (45) statement -> . LEDON
    (46) statement -> . LEDOFF
    (47) statement -> . I2C_START
    (48) statement -> . I2C_STOP
    (49) statement -> . WHENOFF
    (50) statement -> . procedurecall
    (51) statement -> . MOTORATTENTION
    (52) statement -> . BYTES
    (96) procedurecall -> . PROCEDURENAME parm
    (97) procedurecall -> . PROCEDURENAME

    REPEAT          shift and go to state 32
    WHILE           shift and go to state 13
    LOOP            shift and go to state 53
    FOREVER         shift and go to state 7
    IF              shift and go to state 28
    IFELSE          shift and go to state 25
    WAITUNTIL       shift and go to state 51
    WHEN            shift and go to state 21
    SHOW            shift and go to state 20
    MAKE            shift and go to state 45
    WAIT            shift and go to state 41
    SEND            shift and go to state 47
    RECORD          shift and go to state 19
    ERASE           shift and go to state 24
    SETSVH          shift and go to state 18
    SVR             shift and go to state 39
    SVL             shift and go to state 31
    SETPOWER        shift and go to state 10
    I2C_WRITE       shift and go to state 40
    OUTPUT          shift and go to state 52
    ONFOR           shift and go to state 37
    BSEND           shift and go to state 42
    BSR             shift and go to state 22
    SETDP           shift and go to state 27
    FASTSEND        shift and go to state 14
    BEEP            shift and go to state 48
    STOP            shift and go to state 11
    RESET           shift and go to state 6
    RESETDP         shift and go to state 33
    ON              shift and go to state 15
    OFF             shift and go to state 16
    THISWAY         shift and go to state 49
    THATWAY         shift and go to state 36
    RD              shift and go to state 23
    BRAKE           shift and go to state 38
    LEDON           shift and go to state 43
    LEDOFF          shift and go to state 9
    I2C_START       shift and go to state 46
    I2C_STOP        shift and go to state 17
    WHENOFF         shift and go to state 44
    MOTORATTENTION  shift and go to state 30
    BYTES           shift and go to state 35
    PROCEDURENAME   shift and go to state 12

    statements                     shift and go to state 104
    statement                      shift and go to state 26
    procedurecall                  shift and go to state 29

state 35

    (52) statement -> BYTES .

    REPEAT          reduce using rule 52 (statement -> BYTES .)
    WHILE           reduce using rule 52 (statement -> BYTES .)
    LOOP            reduce using rule 52 (statement -> BYTES .)
    FOREVER         reduce using rule 52 (statement -> BYTES .)
    IF              reduce using rule 52 (statement -> BYTES .)
    IFELSE          reduce using rule 52 (statement -> BYTES .)
    WAITUNTIL       reduce using rule 52 (statement -> BYTES .)
    WHEN            reduce using rule 52 (statement -> BYTES .)
    SHOW            reduce using rule 52 (statement -> BYTES .)
    MAKE            reduce using rule 52 (statement -> BYTES .)
    WAIT            reduce using rule 52 (statement -> BYTES .)
    SEND            reduce using rule 52 (statement -> BYTES .)
    RECORD          reduce using rule 52 (statement -> BYTES .)
    ERASE           reduce using rule 52 (statement -> BYTES .)
    SETSVH          reduce using rule 52 (statement -> BYTES .)
    SVR             reduce using rule 52 (statement -> BYTES .)
    SVL             reduce using rule 52 (statement -> BYTES .)
    SETPOWER        reduce using rule 52 (statement -> BYTES .)
    I2C_WRITE       reduce using rule 52 (statement -> BYTES .)
    OUTPUT          reduce using rule 52 (statement -> BYTES .)
    ONFOR           reduce using rule 52 (statement -> BYTES .)
    BSEND           reduce using rule 52 (statement -> BYTES .)
    BSR             reduce using rule 52 (statement -> BYTES .)
    SETDP           reduce using rule 52 (statement -> BYTES .)
    FASTSEND        reduce using rule 52 (statement -> BYTES .)
    BEEP            reduce using rule 52 (statement -> BYTES .)
    STOP            reduce using rule 52 (statement -> BYTES .)
    RESET           reduce using rule 52 (statement -> BYTES .)
    RESETDP         reduce using rule 52 (statement -> BYTES .)
    ON              reduce using rule 52 (statement -> BYTES .)
    OFF             reduce using rule 52 (statement -> BYTES .)
    THISWAY         reduce using rule 52 (statement -> BYTES .)
    THATWAY         reduce using rule 52 (statement -> BYTES .)
    RD              reduce using rule 52 (statement -> BYTES .)
    BRAKE           reduce using rule 52 (statement -> BYTES .)
    LEDON           reduce using rule 52 (statement -> BYTES .)
    LEDOFF          reduce using rule 52 (statement -> BYTES .)
    I2C_START       reduce using rule 52 (statement -> BYTES .)
    I2C_STOP        reduce using rule 52 (statement -> BYTES .)
    WHENOFF         reduce using rule 52 (statement -> BYTES .)
    MOTORATTENTION  reduce using rule 52 (statement -> BYTES .)
    BYTES           reduce using rule 52 (statement -> BYTES .)
    PROCEDURENAME   reduce using rule 52 (statement -> BYTES .)
    RBRACKET        reduce using rule 52 (statement -> BYTES .)
    END             reduce using rule 52 (statement -> BYTES .)


state 36

    (42) statement -> THATWAY .

    REPEAT          reduce using rule 42 (statement -> THATWAY .)
    WHILE           reduce using rule 42 (statement -> THATWAY .)
    LOOP            reduce using rule 42 (statement -> THATWAY .)
    FOREVER         reduce using rule 42 (statement -> THATWAY .)
    IF              reduce using rule 42 (statement -> THATWAY .)
    IFELSE          reduce using rule 42 (statement -> THATWAY .)
    WAITUNTIL       reduce using rule 42 (statement -> THATWAY .)
    WHEN            reduce using rule 42 (statement -> THATWAY .)
    SHOW            reduce using rule 42 (statement -> THATWAY .)
    MAKE            reduce using rule 42 (statement -> THATWAY .)
    WAIT            reduce using rule 42 (statement -> THATWAY .)
    SEND            reduce using rule 42 (statement -> THATWAY .)
    RECORD          reduce using rule 42 (statement -> THATWAY .)
    ERASE           reduce using rule 42 (statement -> THATWAY .)
    SETSVH          reduce using rule 42 (statement -> THATWAY .)
    SVR             reduce using rule 42 (statement -> THATWAY .)
    SVL             reduce using rule 42 (statement -> THATWAY .)
    SETPOWER        reduce using rule 42 (statement -> THATWAY .)
    I2C_WRITE       reduce using rule 42 (statement -> THATWAY .)
    OUTPUT          reduce using rule 42 (statement -> THATWAY .)
    ONFOR           reduce using rule 42 (statement -> THATWAY .)
    BSEND           reduce using rule 42 (statement -> THATWAY .)
    BSR             reduce using rule 42 (statement -> THATWAY .)
    SETDP           reduce using rule 42 (statement -> THATWAY .)
    FASTSEND        reduce using rule 42 (statement -> THATWAY .)
    BEEP            reduce using rule 42 (statement -> THATWAY .)
    STOP            reduce using rule 42 (statement -> THATWAY .)
    RESET           reduce using rule 42 (statement -> THATWAY .)
    RESETDP         reduce using rule 42 (statement -> THATWAY .)
    ON              reduce using rule 42 (statement -> THATWAY .)
    OFF             reduce using rule 42 (statement -> THATWAY .)
    THISWAY         reduce using rule 42 (statement -> THATWAY .)
    THATWAY         reduce using rule 42 (statement -> THATWAY .)
    RD              reduce using rule 42 (statement -> THATWAY .)
    BRAKE           reduce using rule 42 (statement -> THATWAY .)
    LEDON           reduce using rule 42 (statement -> THATWAY .)
    LEDOFF          reduce using rule 42 (statement -> THATWAY .)
    I2C_START       reduce using rule 42 (statement -> THATWAY .)
    I2C_STOP        reduce using rule 42 (statement -> THATWAY .)
    WHENOFF         reduce using rule 42 (statement -> THATWAY .)
    MOTORATTENTION  reduce using rule 42 (statement -> THATWAY .)
    BYTES           reduce using rule 42 (statement -> THATWAY .)
    PROCEDURENAME   reduce using rule 42 (statement -> THATWAY .)
    RBRACKET        reduce using rule 42 (statement -> THATWAY .)
    END             reduce using rule 42 (statement -> THATWAY .)


state 37

    (30) statement -> ONFOR . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 105

state 38

    (44) statement -> BRAKE .

    REPEAT          reduce using rule 44 (statement -> BRAKE .)
    WHILE           reduce using rule 44 (statement -> BRAKE .)
    LOOP            reduce using rule 44 (statement -> BRAKE .)
    FOREVER         reduce using rule 44 (statement -> BRAKE .)
    IF              reduce using rule 44 (statement -> BRAKE .)
    IFELSE          reduce using rule 44 (statement -> BRAKE .)
    WAITUNTIL       reduce using rule 44 (statement -> BRAKE .)
    WHEN            reduce using rule 44 (statement -> BRAKE .)
    SHOW            reduce using rule 44 (statement -> BRAKE .)
    MAKE            reduce using rule 44 (statement -> BRAKE .)
    WAIT            reduce using rule 44 (statement -> BRAKE .)
    SEND            reduce using rule 44 (statement -> BRAKE .)
    RECORD          reduce using rule 44 (statement -> BRAKE .)
    ERASE           reduce using rule 44 (statement -> BRAKE .)
    SETSVH          reduce using rule 44 (statement -> BRAKE .)
    SVR             reduce using rule 44 (statement -> BRAKE .)
    SVL             reduce using rule 44 (statement -> BRAKE .)
    SETPOWER        reduce using rule 44 (statement -> BRAKE .)
    I2C_WRITE       reduce using rule 44 (statement -> BRAKE .)
    OUTPUT          reduce using rule 44 (statement -> BRAKE .)
    ONFOR           reduce using rule 44 (statement -> BRAKE .)
    BSEND           reduce using rule 44 (statement -> BRAKE .)
    BSR             reduce using rule 44 (statement -> BRAKE .)
    SETDP           reduce using rule 44 (statement -> BRAKE .)
    FASTSEND        reduce using rule 44 (statement -> BRAKE .)
    BEEP            reduce using rule 44 (statement -> BRAKE .)
    STOP            reduce using rule 44 (statement -> BRAKE .)
    RESET           reduce using rule 44 (statement -> BRAKE .)
    RESETDP         reduce using rule 44 (statement -> BRAKE .)
    ON              reduce using rule 44 (statement -> BRAKE .)
    OFF             reduce using rule 44 (statement -> BRAKE .)
    THISWAY         reduce using rule 44 (statement -> BRAKE .)
    THATWAY         reduce using rule 44 (statement -> BRAKE .)
    RD              reduce using rule 44 (statement -> BRAKE .)
    BRAKE           reduce using rule 44 (statement -> BRAKE .)
    LEDON           reduce using rule 44 (statement -> BRAKE .)
    LEDOFF          reduce using rule 44 (statement -> BRAKE .)
    I2C_START       reduce using rule 44 (statement -> BRAKE .)
    I2C_STOP        reduce using rule 44 (statement -> BRAKE .)
    WHENOFF         reduce using rule 44 (statement -> BRAKE .)
    MOTORATTENTION  reduce using rule 44 (statement -> BRAKE .)
    BYTES           reduce using rule 44 (statement -> BRAKE .)
    PROCEDURENAME   reduce using rule 44 (statement -> BRAKE .)
    RBRACKET        reduce using rule 44 (statement -> BRAKE .)
    END             reduce using rule 44 (statement -> BRAKE .)


state 39

    (25) statement -> SVR . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 106

state 40

    (28) statement -> I2C_WRITE . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 107

state 41

    (20) statement -> WAIT . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 108

state 42

    (31) statement -> BSEND . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 109

state 43

    (45) statement -> LEDON .

    REPEAT          reduce using rule 45 (statement -> LEDON .)
    WHILE           reduce using rule 45 (statement -> LEDON .)
    LOOP            reduce using rule 45 (statement -> LEDON .)
    FOREVER         reduce using rule 45 (statement -> LEDON .)
    IF              reduce using rule 45 (statement -> LEDON .)
    IFELSE          reduce using rule 45 (statement -> LEDON .)
    WAITUNTIL       reduce using rule 45 (statement -> LEDON .)
    WHEN            reduce using rule 45 (statement -> LEDON .)
    SHOW            reduce using rule 45 (statement -> LEDON .)
    MAKE            reduce using rule 45 (statement -> LEDON .)
    WAIT            reduce using rule 45 (statement -> LEDON .)
    SEND            reduce using rule 45 (statement -> LEDON .)
    RECORD          reduce using rule 45 (statement -> LEDON .)
    ERASE           reduce using rule 45 (statement -> LEDON .)
    SETSVH          reduce using rule 45 (statement -> LEDON .)
    SVR             reduce using rule 45 (statement -> LEDON .)
    SVL             reduce using rule 45 (statement -> LEDON .)
    SETPOWER        reduce using rule 45 (statement -> LEDON .)
    I2C_WRITE       reduce using rule 45 (statement -> LEDON .)
    OUTPUT          reduce using rule 45 (statement -> LEDON .)
    ONFOR           reduce using rule 45 (statement -> LEDON .)
    BSEND           reduce using rule 45 (statement -> LEDON .)
    BSR             reduce using rule 45 (statement -> LEDON .)
    SETDP           reduce using rule 45 (statement -> LEDON .)
    FASTSEND        reduce using rule 45 (statement -> LEDON .)
    BEEP            reduce using rule 45 (statement -> LEDON .)
    STOP            reduce using rule 45 (statement -> LEDON .)
    RESET           reduce using rule 45 (statement -> LEDON .)
    RESETDP         reduce using rule 45 (statement -> LEDON .)
    ON              reduce using rule 45 (statement -> LEDON .)
    OFF             reduce using rule 45 (statement -> LEDON .)
    THISWAY         reduce using rule 45 (statement -> LEDON .)
    THATWAY         reduce using rule 45 (statement -> LEDON .)
    RD              reduce using rule 45 (statement -> LEDON .)
    BRAKE           reduce using rule 45 (statement -> LEDON .)
    LEDON           reduce using rule 45 (statement -> LEDON .)
    LEDOFF          reduce using rule 45 (statement -> LEDON .)
    I2C_START       reduce using rule 45 (statement -> LEDON .)
    I2C_STOP        reduce using rule 45 (statement -> LEDON .)
    WHENOFF         reduce using rule 45 (statement -> LEDON .)
    MOTORATTENTION  reduce using rule 45 (statement -> LEDON .)
    BYTES           reduce using rule 45 (statement -> LEDON .)
    PROCEDURENAME   reduce using rule 45 (statement -> LEDON .)
    RBRACKET        reduce using rule 45 (statement -> LEDON .)
    END             reduce using rule 45 (statement -> LEDON .)


state 44

    (49) statement -> WHENOFF .

    REPEAT          reduce using rule 49 (statement -> WHENOFF .)
    WHILE           reduce using rule 49 (statement -> WHENOFF .)
    LOOP            reduce using rule 49 (statement -> WHENOFF .)
    FOREVER         reduce using rule 49 (statement -> WHENOFF .)
    IF              reduce using rule 49 (statement -> WHENOFF .)
    IFELSE          reduce using rule 49 (statement -> WHENOFF .)
    WAITUNTIL       reduce using rule 49 (statement -> WHENOFF .)
    WHEN            reduce using rule 49 (statement -> WHENOFF .)
    SHOW            reduce using rule 49 (statement -> WHENOFF .)
    MAKE            reduce using rule 49 (statement -> WHENOFF .)
    WAIT            reduce using rule 49 (statement -> WHENOFF .)
    SEND            reduce using rule 49 (statement -> WHENOFF .)
    RECORD          reduce using rule 49 (statement -> WHENOFF .)
    ERASE           reduce using rule 49 (statement -> WHENOFF .)
    SETSVH          reduce using rule 49 (statement -> WHENOFF .)
    SVR             reduce using rule 49 (statement -> WHENOFF .)
    SVL             reduce using rule 49 (statement -> WHENOFF .)
    SETPOWER        reduce using rule 49 (statement -> WHENOFF .)
    I2C_WRITE       reduce using rule 49 (statement -> WHENOFF .)
    OUTPUT          reduce using rule 49 (statement -> WHENOFF .)
    ONFOR           reduce using rule 49 (statement -> WHENOFF .)
    BSEND           reduce using rule 49 (statement -> WHENOFF .)
    BSR             reduce using rule 49 (statement -> WHENOFF .)
    SETDP           reduce using rule 49 (statement -> WHENOFF .)
    FASTSEND        reduce using rule 49 (statement -> WHENOFF .)
    BEEP            reduce using rule 49 (statement -> WHENOFF .)
    STOP            reduce using rule 49 (statement -> WHENOFF .)
    RESET           reduce using rule 49 (statement -> WHENOFF .)
    RESETDP         reduce using rule 49 (statement -> WHENOFF .)
    ON              reduce using rule 49 (statement -> WHENOFF .)
    OFF             reduce using rule 49 (statement -> WHENOFF .)
    THISWAY         reduce using rule 49 (statement -> WHENOFF .)
    THATWAY         reduce using rule 49 (statement -> WHENOFF .)
    RD              reduce using rule 49 (statement -> WHENOFF .)
    BRAKE           reduce using rule 49 (statement -> WHENOFF .)
    LEDON           reduce using rule 49 (statement -> WHENOFF .)
    LEDOFF          reduce using rule 49 (statement -> WHENOFF .)
    I2C_START       reduce using rule 49 (statement -> WHENOFF .)
    I2C_STOP        reduce using rule 49 (statement -> WHENOFF .)
    WHENOFF         reduce using rule 49 (statement -> WHENOFF .)
    MOTORATTENTION  reduce using rule 49 (statement -> WHENOFF .)
    BYTES           reduce using rule 49 (statement -> WHENOFF .)
    PROCEDURENAME   reduce using rule 49 (statement -> WHENOFF .)
    RBRACKET        reduce using rule 49 (statement -> WHENOFF .)
    END             reduce using rule 49 (statement -> WHENOFF .)


state 45

    (19) statement -> MAKE . RECEIVER expression

    RECEIVER        shift and go to state 110


state 46

    (47) statement -> I2C_START .

    REPEAT          reduce using rule 47 (statement -> I2C_START .)
    WHILE           reduce using rule 47 (statement -> I2C_START .)
    LOOP            reduce using rule 47 (statement -> I2C_START .)
    FOREVER         reduce using rule 47 (statement -> I2C_START .)
    IF              reduce using rule 47 (statement -> I2C_START .)
    IFELSE          reduce using rule 47 (statement -> I2C_START .)
    WAITUNTIL       reduce using rule 47 (statement -> I2C_START .)
    WHEN            reduce using rule 47 (statement -> I2C_START .)
    SHOW            reduce using rule 47 (statement -> I2C_START .)
    MAKE            reduce using rule 47 (statement -> I2C_START .)
    WAIT            reduce using rule 47 (statement -> I2C_START .)
    SEND            reduce using rule 47 (statement -> I2C_START .)
    RECORD          reduce using rule 47 (statement -> I2C_START .)
    ERASE           reduce using rule 47 (statement -> I2C_START .)
    SETSVH          reduce using rule 47 (statement -> I2C_START .)
    SVR             reduce using rule 47 (statement -> I2C_START .)
    SVL             reduce using rule 47 (statement -> I2C_START .)
    SETPOWER        reduce using rule 47 (statement -> I2C_START .)
    I2C_WRITE       reduce using rule 47 (statement -> I2C_START .)
    OUTPUT          reduce using rule 47 (statement -> I2C_START .)
    ONFOR           reduce using rule 47 (statement -> I2C_START .)
    BSEND           reduce using rule 47 (statement -> I2C_START .)
    BSR             reduce using rule 47 (statement -> I2C_START .)
    SETDP           reduce using rule 47 (statement -> I2C_START .)
    FASTSEND        reduce using rule 47 (statement -> I2C_START .)
    BEEP            reduce using rule 47 (statement -> I2C_START .)
    STOP            reduce using rule 47 (statement -> I2C_START .)
    RESET           reduce using rule 47 (statement -> I2C_START .)
    RESETDP         reduce using rule 47 (statement -> I2C_START .)
    ON              reduce using rule 47 (statement -> I2C_START .)
    OFF             reduce using rule 47 (statement -> I2C_START .)
    THISWAY         reduce using rule 47 (statement -> I2C_START .)
    THATWAY         reduce using rule 47 (statement -> I2C_START .)
    RD              reduce using rule 47 (statement -> I2C_START .)
    BRAKE           reduce using rule 47 (statement -> I2C_START .)
    LEDON           reduce using rule 47 (statement -> I2C_START .)
    LEDOFF          reduce using rule 47 (statement -> I2C_START .)
    I2C_START       reduce using rule 47 (statement -> I2C_START .)
    I2C_STOP        reduce using rule 47 (statement -> I2C_START .)
    WHENOFF         reduce using rule 47 (statement -> I2C_START .)
    MOTORATTENTION  reduce using rule 47 (statement -> I2C_START .)
    BYTES           reduce using rule 47 (statement -> I2C_START .)
    PROCEDURENAME   reduce using rule 47 (statement -> I2C_START .)
    RBRACKET        reduce using rule 47 (statement -> I2C_START .)
    END             reduce using rule 47 (statement -> I2C_START .)


state 47

    (21) statement -> SEND . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 111

state 48

    (35) statement -> BEEP .

    REPEAT          reduce using rule 35 (statement -> BEEP .)
    WHILE           reduce using rule 35 (statement -> BEEP .)
    LOOP            reduce using rule 35 (statement -> BEEP .)
    FOREVER         reduce using rule 35 (statement -> BEEP .)
    IF              reduce using rule 35 (statement -> BEEP .)
    IFELSE          reduce using rule 35 (statement -> BEEP .)
    WAITUNTIL       reduce using rule 35 (statement -> BEEP .)
    WHEN            reduce using rule 35 (statement -> BEEP .)
    SHOW            reduce using rule 35 (statement -> BEEP .)
    MAKE            reduce using rule 35 (statement -> BEEP .)
    WAIT            reduce using rule 35 (statement -> BEEP .)
    SEND            reduce using rule 35 (statement -> BEEP .)
    RECORD          reduce using rule 35 (statement -> BEEP .)
    ERASE           reduce using rule 35 (statement -> BEEP .)
    SETSVH          reduce using rule 35 (statement -> BEEP .)
    SVR             reduce using rule 35 (statement -> BEEP .)
    SVL             reduce using rule 35 (statement -> BEEP .)
    SETPOWER        reduce using rule 35 (statement -> BEEP .)
    I2C_WRITE       reduce using rule 35 (statement -> BEEP .)
    OUTPUT          reduce using rule 35 (statement -> BEEP .)
    ONFOR           reduce using rule 35 (statement -> BEEP .)
    BSEND           reduce using rule 35 (statement -> BEEP .)
    BSR             reduce using rule 35 (statement -> BEEP .)
    SETDP           reduce using rule 35 (statement -> BEEP .)
    FASTSEND        reduce using rule 35 (statement -> BEEP .)
    BEEP            reduce using rule 35 (statement -> BEEP .)
    STOP            reduce using rule 35 (statement -> BEEP .)
    RESET           reduce using rule 35 (statement -> BEEP .)
    RESETDP         reduce using rule 35 (statement -> BEEP .)
    ON              reduce using rule 35 (statement -> BEEP .)
    OFF             reduce using rule 35 (statement -> BEEP .)
    THISWAY         reduce using rule 35 (statement -> BEEP .)
    THATWAY         reduce using rule 35 (statement -> BEEP .)
    RD              reduce using rule 35 (statement -> BEEP .)
    BRAKE           reduce using rule 35 (statement -> BEEP .)
    LEDON           reduce using rule 35 (statement -> BEEP .)
    LEDOFF          reduce using rule 35 (statement -> BEEP .)
    I2C_START       reduce using rule 35 (statement -> BEEP .)
    I2C_STOP        reduce using rule 35 (statement -> BEEP .)
    WHENOFF         reduce using rule 35 (statement -> BEEP .)
    MOTORATTENTION  reduce using rule 35 (statement -> BEEP .)
    BYTES           reduce using rule 35 (statement -> BEEP .)
    PROCEDURENAME   reduce using rule 35 (statement -> BEEP .)
    RBRACKET        reduce using rule 35 (statement -> BEEP .)
    END             reduce using rule 35 (statement -> BEEP .)


state 49

    (41) statement -> THISWAY .

    REPEAT          reduce using rule 41 (statement -> THISWAY .)
    WHILE           reduce using rule 41 (statement -> THISWAY .)
    LOOP            reduce using rule 41 (statement -> THISWAY .)
    FOREVER         reduce using rule 41 (statement -> THISWAY .)
    IF              reduce using rule 41 (statement -> THISWAY .)
    IFELSE          reduce using rule 41 (statement -> THISWAY .)
    WAITUNTIL       reduce using rule 41 (statement -> THISWAY .)
    WHEN            reduce using rule 41 (statement -> THISWAY .)
    SHOW            reduce using rule 41 (statement -> THISWAY .)
    MAKE            reduce using rule 41 (statement -> THISWAY .)
    WAIT            reduce using rule 41 (statement -> THISWAY .)
    SEND            reduce using rule 41 (statement -> THISWAY .)
    RECORD          reduce using rule 41 (statement -> THISWAY .)
    ERASE           reduce using rule 41 (statement -> THISWAY .)
    SETSVH          reduce using rule 41 (statement -> THISWAY .)
    SVR             reduce using rule 41 (statement -> THISWAY .)
    SVL             reduce using rule 41 (statement -> THISWAY .)
    SETPOWER        reduce using rule 41 (statement -> THISWAY .)
    I2C_WRITE       reduce using rule 41 (statement -> THISWAY .)
    OUTPUT          reduce using rule 41 (statement -> THISWAY .)
    ONFOR           reduce using rule 41 (statement -> THISWAY .)
    BSEND           reduce using rule 41 (statement -> THISWAY .)
    BSR             reduce using rule 41 (statement -> THISWAY .)
    SETDP           reduce using rule 41 (statement -> THISWAY .)
    FASTSEND        reduce using rule 41 (statement -> THISWAY .)
    BEEP            reduce using rule 41 (statement -> THISWAY .)
    STOP            reduce using rule 41 (statement -> THISWAY .)
    RESET           reduce using rule 41 (statement -> THISWAY .)
    RESETDP         reduce using rule 41 (statement -> THISWAY .)
    ON              reduce using rule 41 (statement -> THISWAY .)
    OFF             reduce using rule 41 (statement -> THISWAY .)
    THISWAY         reduce using rule 41 (statement -> THISWAY .)
    THATWAY         reduce using rule 41 (statement -> THISWAY .)
    RD              reduce using rule 41 (statement -> THISWAY .)
    BRAKE           reduce using rule 41 (statement -> THISWAY .)
    LEDON           reduce using rule 41 (statement -> THISWAY .)
    LEDOFF          reduce using rule 41 (statement -> THISWAY .)
    I2C_START       reduce using rule 41 (statement -> THISWAY .)
    I2C_STOP        reduce using rule 41 (statement -> THISWAY .)
    WHENOFF         reduce using rule 41 (statement -> THISWAY .)
    MOTORATTENTION  reduce using rule 41 (statement -> THISWAY .)
    BYTES           reduce using rule 41 (statement -> THISWAY .)
    PROCEDURENAME   reduce using rule 41 (statement -> THISWAY .)
    RBRACKET        reduce using rule 41 (statement -> THISWAY .)
    END             reduce using rule 41 (statement -> THISWAY .)


state 50

    (5) parameterDeclaration -> RECEIVER . parameterDeclaration
    (6) parameterDeclaration -> RECEIVER .
    (5) parameterDeclaration -> . RECEIVER parameterDeclaration
    (6) parameterDeclaration -> . RECEIVER

    REPEAT          reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    WHILE           reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    LOOP            reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    FOREVER         reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    IF              reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    IFELSE          reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    WAITUNTIL       reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    WHEN            reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    SHOW            reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    MAKE            reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    WAIT            reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    SEND            reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    RECORD          reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    ERASE           reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    SETSVH          reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    SVR             reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    SVL             reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    SETPOWER        reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    I2C_WRITE       reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    OUTPUT          reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    ONFOR           reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    BSEND           reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    BSR             reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    SETDP           reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    FASTSEND        reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    BEEP            reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    STOP            reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    RESET           reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    RESETDP         reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    ON              reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    OFF             reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    THISWAY         reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    THATWAY         reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    RD              reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    BRAKE           reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    LEDON           reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    LEDOFF          reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    I2C_START       reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    I2C_STOP        reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    WHENOFF         reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    MOTORATTENTION  reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    BYTES           reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    PROCEDURENAME   reduce using rule 6 (parameterDeclaration -> RECEIVER .)
    RECEIVER        shift and go to state 50

    parameterDeclaration           shift and go to state 112

state 51

    (15) statement -> WAITUNTIL . LBRACKET expression RBRACKET

    LBRACKET        shift and go to state 113


state 52

    (29) statement -> OUTPUT . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 114

state 53

    (11) statement -> LOOP . LBRACKET statements RBRACKET

    LBRACKET        shift and go to state 115


state 54

    (12) statement -> FOREVER LBRACKET . statements RBRACKET
    (7) statements -> . statement statements
    (8) statements -> . statement
    (9) statement -> . REPEAT expression LBRACKET statements RBRACKET
    (10) statement -> . WHILE expression LBRACKET statements RBRACKET
    (11) statement -> . LOOP LBRACKET statements RBRACKET
    (12) statement -> . FOREVER LBRACKET statements RBRACKET
    (13) statement -> . IF expression LBRACKET statements RBRACKET
    (14) statement -> . IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET
    (15) statement -> . WAITUNTIL LBRACKET expression RBRACKET
    (16) statement -> . WHEN expression LBRACKET expression RBRACKET
    (17) statement -> . SHOW expression
    (18) statement -> . SHOW RECEIVER
    (19) statement -> . MAKE RECEIVER expression
    (20) statement -> . WAIT expression
    (21) statement -> . SEND expression
    (22) statement -> . RECORD expression
    (23) statement -> . ERASE expression
    (24) statement -> . SETSVH expression
    (25) statement -> . SVR expression
    (26) statement -> . SVL expression
    (27) statement -> . SETPOWER expression
    (28) statement -> . I2C_WRITE expression
    (29) statement -> . OUTPUT expression
    (30) statement -> . ONFOR expression
    (31) statement -> . BSEND expression
    (32) statement -> . BSR expression
    (33) statement -> . SETDP expression
    (34) statement -> . FASTSEND expression
    (35) statement -> . BEEP
    (36) statement -> . STOP
    (37) statement -> . RESET
    (38) statement -> . RESETDP
    (39) statement -> . ON
    (40) statement -> . OFF
    (41) statement -> . THISWAY
    (42) statement -> . THATWAY
    (43) statement -> . RD
    (44) statement -> . BRAKE
    (45) statement -> . LEDON
    (46) statement -> . LEDOFF
    (47) statement -> . I2C_START
    (48) statement -> . I2C_STOP
    (49) statement -> . WHENOFF
    (50) statement -> . procedurecall
    (51) statement -> . MOTORATTENTION
    (52) statement -> . BYTES
    (96) procedurecall -> . PROCEDURENAME parm
    (97) procedurecall -> . PROCEDURENAME

    REPEAT          shift and go to state 32
    WHILE           shift and go to state 13
    LOOP            shift and go to state 53
    FOREVER         shift and go to state 7
    IF              shift and go to state 28
    IFELSE          shift and go to state 25
    WAITUNTIL       shift and go to state 51
    WHEN            shift and go to state 21
    SHOW            shift and go to state 20
    MAKE            shift and go to state 45
    WAIT            shift and go to state 41
    SEND            shift and go to state 47
    RECORD          shift and go to state 19
    ERASE           shift and go to state 24
    SETSVH          shift and go to state 18
    SVR             shift and go to state 39
    SVL             shift and go to state 31
    SETPOWER        shift and go to state 10
    I2C_WRITE       shift and go to state 40
    OUTPUT          shift and go to state 52
    ONFOR           shift and go to state 37
    BSEND           shift and go to state 42
    BSR             shift and go to state 22
    SETDP           shift and go to state 27
    FASTSEND        shift and go to state 14
    BEEP            shift and go to state 48
    STOP            shift and go to state 11
    RESET           shift and go to state 6
    RESETDP         shift and go to state 33
    ON              shift and go to state 15
    OFF             shift and go to state 16
    THISWAY         shift and go to state 49
    THATWAY         shift and go to state 36
    RD              shift and go to state 23
    BRAKE           shift and go to state 38
    LEDON           shift and go to state 43
    LEDOFF          shift and go to state 9
    I2C_START       shift and go to state 46
    I2C_STOP        shift and go to state 17
    WHENOFF         shift and go to state 44
    MOTORATTENTION  shift and go to state 30
    BYTES           shift and go to state 35
    PROCEDURENAME   shift and go to state 12

    statements                     shift and go to state 116
    procedurecall                  shift and go to state 29
    statement                      shift and go to state 26

state 55

    (3) procedure -> TO PROCEDURENAME statements END .

    TO              reduce using rule 3 (procedure -> TO PROCEDURENAME statements END .)
    $end            reduce using rule 3 (procedure -> TO PROCEDURENAME statements END .)


state 56

    (92) expression -> NEWIRQ .

    AND             reduce using rule 92 (expression -> NEWIRQ .)
    OR              reduce using rule 92 (expression -> NEWIRQ .)
    XOR             reduce using rule 92 (expression -> NEWIRQ .)
    LESSTHAN        reduce using rule 92 (expression -> NEWIRQ .)
    GREATERTHAN     reduce using rule 92 (expression -> NEWIRQ .)
    EQUALS          reduce using rule 92 (expression -> NEWIRQ .)
    PLUS            reduce using rule 92 (expression -> NEWIRQ .)
    MINUS           reduce using rule 92 (expression -> NEWIRQ .)
    TIMES           reduce using rule 92 (expression -> NEWIRQ .)
    DIVIDE          reduce using rule 92 (expression -> NEWIRQ .)
    PERCENT         reduce using rule 92 (expression -> NEWIRQ .)
    REPEAT          reduce using rule 92 (expression -> NEWIRQ .)
    WHILE           reduce using rule 92 (expression -> NEWIRQ .)
    LOOP            reduce using rule 92 (expression -> NEWIRQ .)
    FOREVER         reduce using rule 92 (expression -> NEWIRQ .)
    IF              reduce using rule 92 (expression -> NEWIRQ .)
    IFELSE          reduce using rule 92 (expression -> NEWIRQ .)
    WAITUNTIL       reduce using rule 92 (expression -> NEWIRQ .)
    WHEN            reduce using rule 92 (expression -> NEWIRQ .)
    SHOW            reduce using rule 92 (expression -> NEWIRQ .)
    MAKE            reduce using rule 92 (expression -> NEWIRQ .)
    WAIT            reduce using rule 92 (expression -> NEWIRQ .)
    SEND            reduce using rule 92 (expression -> NEWIRQ .)
    RECORD          reduce using rule 92 (expression -> NEWIRQ .)
    ERASE           reduce using rule 92 (expression -> NEWIRQ .)
    SETSVH          reduce using rule 92 (expression -> NEWIRQ .)
    SVR             reduce using rule 92 (expression -> NEWIRQ .)
    SVL             reduce using rule 92 (expression -> NEWIRQ .)
    SETPOWER        reduce using rule 92 (expression -> NEWIRQ .)
    I2C_WRITE       reduce using rule 92 (expression -> NEWIRQ .)
    OUTPUT          reduce using rule 92 (expression -> NEWIRQ .)
    ONFOR           reduce using rule 92 (expression -> NEWIRQ .)
    BSEND           reduce using rule 92 (expression -> NEWIRQ .)
    BSR             reduce using rule 92 (expression -> NEWIRQ .)
    SETDP           reduce using rule 92 (expression -> NEWIRQ .)
    FASTSEND        reduce using rule 92 (expression -> NEWIRQ .)
    BEEP            reduce using rule 92 (expression -> NEWIRQ .)
    STOP            reduce using rule 92 (expression -> NEWIRQ .)
    RESET           reduce using rule 92 (expression -> NEWIRQ .)
    RESETDP         reduce using rule 92 (expression -> NEWIRQ .)
    ON              reduce using rule 92 (expression -> NEWIRQ .)
    OFF             reduce using rule 92 (expression -> NEWIRQ .)
    THISWAY         reduce using rule 92 (expression -> NEWIRQ .)
    THATWAY         reduce using rule 92 (expression -> NEWIRQ .)
    RD              reduce using rule 92 (expression -> NEWIRQ .)
    BRAKE           reduce using rule 92 (expression -> NEWIRQ .)
    LEDON           reduce using rule 92 (expression -> NEWIRQ .)
    LEDOFF          reduce using rule 92 (expression -> NEWIRQ .)
    I2C_START       reduce using rule 92 (expression -> NEWIRQ .)
    I2C_STOP        reduce using rule 92 (expression -> NEWIRQ .)
    WHENOFF         reduce using rule 92 (expression -> NEWIRQ .)
    MOTORATTENTION  reduce using rule 92 (expression -> NEWIRQ .)
    BYTES           reduce using rule 92 (expression -> NEWIRQ .)
    PROCEDURENAME   reduce using rule 92 (expression -> NEWIRQ .)
    END             reduce using rule 92 (expression -> NEWIRQ .)
    RBRACKET        reduce using rule 92 (expression -> NEWIRQ .)
    REPORTER        reduce using rule 92 (expression -> NEWIRQ .)
    NOT             reduce using rule 92 (expression -> NEWIRQ .)
    LPAREN          reduce using rule 92 (expression -> NEWIRQ .)
    LBRACKET        reduce using rule 92 (expression -> NEWIRQ .)
    I2C_READ        reduce using rule 92 (expression -> NEWIRQ .)
    HIGHBYTE        reduce using rule 92 (expression -> NEWIRQ .)
    LOWBYTE         reduce using rule 92 (expression -> NEWIRQ .)
    NUMBERLITERAL   reduce using rule 92 (expression -> NEWIRQ .)
    TIMER           reduce using rule 92 (expression -> NEWIRQ .)
    RANDOM          reduce using rule 92 (expression -> NEWIRQ .)
    RECALL          reduce using rule 92 (expression -> NEWIRQ .)
    SENSOR1         reduce using rule 92 (expression -> NEWIRQ .)
    SENSOR2         reduce using rule 92 (expression -> NEWIRQ .)
    SENSOR3         reduce using rule 92 (expression -> NEWIRQ .)
    SENSOR4         reduce using rule 92 (expression -> NEWIRQ .)
    SENSOR5         reduce using rule 92 (expression -> NEWIRQ .)
    SENSOR6         reduce using rule 92 (expression -> NEWIRQ .)
    SENSOR7         reduce using rule 92 (expression -> NEWIRQ .)
    SENSOR8         reduce using rule 92 (expression -> NEWIRQ .)
    SWITCH1         reduce using rule 92 (expression -> NEWIRQ .)
    SWITCH2         reduce using rule 92 (expression -> NEWIRQ .)
    SWITCH3         reduce using rule 92 (expression -> NEWIRQ .)
    SWITCH4         reduce using rule 92 (expression -> NEWIRQ .)
    SWITCH5         reduce using rule 92 (expression -> NEWIRQ .)
    SWITCH6         reduce using rule 92 (expression -> NEWIRQ .)
    SWITCH7         reduce using rule 92 (expression -> NEWIRQ .)
    SWITCH8         reduce using rule 92 (expression -> NEWIRQ .)
    NEWIRQ          reduce using rule 92 (expression -> NEWIRQ .)
    SERIAL          reduce using rule 92 (expression -> NEWIRQ .)
    RPAREN          reduce using rule 92 (expression -> NEWIRQ .)


state 57

    (68) expression -> LBRACKET . expression RBRACKET
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 117

state 58

    (83) expression -> SENSOR8 .

    AND             reduce using rule 83 (expression -> SENSOR8 .)
    OR              reduce using rule 83 (expression -> SENSOR8 .)
    XOR             reduce using rule 83 (expression -> SENSOR8 .)
    LESSTHAN        reduce using rule 83 (expression -> SENSOR8 .)
    GREATERTHAN     reduce using rule 83 (expression -> SENSOR8 .)
    EQUALS          reduce using rule 83 (expression -> SENSOR8 .)
    PLUS            reduce using rule 83 (expression -> SENSOR8 .)
    MINUS           reduce using rule 83 (expression -> SENSOR8 .)
    TIMES           reduce using rule 83 (expression -> SENSOR8 .)
    DIVIDE          reduce using rule 83 (expression -> SENSOR8 .)
    PERCENT         reduce using rule 83 (expression -> SENSOR8 .)
    REPEAT          reduce using rule 83 (expression -> SENSOR8 .)
    WHILE           reduce using rule 83 (expression -> SENSOR8 .)
    LOOP            reduce using rule 83 (expression -> SENSOR8 .)
    FOREVER         reduce using rule 83 (expression -> SENSOR8 .)
    IF              reduce using rule 83 (expression -> SENSOR8 .)
    IFELSE          reduce using rule 83 (expression -> SENSOR8 .)
    WAITUNTIL       reduce using rule 83 (expression -> SENSOR8 .)
    WHEN            reduce using rule 83 (expression -> SENSOR8 .)
    SHOW            reduce using rule 83 (expression -> SENSOR8 .)
    MAKE            reduce using rule 83 (expression -> SENSOR8 .)
    WAIT            reduce using rule 83 (expression -> SENSOR8 .)
    SEND            reduce using rule 83 (expression -> SENSOR8 .)
    RECORD          reduce using rule 83 (expression -> SENSOR8 .)
    ERASE           reduce using rule 83 (expression -> SENSOR8 .)
    SETSVH          reduce using rule 83 (expression -> SENSOR8 .)
    SVR             reduce using rule 83 (expression -> SENSOR8 .)
    SVL             reduce using rule 83 (expression -> SENSOR8 .)
    SETPOWER        reduce using rule 83 (expression -> SENSOR8 .)
    I2C_WRITE       reduce using rule 83 (expression -> SENSOR8 .)
    OUTPUT          reduce using rule 83 (expression -> SENSOR8 .)
    ONFOR           reduce using rule 83 (expression -> SENSOR8 .)
    BSEND           reduce using rule 83 (expression -> SENSOR8 .)
    BSR             reduce using rule 83 (expression -> SENSOR8 .)
    SETDP           reduce using rule 83 (expression -> SENSOR8 .)
    FASTSEND        reduce using rule 83 (expression -> SENSOR8 .)
    BEEP            reduce using rule 83 (expression -> SENSOR8 .)
    STOP            reduce using rule 83 (expression -> SENSOR8 .)
    RESET           reduce using rule 83 (expression -> SENSOR8 .)
    RESETDP         reduce using rule 83 (expression -> SENSOR8 .)
    ON              reduce using rule 83 (expression -> SENSOR8 .)
    OFF             reduce using rule 83 (expression -> SENSOR8 .)
    THISWAY         reduce using rule 83 (expression -> SENSOR8 .)
    THATWAY         reduce using rule 83 (expression -> SENSOR8 .)
    RD              reduce using rule 83 (expression -> SENSOR8 .)
    BRAKE           reduce using rule 83 (expression -> SENSOR8 .)
    LEDON           reduce using rule 83 (expression -> SENSOR8 .)
    LEDOFF          reduce using rule 83 (expression -> SENSOR8 .)
    I2C_START       reduce using rule 83 (expression -> SENSOR8 .)
    I2C_STOP        reduce using rule 83 (expression -> SENSOR8 .)
    WHENOFF         reduce using rule 83 (expression -> SENSOR8 .)
    MOTORATTENTION  reduce using rule 83 (expression -> SENSOR8 .)
    BYTES           reduce using rule 83 (expression -> SENSOR8 .)
    PROCEDURENAME   reduce using rule 83 (expression -> SENSOR8 .)
    END             reduce using rule 83 (expression -> SENSOR8 .)
    RBRACKET        reduce using rule 83 (expression -> SENSOR8 .)
    REPORTER        reduce using rule 83 (expression -> SENSOR8 .)
    NOT             reduce using rule 83 (expression -> SENSOR8 .)
    LPAREN          reduce using rule 83 (expression -> SENSOR8 .)
    LBRACKET        reduce using rule 83 (expression -> SENSOR8 .)
    I2C_READ        reduce using rule 83 (expression -> SENSOR8 .)
    HIGHBYTE        reduce using rule 83 (expression -> SENSOR8 .)
    LOWBYTE         reduce using rule 83 (expression -> SENSOR8 .)
    NUMBERLITERAL   reduce using rule 83 (expression -> SENSOR8 .)
    TIMER           reduce using rule 83 (expression -> SENSOR8 .)
    RANDOM          reduce using rule 83 (expression -> SENSOR8 .)
    RECALL          reduce using rule 83 (expression -> SENSOR8 .)
    SENSOR1         reduce using rule 83 (expression -> SENSOR8 .)
    SENSOR2         reduce using rule 83 (expression -> SENSOR8 .)
    SENSOR3         reduce using rule 83 (expression -> SENSOR8 .)
    SENSOR4         reduce using rule 83 (expression -> SENSOR8 .)
    SENSOR5         reduce using rule 83 (expression -> SENSOR8 .)
    SENSOR6         reduce using rule 83 (expression -> SENSOR8 .)
    SENSOR7         reduce using rule 83 (expression -> SENSOR8 .)
    SENSOR8         reduce using rule 83 (expression -> SENSOR8 .)
    SWITCH1         reduce using rule 83 (expression -> SENSOR8 .)
    SWITCH2         reduce using rule 83 (expression -> SENSOR8 .)
    SWITCH3         reduce using rule 83 (expression -> SENSOR8 .)
    SWITCH4         reduce using rule 83 (expression -> SENSOR8 .)
    SWITCH5         reduce using rule 83 (expression -> SENSOR8 .)
    SWITCH6         reduce using rule 83 (expression -> SENSOR8 .)
    SWITCH7         reduce using rule 83 (expression -> SENSOR8 .)
    SWITCH8         reduce using rule 83 (expression -> SENSOR8 .)
    NEWIRQ          reduce using rule 83 (expression -> SENSOR8 .)
    SERIAL          reduce using rule 83 (expression -> SENSOR8 .)
    RPAREN          reduce using rule 83 (expression -> SENSOR8 .)


state 59

    (76) expression -> SENSOR1 .

    AND             reduce using rule 76 (expression -> SENSOR1 .)
    OR              reduce using rule 76 (expression -> SENSOR1 .)
    XOR             reduce using rule 76 (expression -> SENSOR1 .)
    LESSTHAN        reduce using rule 76 (expression -> SENSOR1 .)
    GREATERTHAN     reduce using rule 76 (expression -> SENSOR1 .)
    EQUALS          reduce using rule 76 (expression -> SENSOR1 .)
    PLUS            reduce using rule 76 (expression -> SENSOR1 .)
    MINUS           reduce using rule 76 (expression -> SENSOR1 .)
    TIMES           reduce using rule 76 (expression -> SENSOR1 .)
    DIVIDE          reduce using rule 76 (expression -> SENSOR1 .)
    PERCENT         reduce using rule 76 (expression -> SENSOR1 .)
    REPEAT          reduce using rule 76 (expression -> SENSOR1 .)
    WHILE           reduce using rule 76 (expression -> SENSOR1 .)
    LOOP            reduce using rule 76 (expression -> SENSOR1 .)
    FOREVER         reduce using rule 76 (expression -> SENSOR1 .)
    IF              reduce using rule 76 (expression -> SENSOR1 .)
    IFELSE          reduce using rule 76 (expression -> SENSOR1 .)
    WAITUNTIL       reduce using rule 76 (expression -> SENSOR1 .)
    WHEN            reduce using rule 76 (expression -> SENSOR1 .)
    SHOW            reduce using rule 76 (expression -> SENSOR1 .)
    MAKE            reduce using rule 76 (expression -> SENSOR1 .)
    WAIT            reduce using rule 76 (expression -> SENSOR1 .)
    SEND            reduce using rule 76 (expression -> SENSOR1 .)
    RECORD          reduce using rule 76 (expression -> SENSOR1 .)
    ERASE           reduce using rule 76 (expression -> SENSOR1 .)
    SETSVH          reduce using rule 76 (expression -> SENSOR1 .)
    SVR             reduce using rule 76 (expression -> SENSOR1 .)
    SVL             reduce using rule 76 (expression -> SENSOR1 .)
    SETPOWER        reduce using rule 76 (expression -> SENSOR1 .)
    I2C_WRITE       reduce using rule 76 (expression -> SENSOR1 .)
    OUTPUT          reduce using rule 76 (expression -> SENSOR1 .)
    ONFOR           reduce using rule 76 (expression -> SENSOR1 .)
    BSEND           reduce using rule 76 (expression -> SENSOR1 .)
    BSR             reduce using rule 76 (expression -> SENSOR1 .)
    SETDP           reduce using rule 76 (expression -> SENSOR1 .)
    FASTSEND        reduce using rule 76 (expression -> SENSOR1 .)
    BEEP            reduce using rule 76 (expression -> SENSOR1 .)
    STOP            reduce using rule 76 (expression -> SENSOR1 .)
    RESET           reduce using rule 76 (expression -> SENSOR1 .)
    RESETDP         reduce using rule 76 (expression -> SENSOR1 .)
    ON              reduce using rule 76 (expression -> SENSOR1 .)
    OFF             reduce using rule 76 (expression -> SENSOR1 .)
    THISWAY         reduce using rule 76 (expression -> SENSOR1 .)
    THATWAY         reduce using rule 76 (expression -> SENSOR1 .)
    RD              reduce using rule 76 (expression -> SENSOR1 .)
    BRAKE           reduce using rule 76 (expression -> SENSOR1 .)
    LEDON           reduce using rule 76 (expression -> SENSOR1 .)
    LEDOFF          reduce using rule 76 (expression -> SENSOR1 .)
    I2C_START       reduce using rule 76 (expression -> SENSOR1 .)
    I2C_STOP        reduce using rule 76 (expression -> SENSOR1 .)
    WHENOFF         reduce using rule 76 (expression -> SENSOR1 .)
    MOTORATTENTION  reduce using rule 76 (expression -> SENSOR1 .)
    BYTES           reduce using rule 76 (expression -> SENSOR1 .)
    PROCEDURENAME   reduce using rule 76 (expression -> SENSOR1 .)
    END             reduce using rule 76 (expression -> SENSOR1 .)
    RBRACKET        reduce using rule 76 (expression -> SENSOR1 .)
    REPORTER        reduce using rule 76 (expression -> SENSOR1 .)
    NOT             reduce using rule 76 (expression -> SENSOR1 .)
    LPAREN          reduce using rule 76 (expression -> SENSOR1 .)
    LBRACKET        reduce using rule 76 (expression -> SENSOR1 .)
    I2C_READ        reduce using rule 76 (expression -> SENSOR1 .)
    HIGHBYTE        reduce using rule 76 (expression -> SENSOR1 .)
    LOWBYTE         reduce using rule 76 (expression -> SENSOR1 .)
    NUMBERLITERAL   reduce using rule 76 (expression -> SENSOR1 .)
    TIMER           reduce using rule 76 (expression -> SENSOR1 .)
    RANDOM          reduce using rule 76 (expression -> SENSOR1 .)
    RECALL          reduce using rule 76 (expression -> SENSOR1 .)
    SENSOR1         reduce using rule 76 (expression -> SENSOR1 .)
    SENSOR2         reduce using rule 76 (expression -> SENSOR1 .)
    SENSOR3         reduce using rule 76 (expression -> SENSOR1 .)
    SENSOR4         reduce using rule 76 (expression -> SENSOR1 .)
    SENSOR5         reduce using rule 76 (expression -> SENSOR1 .)
    SENSOR6         reduce using rule 76 (expression -> SENSOR1 .)
    SENSOR7         reduce using rule 76 (expression -> SENSOR1 .)
    SENSOR8         reduce using rule 76 (expression -> SENSOR1 .)
    SWITCH1         reduce using rule 76 (expression -> SENSOR1 .)
    SWITCH2         reduce using rule 76 (expression -> SENSOR1 .)
    SWITCH3         reduce using rule 76 (expression -> SENSOR1 .)
    SWITCH4         reduce using rule 76 (expression -> SENSOR1 .)
    SWITCH5         reduce using rule 76 (expression -> SENSOR1 .)
    SWITCH6         reduce using rule 76 (expression -> SENSOR1 .)
    SWITCH7         reduce using rule 76 (expression -> SENSOR1 .)
    SWITCH8         reduce using rule 76 (expression -> SENSOR1 .)
    NEWIRQ          reduce using rule 76 (expression -> SENSOR1 .)
    SERIAL          reduce using rule 76 (expression -> SENSOR1 .)
    RPAREN          reduce using rule 76 (expression -> SENSOR1 .)


state 60

    (78) expression -> SENSOR3 .

    AND             reduce using rule 78 (expression -> SENSOR3 .)
    OR              reduce using rule 78 (expression -> SENSOR3 .)
    XOR             reduce using rule 78 (expression -> SENSOR3 .)
    LESSTHAN        reduce using rule 78 (expression -> SENSOR3 .)
    GREATERTHAN     reduce using rule 78 (expression -> SENSOR3 .)
    EQUALS          reduce using rule 78 (expression -> SENSOR3 .)
    PLUS            reduce using rule 78 (expression -> SENSOR3 .)
    MINUS           reduce using rule 78 (expression -> SENSOR3 .)
    TIMES           reduce using rule 78 (expression -> SENSOR3 .)
    DIVIDE          reduce using rule 78 (expression -> SENSOR3 .)
    PERCENT         reduce using rule 78 (expression -> SENSOR3 .)
    REPEAT          reduce using rule 78 (expression -> SENSOR3 .)
    WHILE           reduce using rule 78 (expression -> SENSOR3 .)
    LOOP            reduce using rule 78 (expression -> SENSOR3 .)
    FOREVER         reduce using rule 78 (expression -> SENSOR3 .)
    IF              reduce using rule 78 (expression -> SENSOR3 .)
    IFELSE          reduce using rule 78 (expression -> SENSOR3 .)
    WAITUNTIL       reduce using rule 78 (expression -> SENSOR3 .)
    WHEN            reduce using rule 78 (expression -> SENSOR3 .)
    SHOW            reduce using rule 78 (expression -> SENSOR3 .)
    MAKE            reduce using rule 78 (expression -> SENSOR3 .)
    WAIT            reduce using rule 78 (expression -> SENSOR3 .)
    SEND            reduce using rule 78 (expression -> SENSOR3 .)
    RECORD          reduce using rule 78 (expression -> SENSOR3 .)
    ERASE           reduce using rule 78 (expression -> SENSOR3 .)
    SETSVH          reduce using rule 78 (expression -> SENSOR3 .)
    SVR             reduce using rule 78 (expression -> SENSOR3 .)
    SVL             reduce using rule 78 (expression -> SENSOR3 .)
    SETPOWER        reduce using rule 78 (expression -> SENSOR3 .)
    I2C_WRITE       reduce using rule 78 (expression -> SENSOR3 .)
    OUTPUT          reduce using rule 78 (expression -> SENSOR3 .)
    ONFOR           reduce using rule 78 (expression -> SENSOR3 .)
    BSEND           reduce using rule 78 (expression -> SENSOR3 .)
    BSR             reduce using rule 78 (expression -> SENSOR3 .)
    SETDP           reduce using rule 78 (expression -> SENSOR3 .)
    FASTSEND        reduce using rule 78 (expression -> SENSOR3 .)
    BEEP            reduce using rule 78 (expression -> SENSOR3 .)
    STOP            reduce using rule 78 (expression -> SENSOR3 .)
    RESET           reduce using rule 78 (expression -> SENSOR3 .)
    RESETDP         reduce using rule 78 (expression -> SENSOR3 .)
    ON              reduce using rule 78 (expression -> SENSOR3 .)
    OFF             reduce using rule 78 (expression -> SENSOR3 .)
    THISWAY         reduce using rule 78 (expression -> SENSOR3 .)
    THATWAY         reduce using rule 78 (expression -> SENSOR3 .)
    RD              reduce using rule 78 (expression -> SENSOR3 .)
    BRAKE           reduce using rule 78 (expression -> SENSOR3 .)
    LEDON           reduce using rule 78 (expression -> SENSOR3 .)
    LEDOFF          reduce using rule 78 (expression -> SENSOR3 .)
    I2C_START       reduce using rule 78 (expression -> SENSOR3 .)
    I2C_STOP        reduce using rule 78 (expression -> SENSOR3 .)
    WHENOFF         reduce using rule 78 (expression -> SENSOR3 .)
    MOTORATTENTION  reduce using rule 78 (expression -> SENSOR3 .)
    BYTES           reduce using rule 78 (expression -> SENSOR3 .)
    PROCEDURENAME   reduce using rule 78 (expression -> SENSOR3 .)
    END             reduce using rule 78 (expression -> SENSOR3 .)
    RBRACKET        reduce using rule 78 (expression -> SENSOR3 .)
    REPORTER        reduce using rule 78 (expression -> SENSOR3 .)
    NOT             reduce using rule 78 (expression -> SENSOR3 .)
    LPAREN          reduce using rule 78 (expression -> SENSOR3 .)
    LBRACKET        reduce using rule 78 (expression -> SENSOR3 .)
    I2C_READ        reduce using rule 78 (expression -> SENSOR3 .)
    HIGHBYTE        reduce using rule 78 (expression -> SENSOR3 .)
    LOWBYTE         reduce using rule 78 (expression -> SENSOR3 .)
    NUMBERLITERAL   reduce using rule 78 (expression -> SENSOR3 .)
    TIMER           reduce using rule 78 (expression -> SENSOR3 .)
    RANDOM          reduce using rule 78 (expression -> SENSOR3 .)
    RECALL          reduce using rule 78 (expression -> SENSOR3 .)
    SENSOR1         reduce using rule 78 (expression -> SENSOR3 .)
    SENSOR2         reduce using rule 78 (expression -> SENSOR3 .)
    SENSOR3         reduce using rule 78 (expression -> SENSOR3 .)
    SENSOR4         reduce using rule 78 (expression -> SENSOR3 .)
    SENSOR5         reduce using rule 78 (expression -> SENSOR3 .)
    SENSOR6         reduce using rule 78 (expression -> SENSOR3 .)
    SENSOR7         reduce using rule 78 (expression -> SENSOR3 .)
    SENSOR8         reduce using rule 78 (expression -> SENSOR3 .)
    SWITCH1         reduce using rule 78 (expression -> SENSOR3 .)
    SWITCH2         reduce using rule 78 (expression -> SENSOR3 .)
    SWITCH3         reduce using rule 78 (expression -> SENSOR3 .)
    SWITCH4         reduce using rule 78 (expression -> SENSOR3 .)
    SWITCH5         reduce using rule 78 (expression -> SENSOR3 .)
    SWITCH6         reduce using rule 78 (expression -> SENSOR3 .)
    SWITCH7         reduce using rule 78 (expression -> SENSOR3 .)
    SWITCH8         reduce using rule 78 (expression -> SENSOR3 .)
    NEWIRQ          reduce using rule 78 (expression -> SENSOR3 .)
    SERIAL          reduce using rule 78 (expression -> SENSOR3 .)
    RPAREN          reduce using rule 78 (expression -> SENSOR3 .)


state 61

    (77) expression -> SENSOR2 .

    AND             reduce using rule 77 (expression -> SENSOR2 .)
    OR              reduce using rule 77 (expression -> SENSOR2 .)
    XOR             reduce using rule 77 (expression -> SENSOR2 .)
    LESSTHAN        reduce using rule 77 (expression -> SENSOR2 .)
    GREATERTHAN     reduce using rule 77 (expression -> SENSOR2 .)
    EQUALS          reduce using rule 77 (expression -> SENSOR2 .)
    PLUS            reduce using rule 77 (expression -> SENSOR2 .)
    MINUS           reduce using rule 77 (expression -> SENSOR2 .)
    TIMES           reduce using rule 77 (expression -> SENSOR2 .)
    DIVIDE          reduce using rule 77 (expression -> SENSOR2 .)
    PERCENT         reduce using rule 77 (expression -> SENSOR2 .)
    REPEAT          reduce using rule 77 (expression -> SENSOR2 .)
    WHILE           reduce using rule 77 (expression -> SENSOR2 .)
    LOOP            reduce using rule 77 (expression -> SENSOR2 .)
    FOREVER         reduce using rule 77 (expression -> SENSOR2 .)
    IF              reduce using rule 77 (expression -> SENSOR2 .)
    IFELSE          reduce using rule 77 (expression -> SENSOR2 .)
    WAITUNTIL       reduce using rule 77 (expression -> SENSOR2 .)
    WHEN            reduce using rule 77 (expression -> SENSOR2 .)
    SHOW            reduce using rule 77 (expression -> SENSOR2 .)
    MAKE            reduce using rule 77 (expression -> SENSOR2 .)
    WAIT            reduce using rule 77 (expression -> SENSOR2 .)
    SEND            reduce using rule 77 (expression -> SENSOR2 .)
    RECORD          reduce using rule 77 (expression -> SENSOR2 .)
    ERASE           reduce using rule 77 (expression -> SENSOR2 .)
    SETSVH          reduce using rule 77 (expression -> SENSOR2 .)
    SVR             reduce using rule 77 (expression -> SENSOR2 .)
    SVL             reduce using rule 77 (expression -> SENSOR2 .)
    SETPOWER        reduce using rule 77 (expression -> SENSOR2 .)
    I2C_WRITE       reduce using rule 77 (expression -> SENSOR2 .)
    OUTPUT          reduce using rule 77 (expression -> SENSOR2 .)
    ONFOR           reduce using rule 77 (expression -> SENSOR2 .)
    BSEND           reduce using rule 77 (expression -> SENSOR2 .)
    BSR             reduce using rule 77 (expression -> SENSOR2 .)
    SETDP           reduce using rule 77 (expression -> SENSOR2 .)
    FASTSEND        reduce using rule 77 (expression -> SENSOR2 .)
    BEEP            reduce using rule 77 (expression -> SENSOR2 .)
    STOP            reduce using rule 77 (expression -> SENSOR2 .)
    RESET           reduce using rule 77 (expression -> SENSOR2 .)
    RESETDP         reduce using rule 77 (expression -> SENSOR2 .)
    ON              reduce using rule 77 (expression -> SENSOR2 .)
    OFF             reduce using rule 77 (expression -> SENSOR2 .)
    THISWAY         reduce using rule 77 (expression -> SENSOR2 .)
    THATWAY         reduce using rule 77 (expression -> SENSOR2 .)
    RD              reduce using rule 77 (expression -> SENSOR2 .)
    BRAKE           reduce using rule 77 (expression -> SENSOR2 .)
    LEDON           reduce using rule 77 (expression -> SENSOR2 .)
    LEDOFF          reduce using rule 77 (expression -> SENSOR2 .)
    I2C_START       reduce using rule 77 (expression -> SENSOR2 .)
    I2C_STOP        reduce using rule 77 (expression -> SENSOR2 .)
    WHENOFF         reduce using rule 77 (expression -> SENSOR2 .)
    MOTORATTENTION  reduce using rule 77 (expression -> SENSOR2 .)
    BYTES           reduce using rule 77 (expression -> SENSOR2 .)
    PROCEDURENAME   reduce using rule 77 (expression -> SENSOR2 .)
    END             reduce using rule 77 (expression -> SENSOR2 .)
    RBRACKET        reduce using rule 77 (expression -> SENSOR2 .)
    REPORTER        reduce using rule 77 (expression -> SENSOR2 .)
    NOT             reduce using rule 77 (expression -> SENSOR2 .)
    LPAREN          reduce using rule 77 (expression -> SENSOR2 .)
    LBRACKET        reduce using rule 77 (expression -> SENSOR2 .)
    I2C_READ        reduce using rule 77 (expression -> SENSOR2 .)
    HIGHBYTE        reduce using rule 77 (expression -> SENSOR2 .)
    LOWBYTE         reduce using rule 77 (expression -> SENSOR2 .)
    NUMBERLITERAL   reduce using rule 77 (expression -> SENSOR2 .)
    TIMER           reduce using rule 77 (expression -> SENSOR2 .)
    RANDOM          reduce using rule 77 (expression -> SENSOR2 .)
    RECALL          reduce using rule 77 (expression -> SENSOR2 .)
    SENSOR1         reduce using rule 77 (expression -> SENSOR2 .)
    SENSOR2         reduce using rule 77 (expression -> SENSOR2 .)
    SENSOR3         reduce using rule 77 (expression -> SENSOR2 .)
    SENSOR4         reduce using rule 77 (expression -> SENSOR2 .)
    SENSOR5         reduce using rule 77 (expression -> SENSOR2 .)
    SENSOR6         reduce using rule 77 (expression -> SENSOR2 .)
    SENSOR7         reduce using rule 77 (expression -> SENSOR2 .)
    SENSOR8         reduce using rule 77 (expression -> SENSOR2 .)
    SWITCH1         reduce using rule 77 (expression -> SENSOR2 .)
    SWITCH2         reduce using rule 77 (expression -> SENSOR2 .)
    SWITCH3         reduce using rule 77 (expression -> SENSOR2 .)
    SWITCH4         reduce using rule 77 (expression -> SENSOR2 .)
    SWITCH5         reduce using rule 77 (expression -> SENSOR2 .)
    SWITCH6         reduce using rule 77 (expression -> SENSOR2 .)
    SWITCH7         reduce using rule 77 (expression -> SENSOR2 .)
    SWITCH8         reduce using rule 77 (expression -> SENSOR2 .)
    NEWIRQ          reduce using rule 77 (expression -> SENSOR2 .)
    SERIAL          reduce using rule 77 (expression -> SENSOR2 .)
    RPAREN          reduce using rule 77 (expression -> SENSOR2 .)


state 62

    (80) expression -> SENSOR5 .

    AND             reduce using rule 80 (expression -> SENSOR5 .)
    OR              reduce using rule 80 (expression -> SENSOR5 .)
    XOR             reduce using rule 80 (expression -> SENSOR5 .)
    LESSTHAN        reduce using rule 80 (expression -> SENSOR5 .)
    GREATERTHAN     reduce using rule 80 (expression -> SENSOR5 .)
    EQUALS          reduce using rule 80 (expression -> SENSOR5 .)
    PLUS            reduce using rule 80 (expression -> SENSOR5 .)
    MINUS           reduce using rule 80 (expression -> SENSOR5 .)
    TIMES           reduce using rule 80 (expression -> SENSOR5 .)
    DIVIDE          reduce using rule 80 (expression -> SENSOR5 .)
    PERCENT         reduce using rule 80 (expression -> SENSOR5 .)
    REPEAT          reduce using rule 80 (expression -> SENSOR5 .)
    WHILE           reduce using rule 80 (expression -> SENSOR5 .)
    LOOP            reduce using rule 80 (expression -> SENSOR5 .)
    FOREVER         reduce using rule 80 (expression -> SENSOR5 .)
    IF              reduce using rule 80 (expression -> SENSOR5 .)
    IFELSE          reduce using rule 80 (expression -> SENSOR5 .)
    WAITUNTIL       reduce using rule 80 (expression -> SENSOR5 .)
    WHEN            reduce using rule 80 (expression -> SENSOR5 .)
    SHOW            reduce using rule 80 (expression -> SENSOR5 .)
    MAKE            reduce using rule 80 (expression -> SENSOR5 .)
    WAIT            reduce using rule 80 (expression -> SENSOR5 .)
    SEND            reduce using rule 80 (expression -> SENSOR5 .)
    RECORD          reduce using rule 80 (expression -> SENSOR5 .)
    ERASE           reduce using rule 80 (expression -> SENSOR5 .)
    SETSVH          reduce using rule 80 (expression -> SENSOR5 .)
    SVR             reduce using rule 80 (expression -> SENSOR5 .)
    SVL             reduce using rule 80 (expression -> SENSOR5 .)
    SETPOWER        reduce using rule 80 (expression -> SENSOR5 .)
    I2C_WRITE       reduce using rule 80 (expression -> SENSOR5 .)
    OUTPUT          reduce using rule 80 (expression -> SENSOR5 .)
    ONFOR           reduce using rule 80 (expression -> SENSOR5 .)
    BSEND           reduce using rule 80 (expression -> SENSOR5 .)
    BSR             reduce using rule 80 (expression -> SENSOR5 .)
    SETDP           reduce using rule 80 (expression -> SENSOR5 .)
    FASTSEND        reduce using rule 80 (expression -> SENSOR5 .)
    BEEP            reduce using rule 80 (expression -> SENSOR5 .)
    STOP            reduce using rule 80 (expression -> SENSOR5 .)
    RESET           reduce using rule 80 (expression -> SENSOR5 .)
    RESETDP         reduce using rule 80 (expression -> SENSOR5 .)
    ON              reduce using rule 80 (expression -> SENSOR5 .)
    OFF             reduce using rule 80 (expression -> SENSOR5 .)
    THISWAY         reduce using rule 80 (expression -> SENSOR5 .)
    THATWAY         reduce using rule 80 (expression -> SENSOR5 .)
    RD              reduce using rule 80 (expression -> SENSOR5 .)
    BRAKE           reduce using rule 80 (expression -> SENSOR5 .)
    LEDON           reduce using rule 80 (expression -> SENSOR5 .)
    LEDOFF          reduce using rule 80 (expression -> SENSOR5 .)
    I2C_START       reduce using rule 80 (expression -> SENSOR5 .)
    I2C_STOP        reduce using rule 80 (expression -> SENSOR5 .)
    WHENOFF         reduce using rule 80 (expression -> SENSOR5 .)
    MOTORATTENTION  reduce using rule 80 (expression -> SENSOR5 .)
    BYTES           reduce using rule 80 (expression -> SENSOR5 .)
    PROCEDURENAME   reduce using rule 80 (expression -> SENSOR5 .)
    END             reduce using rule 80 (expression -> SENSOR5 .)
    RBRACKET        reduce using rule 80 (expression -> SENSOR5 .)
    REPORTER        reduce using rule 80 (expression -> SENSOR5 .)
    NOT             reduce using rule 80 (expression -> SENSOR5 .)
    LPAREN          reduce using rule 80 (expression -> SENSOR5 .)
    LBRACKET        reduce using rule 80 (expression -> SENSOR5 .)
    I2C_READ        reduce using rule 80 (expression -> SENSOR5 .)
    HIGHBYTE        reduce using rule 80 (expression -> SENSOR5 .)
    LOWBYTE         reduce using rule 80 (expression -> SENSOR5 .)
    NUMBERLITERAL   reduce using rule 80 (expression -> SENSOR5 .)
    TIMER           reduce using rule 80 (expression -> SENSOR5 .)
    RANDOM          reduce using rule 80 (expression -> SENSOR5 .)
    RECALL          reduce using rule 80 (expression -> SENSOR5 .)
    SENSOR1         reduce using rule 80 (expression -> SENSOR5 .)
    SENSOR2         reduce using rule 80 (expression -> SENSOR5 .)
    SENSOR3         reduce using rule 80 (expression -> SENSOR5 .)
    SENSOR4         reduce using rule 80 (expression -> SENSOR5 .)
    SENSOR5         reduce using rule 80 (expression -> SENSOR5 .)
    SENSOR6         reduce using rule 80 (expression -> SENSOR5 .)
    SENSOR7         reduce using rule 80 (expression -> SENSOR5 .)
    SENSOR8         reduce using rule 80 (expression -> SENSOR5 .)
    SWITCH1         reduce using rule 80 (expression -> SENSOR5 .)
    SWITCH2         reduce using rule 80 (expression -> SENSOR5 .)
    SWITCH3         reduce using rule 80 (expression -> SENSOR5 .)
    SWITCH4         reduce using rule 80 (expression -> SENSOR5 .)
    SWITCH5         reduce using rule 80 (expression -> SENSOR5 .)
    SWITCH6         reduce using rule 80 (expression -> SENSOR5 .)
    SWITCH7         reduce using rule 80 (expression -> SENSOR5 .)
    SWITCH8         reduce using rule 80 (expression -> SENSOR5 .)
    NEWIRQ          reduce using rule 80 (expression -> SENSOR5 .)
    SERIAL          reduce using rule 80 (expression -> SENSOR5 .)
    RPAREN          reduce using rule 80 (expression -> SENSOR5 .)


state 63

    (65) expression -> MINUS . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 118

state 64

    (82) expression -> SENSOR7 .

    AND             reduce using rule 82 (expression -> SENSOR7 .)
    OR              reduce using rule 82 (expression -> SENSOR7 .)
    XOR             reduce using rule 82 (expression -> SENSOR7 .)
    LESSTHAN        reduce using rule 82 (expression -> SENSOR7 .)
    GREATERTHAN     reduce using rule 82 (expression -> SENSOR7 .)
    EQUALS          reduce using rule 82 (expression -> SENSOR7 .)
    PLUS            reduce using rule 82 (expression -> SENSOR7 .)
    MINUS           reduce using rule 82 (expression -> SENSOR7 .)
    TIMES           reduce using rule 82 (expression -> SENSOR7 .)
    DIVIDE          reduce using rule 82 (expression -> SENSOR7 .)
    PERCENT         reduce using rule 82 (expression -> SENSOR7 .)
    REPEAT          reduce using rule 82 (expression -> SENSOR7 .)
    WHILE           reduce using rule 82 (expression -> SENSOR7 .)
    LOOP            reduce using rule 82 (expression -> SENSOR7 .)
    FOREVER         reduce using rule 82 (expression -> SENSOR7 .)
    IF              reduce using rule 82 (expression -> SENSOR7 .)
    IFELSE          reduce using rule 82 (expression -> SENSOR7 .)
    WAITUNTIL       reduce using rule 82 (expression -> SENSOR7 .)
    WHEN            reduce using rule 82 (expression -> SENSOR7 .)
    SHOW            reduce using rule 82 (expression -> SENSOR7 .)
    MAKE            reduce using rule 82 (expression -> SENSOR7 .)
    WAIT            reduce using rule 82 (expression -> SENSOR7 .)
    SEND            reduce using rule 82 (expression -> SENSOR7 .)
    RECORD          reduce using rule 82 (expression -> SENSOR7 .)
    ERASE           reduce using rule 82 (expression -> SENSOR7 .)
    SETSVH          reduce using rule 82 (expression -> SENSOR7 .)
    SVR             reduce using rule 82 (expression -> SENSOR7 .)
    SVL             reduce using rule 82 (expression -> SENSOR7 .)
    SETPOWER        reduce using rule 82 (expression -> SENSOR7 .)
    I2C_WRITE       reduce using rule 82 (expression -> SENSOR7 .)
    OUTPUT          reduce using rule 82 (expression -> SENSOR7 .)
    ONFOR           reduce using rule 82 (expression -> SENSOR7 .)
    BSEND           reduce using rule 82 (expression -> SENSOR7 .)
    BSR             reduce using rule 82 (expression -> SENSOR7 .)
    SETDP           reduce using rule 82 (expression -> SENSOR7 .)
    FASTSEND        reduce using rule 82 (expression -> SENSOR7 .)
    BEEP            reduce using rule 82 (expression -> SENSOR7 .)
    STOP            reduce using rule 82 (expression -> SENSOR7 .)
    RESET           reduce using rule 82 (expression -> SENSOR7 .)
    RESETDP         reduce using rule 82 (expression -> SENSOR7 .)
    ON              reduce using rule 82 (expression -> SENSOR7 .)
    OFF             reduce using rule 82 (expression -> SENSOR7 .)
    THISWAY         reduce using rule 82 (expression -> SENSOR7 .)
    THATWAY         reduce using rule 82 (expression -> SENSOR7 .)
    RD              reduce using rule 82 (expression -> SENSOR7 .)
    BRAKE           reduce using rule 82 (expression -> SENSOR7 .)
    LEDON           reduce using rule 82 (expression -> SENSOR7 .)
    LEDOFF          reduce using rule 82 (expression -> SENSOR7 .)
    I2C_START       reduce using rule 82 (expression -> SENSOR7 .)
    I2C_STOP        reduce using rule 82 (expression -> SENSOR7 .)
    WHENOFF         reduce using rule 82 (expression -> SENSOR7 .)
    MOTORATTENTION  reduce using rule 82 (expression -> SENSOR7 .)
    BYTES           reduce using rule 82 (expression -> SENSOR7 .)
    PROCEDURENAME   reduce using rule 82 (expression -> SENSOR7 .)
    END             reduce using rule 82 (expression -> SENSOR7 .)
    RBRACKET        reduce using rule 82 (expression -> SENSOR7 .)
    REPORTER        reduce using rule 82 (expression -> SENSOR7 .)
    NOT             reduce using rule 82 (expression -> SENSOR7 .)
    LPAREN          reduce using rule 82 (expression -> SENSOR7 .)
    LBRACKET        reduce using rule 82 (expression -> SENSOR7 .)
    I2C_READ        reduce using rule 82 (expression -> SENSOR7 .)
    HIGHBYTE        reduce using rule 82 (expression -> SENSOR7 .)
    LOWBYTE         reduce using rule 82 (expression -> SENSOR7 .)
    NUMBERLITERAL   reduce using rule 82 (expression -> SENSOR7 .)
    TIMER           reduce using rule 82 (expression -> SENSOR7 .)
    RANDOM          reduce using rule 82 (expression -> SENSOR7 .)
    RECALL          reduce using rule 82 (expression -> SENSOR7 .)
    SENSOR1         reduce using rule 82 (expression -> SENSOR7 .)
    SENSOR2         reduce using rule 82 (expression -> SENSOR7 .)
    SENSOR3         reduce using rule 82 (expression -> SENSOR7 .)
    SENSOR4         reduce using rule 82 (expression -> SENSOR7 .)
    SENSOR5         reduce using rule 82 (expression -> SENSOR7 .)
    SENSOR6         reduce using rule 82 (expression -> SENSOR7 .)
    SENSOR7         reduce using rule 82 (expression -> SENSOR7 .)
    SENSOR8         reduce using rule 82 (expression -> SENSOR7 .)
    SWITCH1         reduce using rule 82 (expression -> SENSOR7 .)
    SWITCH2         reduce using rule 82 (expression -> SENSOR7 .)
    SWITCH3         reduce using rule 82 (expression -> SENSOR7 .)
    SWITCH4         reduce using rule 82 (expression -> SENSOR7 .)
    SWITCH5         reduce using rule 82 (expression -> SENSOR7 .)
    SWITCH6         reduce using rule 82 (expression -> SENSOR7 .)
    SWITCH7         reduce using rule 82 (expression -> SENSOR7 .)
    SWITCH8         reduce using rule 82 (expression -> SENSOR7 .)
    NEWIRQ          reduce using rule 82 (expression -> SENSOR7 .)
    SERIAL          reduce using rule 82 (expression -> SENSOR7 .)
    RPAREN          reduce using rule 82 (expression -> SENSOR7 .)


state 65

    (81) expression -> SENSOR6 .

    AND             reduce using rule 81 (expression -> SENSOR6 .)
    OR              reduce using rule 81 (expression -> SENSOR6 .)
    XOR             reduce using rule 81 (expression -> SENSOR6 .)
    LESSTHAN        reduce using rule 81 (expression -> SENSOR6 .)
    GREATERTHAN     reduce using rule 81 (expression -> SENSOR6 .)
    EQUALS          reduce using rule 81 (expression -> SENSOR6 .)
    PLUS            reduce using rule 81 (expression -> SENSOR6 .)
    MINUS           reduce using rule 81 (expression -> SENSOR6 .)
    TIMES           reduce using rule 81 (expression -> SENSOR6 .)
    DIVIDE          reduce using rule 81 (expression -> SENSOR6 .)
    PERCENT         reduce using rule 81 (expression -> SENSOR6 .)
    REPEAT          reduce using rule 81 (expression -> SENSOR6 .)
    WHILE           reduce using rule 81 (expression -> SENSOR6 .)
    LOOP            reduce using rule 81 (expression -> SENSOR6 .)
    FOREVER         reduce using rule 81 (expression -> SENSOR6 .)
    IF              reduce using rule 81 (expression -> SENSOR6 .)
    IFELSE          reduce using rule 81 (expression -> SENSOR6 .)
    WAITUNTIL       reduce using rule 81 (expression -> SENSOR6 .)
    WHEN            reduce using rule 81 (expression -> SENSOR6 .)
    SHOW            reduce using rule 81 (expression -> SENSOR6 .)
    MAKE            reduce using rule 81 (expression -> SENSOR6 .)
    WAIT            reduce using rule 81 (expression -> SENSOR6 .)
    SEND            reduce using rule 81 (expression -> SENSOR6 .)
    RECORD          reduce using rule 81 (expression -> SENSOR6 .)
    ERASE           reduce using rule 81 (expression -> SENSOR6 .)
    SETSVH          reduce using rule 81 (expression -> SENSOR6 .)
    SVR             reduce using rule 81 (expression -> SENSOR6 .)
    SVL             reduce using rule 81 (expression -> SENSOR6 .)
    SETPOWER        reduce using rule 81 (expression -> SENSOR6 .)
    I2C_WRITE       reduce using rule 81 (expression -> SENSOR6 .)
    OUTPUT          reduce using rule 81 (expression -> SENSOR6 .)
    ONFOR           reduce using rule 81 (expression -> SENSOR6 .)
    BSEND           reduce using rule 81 (expression -> SENSOR6 .)
    BSR             reduce using rule 81 (expression -> SENSOR6 .)
    SETDP           reduce using rule 81 (expression -> SENSOR6 .)
    FASTSEND        reduce using rule 81 (expression -> SENSOR6 .)
    BEEP            reduce using rule 81 (expression -> SENSOR6 .)
    STOP            reduce using rule 81 (expression -> SENSOR6 .)
    RESET           reduce using rule 81 (expression -> SENSOR6 .)
    RESETDP         reduce using rule 81 (expression -> SENSOR6 .)
    ON              reduce using rule 81 (expression -> SENSOR6 .)
    OFF             reduce using rule 81 (expression -> SENSOR6 .)
    THISWAY         reduce using rule 81 (expression -> SENSOR6 .)
    THATWAY         reduce using rule 81 (expression -> SENSOR6 .)
    RD              reduce using rule 81 (expression -> SENSOR6 .)
    BRAKE           reduce using rule 81 (expression -> SENSOR6 .)
    LEDON           reduce using rule 81 (expression -> SENSOR6 .)
    LEDOFF          reduce using rule 81 (expression -> SENSOR6 .)
    I2C_START       reduce using rule 81 (expression -> SENSOR6 .)
    I2C_STOP        reduce using rule 81 (expression -> SENSOR6 .)
    WHENOFF         reduce using rule 81 (expression -> SENSOR6 .)
    MOTORATTENTION  reduce using rule 81 (expression -> SENSOR6 .)
    BYTES           reduce using rule 81 (expression -> SENSOR6 .)
    PROCEDURENAME   reduce using rule 81 (expression -> SENSOR6 .)
    END             reduce using rule 81 (expression -> SENSOR6 .)
    RBRACKET        reduce using rule 81 (expression -> SENSOR6 .)
    REPORTER        reduce using rule 81 (expression -> SENSOR6 .)
    NOT             reduce using rule 81 (expression -> SENSOR6 .)
    LPAREN          reduce using rule 81 (expression -> SENSOR6 .)
    LBRACKET        reduce using rule 81 (expression -> SENSOR6 .)
    I2C_READ        reduce using rule 81 (expression -> SENSOR6 .)
    HIGHBYTE        reduce using rule 81 (expression -> SENSOR6 .)
    LOWBYTE         reduce using rule 81 (expression -> SENSOR6 .)
    NUMBERLITERAL   reduce using rule 81 (expression -> SENSOR6 .)
    TIMER           reduce using rule 81 (expression -> SENSOR6 .)
    RANDOM          reduce using rule 81 (expression -> SENSOR6 .)
    RECALL          reduce using rule 81 (expression -> SENSOR6 .)
    SENSOR1         reduce using rule 81 (expression -> SENSOR6 .)
    SENSOR2         reduce using rule 81 (expression -> SENSOR6 .)
    SENSOR3         reduce using rule 81 (expression -> SENSOR6 .)
    SENSOR4         reduce using rule 81 (expression -> SENSOR6 .)
    SENSOR5         reduce using rule 81 (expression -> SENSOR6 .)
    SENSOR6         reduce using rule 81 (expression -> SENSOR6 .)
    SENSOR7         reduce using rule 81 (expression -> SENSOR6 .)
    SENSOR8         reduce using rule 81 (expression -> SENSOR6 .)
    SWITCH1         reduce using rule 81 (expression -> SENSOR6 .)
    SWITCH2         reduce using rule 81 (expression -> SENSOR6 .)
    SWITCH3         reduce using rule 81 (expression -> SENSOR6 .)
    SWITCH4         reduce using rule 81 (expression -> SENSOR6 .)
    SWITCH5         reduce using rule 81 (expression -> SENSOR6 .)
    SWITCH6         reduce using rule 81 (expression -> SENSOR6 .)
    SWITCH7         reduce using rule 81 (expression -> SENSOR6 .)
    SWITCH8         reduce using rule 81 (expression -> SENSOR6 .)
    NEWIRQ          reduce using rule 81 (expression -> SENSOR6 .)
    SERIAL          reduce using rule 81 (expression -> SENSOR6 .)
    RPAREN          reduce using rule 81 (expression -> SENSOR6 .)


state 66

    (91) expression -> SWITCH8 .

    AND             reduce using rule 91 (expression -> SWITCH8 .)
    OR              reduce using rule 91 (expression -> SWITCH8 .)
    XOR             reduce using rule 91 (expression -> SWITCH8 .)
    LESSTHAN        reduce using rule 91 (expression -> SWITCH8 .)
    GREATERTHAN     reduce using rule 91 (expression -> SWITCH8 .)
    EQUALS          reduce using rule 91 (expression -> SWITCH8 .)
    PLUS            reduce using rule 91 (expression -> SWITCH8 .)
    MINUS           reduce using rule 91 (expression -> SWITCH8 .)
    TIMES           reduce using rule 91 (expression -> SWITCH8 .)
    DIVIDE          reduce using rule 91 (expression -> SWITCH8 .)
    PERCENT         reduce using rule 91 (expression -> SWITCH8 .)
    REPEAT          reduce using rule 91 (expression -> SWITCH8 .)
    WHILE           reduce using rule 91 (expression -> SWITCH8 .)
    LOOP            reduce using rule 91 (expression -> SWITCH8 .)
    FOREVER         reduce using rule 91 (expression -> SWITCH8 .)
    IF              reduce using rule 91 (expression -> SWITCH8 .)
    IFELSE          reduce using rule 91 (expression -> SWITCH8 .)
    WAITUNTIL       reduce using rule 91 (expression -> SWITCH8 .)
    WHEN            reduce using rule 91 (expression -> SWITCH8 .)
    SHOW            reduce using rule 91 (expression -> SWITCH8 .)
    MAKE            reduce using rule 91 (expression -> SWITCH8 .)
    WAIT            reduce using rule 91 (expression -> SWITCH8 .)
    SEND            reduce using rule 91 (expression -> SWITCH8 .)
    RECORD          reduce using rule 91 (expression -> SWITCH8 .)
    ERASE           reduce using rule 91 (expression -> SWITCH8 .)
    SETSVH          reduce using rule 91 (expression -> SWITCH8 .)
    SVR             reduce using rule 91 (expression -> SWITCH8 .)
    SVL             reduce using rule 91 (expression -> SWITCH8 .)
    SETPOWER        reduce using rule 91 (expression -> SWITCH8 .)
    I2C_WRITE       reduce using rule 91 (expression -> SWITCH8 .)
    OUTPUT          reduce using rule 91 (expression -> SWITCH8 .)
    ONFOR           reduce using rule 91 (expression -> SWITCH8 .)
    BSEND           reduce using rule 91 (expression -> SWITCH8 .)
    BSR             reduce using rule 91 (expression -> SWITCH8 .)
    SETDP           reduce using rule 91 (expression -> SWITCH8 .)
    FASTSEND        reduce using rule 91 (expression -> SWITCH8 .)
    BEEP            reduce using rule 91 (expression -> SWITCH8 .)
    STOP            reduce using rule 91 (expression -> SWITCH8 .)
    RESET           reduce using rule 91 (expression -> SWITCH8 .)
    RESETDP         reduce using rule 91 (expression -> SWITCH8 .)
    ON              reduce using rule 91 (expression -> SWITCH8 .)
    OFF             reduce using rule 91 (expression -> SWITCH8 .)
    THISWAY         reduce using rule 91 (expression -> SWITCH8 .)
    THATWAY         reduce using rule 91 (expression -> SWITCH8 .)
    RD              reduce using rule 91 (expression -> SWITCH8 .)
    BRAKE           reduce using rule 91 (expression -> SWITCH8 .)
    LEDON           reduce using rule 91 (expression -> SWITCH8 .)
    LEDOFF          reduce using rule 91 (expression -> SWITCH8 .)
    I2C_START       reduce using rule 91 (expression -> SWITCH8 .)
    I2C_STOP        reduce using rule 91 (expression -> SWITCH8 .)
    WHENOFF         reduce using rule 91 (expression -> SWITCH8 .)
    MOTORATTENTION  reduce using rule 91 (expression -> SWITCH8 .)
    BYTES           reduce using rule 91 (expression -> SWITCH8 .)
    PROCEDURENAME   reduce using rule 91 (expression -> SWITCH8 .)
    END             reduce using rule 91 (expression -> SWITCH8 .)
    RBRACKET        reduce using rule 91 (expression -> SWITCH8 .)
    REPORTER        reduce using rule 91 (expression -> SWITCH8 .)
    NOT             reduce using rule 91 (expression -> SWITCH8 .)
    LPAREN          reduce using rule 91 (expression -> SWITCH8 .)
    LBRACKET        reduce using rule 91 (expression -> SWITCH8 .)
    I2C_READ        reduce using rule 91 (expression -> SWITCH8 .)
    HIGHBYTE        reduce using rule 91 (expression -> SWITCH8 .)
    LOWBYTE         reduce using rule 91 (expression -> SWITCH8 .)
    NUMBERLITERAL   reduce using rule 91 (expression -> SWITCH8 .)
    TIMER           reduce using rule 91 (expression -> SWITCH8 .)
    RANDOM          reduce using rule 91 (expression -> SWITCH8 .)
    RECALL          reduce using rule 91 (expression -> SWITCH8 .)
    SENSOR1         reduce using rule 91 (expression -> SWITCH8 .)
    SENSOR2         reduce using rule 91 (expression -> SWITCH8 .)
    SENSOR3         reduce using rule 91 (expression -> SWITCH8 .)
    SENSOR4         reduce using rule 91 (expression -> SWITCH8 .)
    SENSOR5         reduce using rule 91 (expression -> SWITCH8 .)
    SENSOR6         reduce using rule 91 (expression -> SWITCH8 .)
    SENSOR7         reduce using rule 91 (expression -> SWITCH8 .)
    SENSOR8         reduce using rule 91 (expression -> SWITCH8 .)
    SWITCH1         reduce using rule 91 (expression -> SWITCH8 .)
    SWITCH2         reduce using rule 91 (expression -> SWITCH8 .)
    SWITCH3         reduce using rule 91 (expression -> SWITCH8 .)
    SWITCH4         reduce using rule 91 (expression -> SWITCH8 .)
    SWITCH5         reduce using rule 91 (expression -> SWITCH8 .)
    SWITCH6         reduce using rule 91 (expression -> SWITCH8 .)
    SWITCH7         reduce using rule 91 (expression -> SWITCH8 .)
    SWITCH8         reduce using rule 91 (expression -> SWITCH8 .)
    NEWIRQ          reduce using rule 91 (expression -> SWITCH8 .)
    SERIAL          reduce using rule 91 (expression -> SWITCH8 .)
    RPAREN          reduce using rule 91 (expression -> SWITCH8 .)


state 67

    (86) expression -> SWITCH3 .

    AND             reduce using rule 86 (expression -> SWITCH3 .)
    OR              reduce using rule 86 (expression -> SWITCH3 .)
    XOR             reduce using rule 86 (expression -> SWITCH3 .)
    LESSTHAN        reduce using rule 86 (expression -> SWITCH3 .)
    GREATERTHAN     reduce using rule 86 (expression -> SWITCH3 .)
    EQUALS          reduce using rule 86 (expression -> SWITCH3 .)
    PLUS            reduce using rule 86 (expression -> SWITCH3 .)
    MINUS           reduce using rule 86 (expression -> SWITCH3 .)
    TIMES           reduce using rule 86 (expression -> SWITCH3 .)
    DIVIDE          reduce using rule 86 (expression -> SWITCH3 .)
    PERCENT         reduce using rule 86 (expression -> SWITCH3 .)
    REPEAT          reduce using rule 86 (expression -> SWITCH3 .)
    WHILE           reduce using rule 86 (expression -> SWITCH3 .)
    LOOP            reduce using rule 86 (expression -> SWITCH3 .)
    FOREVER         reduce using rule 86 (expression -> SWITCH3 .)
    IF              reduce using rule 86 (expression -> SWITCH3 .)
    IFELSE          reduce using rule 86 (expression -> SWITCH3 .)
    WAITUNTIL       reduce using rule 86 (expression -> SWITCH3 .)
    WHEN            reduce using rule 86 (expression -> SWITCH3 .)
    SHOW            reduce using rule 86 (expression -> SWITCH3 .)
    MAKE            reduce using rule 86 (expression -> SWITCH3 .)
    WAIT            reduce using rule 86 (expression -> SWITCH3 .)
    SEND            reduce using rule 86 (expression -> SWITCH3 .)
    RECORD          reduce using rule 86 (expression -> SWITCH3 .)
    ERASE           reduce using rule 86 (expression -> SWITCH3 .)
    SETSVH          reduce using rule 86 (expression -> SWITCH3 .)
    SVR             reduce using rule 86 (expression -> SWITCH3 .)
    SVL             reduce using rule 86 (expression -> SWITCH3 .)
    SETPOWER        reduce using rule 86 (expression -> SWITCH3 .)
    I2C_WRITE       reduce using rule 86 (expression -> SWITCH3 .)
    OUTPUT          reduce using rule 86 (expression -> SWITCH3 .)
    ONFOR           reduce using rule 86 (expression -> SWITCH3 .)
    BSEND           reduce using rule 86 (expression -> SWITCH3 .)
    BSR             reduce using rule 86 (expression -> SWITCH3 .)
    SETDP           reduce using rule 86 (expression -> SWITCH3 .)
    FASTSEND        reduce using rule 86 (expression -> SWITCH3 .)
    BEEP            reduce using rule 86 (expression -> SWITCH3 .)
    STOP            reduce using rule 86 (expression -> SWITCH3 .)
    RESET           reduce using rule 86 (expression -> SWITCH3 .)
    RESETDP         reduce using rule 86 (expression -> SWITCH3 .)
    ON              reduce using rule 86 (expression -> SWITCH3 .)
    OFF             reduce using rule 86 (expression -> SWITCH3 .)
    THISWAY         reduce using rule 86 (expression -> SWITCH3 .)
    THATWAY         reduce using rule 86 (expression -> SWITCH3 .)
    RD              reduce using rule 86 (expression -> SWITCH3 .)
    BRAKE           reduce using rule 86 (expression -> SWITCH3 .)
    LEDON           reduce using rule 86 (expression -> SWITCH3 .)
    LEDOFF          reduce using rule 86 (expression -> SWITCH3 .)
    I2C_START       reduce using rule 86 (expression -> SWITCH3 .)
    I2C_STOP        reduce using rule 86 (expression -> SWITCH3 .)
    WHENOFF         reduce using rule 86 (expression -> SWITCH3 .)
    MOTORATTENTION  reduce using rule 86 (expression -> SWITCH3 .)
    BYTES           reduce using rule 86 (expression -> SWITCH3 .)
    PROCEDURENAME   reduce using rule 86 (expression -> SWITCH3 .)
    END             reduce using rule 86 (expression -> SWITCH3 .)
    RBRACKET        reduce using rule 86 (expression -> SWITCH3 .)
    REPORTER        reduce using rule 86 (expression -> SWITCH3 .)
    NOT             reduce using rule 86 (expression -> SWITCH3 .)
    LPAREN          reduce using rule 86 (expression -> SWITCH3 .)
    LBRACKET        reduce using rule 86 (expression -> SWITCH3 .)
    I2C_READ        reduce using rule 86 (expression -> SWITCH3 .)
    HIGHBYTE        reduce using rule 86 (expression -> SWITCH3 .)
    LOWBYTE         reduce using rule 86 (expression -> SWITCH3 .)
    NUMBERLITERAL   reduce using rule 86 (expression -> SWITCH3 .)
    TIMER           reduce using rule 86 (expression -> SWITCH3 .)
    RANDOM          reduce using rule 86 (expression -> SWITCH3 .)
    RECALL          reduce using rule 86 (expression -> SWITCH3 .)
    SENSOR1         reduce using rule 86 (expression -> SWITCH3 .)
    SENSOR2         reduce using rule 86 (expression -> SWITCH3 .)
    SENSOR3         reduce using rule 86 (expression -> SWITCH3 .)
    SENSOR4         reduce using rule 86 (expression -> SWITCH3 .)
    SENSOR5         reduce using rule 86 (expression -> SWITCH3 .)
    SENSOR6         reduce using rule 86 (expression -> SWITCH3 .)
    SENSOR7         reduce using rule 86 (expression -> SWITCH3 .)
    SENSOR8         reduce using rule 86 (expression -> SWITCH3 .)
    SWITCH1         reduce using rule 86 (expression -> SWITCH3 .)
    SWITCH2         reduce using rule 86 (expression -> SWITCH3 .)
    SWITCH3         reduce using rule 86 (expression -> SWITCH3 .)
    SWITCH4         reduce using rule 86 (expression -> SWITCH3 .)
    SWITCH5         reduce using rule 86 (expression -> SWITCH3 .)
    SWITCH6         reduce using rule 86 (expression -> SWITCH3 .)
    SWITCH7         reduce using rule 86 (expression -> SWITCH3 .)
    SWITCH8         reduce using rule 86 (expression -> SWITCH3 .)
    NEWIRQ          reduce using rule 86 (expression -> SWITCH3 .)
    SERIAL          reduce using rule 86 (expression -> SWITCH3 .)
    RPAREN          reduce using rule 86 (expression -> SWITCH3 .)


state 68

    (85) expression -> SWITCH2 .

    AND             reduce using rule 85 (expression -> SWITCH2 .)
    OR              reduce using rule 85 (expression -> SWITCH2 .)
    XOR             reduce using rule 85 (expression -> SWITCH2 .)
    LESSTHAN        reduce using rule 85 (expression -> SWITCH2 .)
    GREATERTHAN     reduce using rule 85 (expression -> SWITCH2 .)
    EQUALS          reduce using rule 85 (expression -> SWITCH2 .)
    PLUS            reduce using rule 85 (expression -> SWITCH2 .)
    MINUS           reduce using rule 85 (expression -> SWITCH2 .)
    TIMES           reduce using rule 85 (expression -> SWITCH2 .)
    DIVIDE          reduce using rule 85 (expression -> SWITCH2 .)
    PERCENT         reduce using rule 85 (expression -> SWITCH2 .)
    REPEAT          reduce using rule 85 (expression -> SWITCH2 .)
    WHILE           reduce using rule 85 (expression -> SWITCH2 .)
    LOOP            reduce using rule 85 (expression -> SWITCH2 .)
    FOREVER         reduce using rule 85 (expression -> SWITCH2 .)
    IF              reduce using rule 85 (expression -> SWITCH2 .)
    IFELSE          reduce using rule 85 (expression -> SWITCH2 .)
    WAITUNTIL       reduce using rule 85 (expression -> SWITCH2 .)
    WHEN            reduce using rule 85 (expression -> SWITCH2 .)
    SHOW            reduce using rule 85 (expression -> SWITCH2 .)
    MAKE            reduce using rule 85 (expression -> SWITCH2 .)
    WAIT            reduce using rule 85 (expression -> SWITCH2 .)
    SEND            reduce using rule 85 (expression -> SWITCH2 .)
    RECORD          reduce using rule 85 (expression -> SWITCH2 .)
    ERASE           reduce using rule 85 (expression -> SWITCH2 .)
    SETSVH          reduce using rule 85 (expression -> SWITCH2 .)
    SVR             reduce using rule 85 (expression -> SWITCH2 .)
    SVL             reduce using rule 85 (expression -> SWITCH2 .)
    SETPOWER        reduce using rule 85 (expression -> SWITCH2 .)
    I2C_WRITE       reduce using rule 85 (expression -> SWITCH2 .)
    OUTPUT          reduce using rule 85 (expression -> SWITCH2 .)
    ONFOR           reduce using rule 85 (expression -> SWITCH2 .)
    BSEND           reduce using rule 85 (expression -> SWITCH2 .)
    BSR             reduce using rule 85 (expression -> SWITCH2 .)
    SETDP           reduce using rule 85 (expression -> SWITCH2 .)
    FASTSEND        reduce using rule 85 (expression -> SWITCH2 .)
    BEEP            reduce using rule 85 (expression -> SWITCH2 .)
    STOP            reduce using rule 85 (expression -> SWITCH2 .)
    RESET           reduce using rule 85 (expression -> SWITCH2 .)
    RESETDP         reduce using rule 85 (expression -> SWITCH2 .)
    ON              reduce using rule 85 (expression -> SWITCH2 .)
    OFF             reduce using rule 85 (expression -> SWITCH2 .)
    THISWAY         reduce using rule 85 (expression -> SWITCH2 .)
    THATWAY         reduce using rule 85 (expression -> SWITCH2 .)
    RD              reduce using rule 85 (expression -> SWITCH2 .)
    BRAKE           reduce using rule 85 (expression -> SWITCH2 .)
    LEDON           reduce using rule 85 (expression -> SWITCH2 .)
    LEDOFF          reduce using rule 85 (expression -> SWITCH2 .)
    I2C_START       reduce using rule 85 (expression -> SWITCH2 .)
    I2C_STOP        reduce using rule 85 (expression -> SWITCH2 .)
    WHENOFF         reduce using rule 85 (expression -> SWITCH2 .)
    MOTORATTENTION  reduce using rule 85 (expression -> SWITCH2 .)
    BYTES           reduce using rule 85 (expression -> SWITCH2 .)
    PROCEDURENAME   reduce using rule 85 (expression -> SWITCH2 .)
    END             reduce using rule 85 (expression -> SWITCH2 .)
    RBRACKET        reduce using rule 85 (expression -> SWITCH2 .)
    REPORTER        reduce using rule 85 (expression -> SWITCH2 .)
    NOT             reduce using rule 85 (expression -> SWITCH2 .)
    LPAREN          reduce using rule 85 (expression -> SWITCH2 .)
    LBRACKET        reduce using rule 85 (expression -> SWITCH2 .)
    I2C_READ        reduce using rule 85 (expression -> SWITCH2 .)
    HIGHBYTE        reduce using rule 85 (expression -> SWITCH2 .)
    LOWBYTE         reduce using rule 85 (expression -> SWITCH2 .)
    NUMBERLITERAL   reduce using rule 85 (expression -> SWITCH2 .)
    TIMER           reduce using rule 85 (expression -> SWITCH2 .)
    RANDOM          reduce using rule 85 (expression -> SWITCH2 .)
    RECALL          reduce using rule 85 (expression -> SWITCH2 .)
    SENSOR1         reduce using rule 85 (expression -> SWITCH2 .)
    SENSOR2         reduce using rule 85 (expression -> SWITCH2 .)
    SENSOR3         reduce using rule 85 (expression -> SWITCH2 .)
    SENSOR4         reduce using rule 85 (expression -> SWITCH2 .)
    SENSOR5         reduce using rule 85 (expression -> SWITCH2 .)
    SENSOR6         reduce using rule 85 (expression -> SWITCH2 .)
    SENSOR7         reduce using rule 85 (expression -> SWITCH2 .)
    SENSOR8         reduce using rule 85 (expression -> SWITCH2 .)
    SWITCH1         reduce using rule 85 (expression -> SWITCH2 .)
    SWITCH2         reduce using rule 85 (expression -> SWITCH2 .)
    SWITCH3         reduce using rule 85 (expression -> SWITCH2 .)
    SWITCH4         reduce using rule 85 (expression -> SWITCH2 .)
    SWITCH5         reduce using rule 85 (expression -> SWITCH2 .)
    SWITCH6         reduce using rule 85 (expression -> SWITCH2 .)
    SWITCH7         reduce using rule 85 (expression -> SWITCH2 .)
    SWITCH8         reduce using rule 85 (expression -> SWITCH2 .)
    NEWIRQ          reduce using rule 85 (expression -> SWITCH2 .)
    SERIAL          reduce using rule 85 (expression -> SWITCH2 .)
    RPAREN          reduce using rule 85 (expression -> SWITCH2 .)


state 69

    (84) expression -> SWITCH1 .

    AND             reduce using rule 84 (expression -> SWITCH1 .)
    OR              reduce using rule 84 (expression -> SWITCH1 .)
    XOR             reduce using rule 84 (expression -> SWITCH1 .)
    LESSTHAN        reduce using rule 84 (expression -> SWITCH1 .)
    GREATERTHAN     reduce using rule 84 (expression -> SWITCH1 .)
    EQUALS          reduce using rule 84 (expression -> SWITCH1 .)
    PLUS            reduce using rule 84 (expression -> SWITCH1 .)
    MINUS           reduce using rule 84 (expression -> SWITCH1 .)
    TIMES           reduce using rule 84 (expression -> SWITCH1 .)
    DIVIDE          reduce using rule 84 (expression -> SWITCH1 .)
    PERCENT         reduce using rule 84 (expression -> SWITCH1 .)
    REPEAT          reduce using rule 84 (expression -> SWITCH1 .)
    WHILE           reduce using rule 84 (expression -> SWITCH1 .)
    LOOP            reduce using rule 84 (expression -> SWITCH1 .)
    FOREVER         reduce using rule 84 (expression -> SWITCH1 .)
    IF              reduce using rule 84 (expression -> SWITCH1 .)
    IFELSE          reduce using rule 84 (expression -> SWITCH1 .)
    WAITUNTIL       reduce using rule 84 (expression -> SWITCH1 .)
    WHEN            reduce using rule 84 (expression -> SWITCH1 .)
    SHOW            reduce using rule 84 (expression -> SWITCH1 .)
    MAKE            reduce using rule 84 (expression -> SWITCH1 .)
    WAIT            reduce using rule 84 (expression -> SWITCH1 .)
    SEND            reduce using rule 84 (expression -> SWITCH1 .)
    RECORD          reduce using rule 84 (expression -> SWITCH1 .)
    ERASE           reduce using rule 84 (expression -> SWITCH1 .)
    SETSVH          reduce using rule 84 (expression -> SWITCH1 .)
    SVR             reduce using rule 84 (expression -> SWITCH1 .)
    SVL             reduce using rule 84 (expression -> SWITCH1 .)
    SETPOWER        reduce using rule 84 (expression -> SWITCH1 .)
    I2C_WRITE       reduce using rule 84 (expression -> SWITCH1 .)
    OUTPUT          reduce using rule 84 (expression -> SWITCH1 .)
    ONFOR           reduce using rule 84 (expression -> SWITCH1 .)
    BSEND           reduce using rule 84 (expression -> SWITCH1 .)
    BSR             reduce using rule 84 (expression -> SWITCH1 .)
    SETDP           reduce using rule 84 (expression -> SWITCH1 .)
    FASTSEND        reduce using rule 84 (expression -> SWITCH1 .)
    BEEP            reduce using rule 84 (expression -> SWITCH1 .)
    STOP            reduce using rule 84 (expression -> SWITCH1 .)
    RESET           reduce using rule 84 (expression -> SWITCH1 .)
    RESETDP         reduce using rule 84 (expression -> SWITCH1 .)
    ON              reduce using rule 84 (expression -> SWITCH1 .)
    OFF             reduce using rule 84 (expression -> SWITCH1 .)
    THISWAY         reduce using rule 84 (expression -> SWITCH1 .)
    THATWAY         reduce using rule 84 (expression -> SWITCH1 .)
    RD              reduce using rule 84 (expression -> SWITCH1 .)
    BRAKE           reduce using rule 84 (expression -> SWITCH1 .)
    LEDON           reduce using rule 84 (expression -> SWITCH1 .)
    LEDOFF          reduce using rule 84 (expression -> SWITCH1 .)
    I2C_START       reduce using rule 84 (expression -> SWITCH1 .)
    I2C_STOP        reduce using rule 84 (expression -> SWITCH1 .)
    WHENOFF         reduce using rule 84 (expression -> SWITCH1 .)
    MOTORATTENTION  reduce using rule 84 (expression -> SWITCH1 .)
    BYTES           reduce using rule 84 (expression -> SWITCH1 .)
    PROCEDURENAME   reduce using rule 84 (expression -> SWITCH1 .)
    END             reduce using rule 84 (expression -> SWITCH1 .)
    RBRACKET        reduce using rule 84 (expression -> SWITCH1 .)
    REPORTER        reduce using rule 84 (expression -> SWITCH1 .)
    NOT             reduce using rule 84 (expression -> SWITCH1 .)
    LPAREN          reduce using rule 84 (expression -> SWITCH1 .)
    LBRACKET        reduce using rule 84 (expression -> SWITCH1 .)
    I2C_READ        reduce using rule 84 (expression -> SWITCH1 .)
    HIGHBYTE        reduce using rule 84 (expression -> SWITCH1 .)
    LOWBYTE         reduce using rule 84 (expression -> SWITCH1 .)
    NUMBERLITERAL   reduce using rule 84 (expression -> SWITCH1 .)
    TIMER           reduce using rule 84 (expression -> SWITCH1 .)
    RANDOM          reduce using rule 84 (expression -> SWITCH1 .)
    RECALL          reduce using rule 84 (expression -> SWITCH1 .)
    SENSOR1         reduce using rule 84 (expression -> SWITCH1 .)
    SENSOR2         reduce using rule 84 (expression -> SWITCH1 .)
    SENSOR3         reduce using rule 84 (expression -> SWITCH1 .)
    SENSOR4         reduce using rule 84 (expression -> SWITCH1 .)
    SENSOR5         reduce using rule 84 (expression -> SWITCH1 .)
    SENSOR6         reduce using rule 84 (expression -> SWITCH1 .)
    SENSOR7         reduce using rule 84 (expression -> SWITCH1 .)
    SENSOR8         reduce using rule 84 (expression -> SWITCH1 .)
    SWITCH1         reduce using rule 84 (expression -> SWITCH1 .)
    SWITCH2         reduce using rule 84 (expression -> SWITCH1 .)
    SWITCH3         reduce using rule 84 (expression -> SWITCH1 .)
    SWITCH4         reduce using rule 84 (expression -> SWITCH1 .)
    SWITCH5         reduce using rule 84 (expression -> SWITCH1 .)
    SWITCH6         reduce using rule 84 (expression -> SWITCH1 .)
    SWITCH7         reduce using rule 84 (expression -> SWITCH1 .)
    SWITCH8         reduce using rule 84 (expression -> SWITCH1 .)
    NEWIRQ          reduce using rule 84 (expression -> SWITCH1 .)
    SERIAL          reduce using rule 84 (expression -> SWITCH1 .)
    RPAREN          reduce using rule 84 (expression -> SWITCH1 .)


state 70

    (90) expression -> SWITCH7 .

    AND             reduce using rule 90 (expression -> SWITCH7 .)
    OR              reduce using rule 90 (expression -> SWITCH7 .)
    XOR             reduce using rule 90 (expression -> SWITCH7 .)
    LESSTHAN        reduce using rule 90 (expression -> SWITCH7 .)
    GREATERTHAN     reduce using rule 90 (expression -> SWITCH7 .)
    EQUALS          reduce using rule 90 (expression -> SWITCH7 .)
    PLUS            reduce using rule 90 (expression -> SWITCH7 .)
    MINUS           reduce using rule 90 (expression -> SWITCH7 .)
    TIMES           reduce using rule 90 (expression -> SWITCH7 .)
    DIVIDE          reduce using rule 90 (expression -> SWITCH7 .)
    PERCENT         reduce using rule 90 (expression -> SWITCH7 .)
    REPEAT          reduce using rule 90 (expression -> SWITCH7 .)
    WHILE           reduce using rule 90 (expression -> SWITCH7 .)
    LOOP            reduce using rule 90 (expression -> SWITCH7 .)
    FOREVER         reduce using rule 90 (expression -> SWITCH7 .)
    IF              reduce using rule 90 (expression -> SWITCH7 .)
    IFELSE          reduce using rule 90 (expression -> SWITCH7 .)
    WAITUNTIL       reduce using rule 90 (expression -> SWITCH7 .)
    WHEN            reduce using rule 90 (expression -> SWITCH7 .)
    SHOW            reduce using rule 90 (expression -> SWITCH7 .)
    MAKE            reduce using rule 90 (expression -> SWITCH7 .)
    WAIT            reduce using rule 90 (expression -> SWITCH7 .)
    SEND            reduce using rule 90 (expression -> SWITCH7 .)
    RECORD          reduce using rule 90 (expression -> SWITCH7 .)
    ERASE           reduce using rule 90 (expression -> SWITCH7 .)
    SETSVH          reduce using rule 90 (expression -> SWITCH7 .)
    SVR             reduce using rule 90 (expression -> SWITCH7 .)
    SVL             reduce using rule 90 (expression -> SWITCH7 .)
    SETPOWER        reduce using rule 90 (expression -> SWITCH7 .)
    I2C_WRITE       reduce using rule 90 (expression -> SWITCH7 .)
    OUTPUT          reduce using rule 90 (expression -> SWITCH7 .)
    ONFOR           reduce using rule 90 (expression -> SWITCH7 .)
    BSEND           reduce using rule 90 (expression -> SWITCH7 .)
    BSR             reduce using rule 90 (expression -> SWITCH7 .)
    SETDP           reduce using rule 90 (expression -> SWITCH7 .)
    FASTSEND        reduce using rule 90 (expression -> SWITCH7 .)
    BEEP            reduce using rule 90 (expression -> SWITCH7 .)
    STOP            reduce using rule 90 (expression -> SWITCH7 .)
    RESET           reduce using rule 90 (expression -> SWITCH7 .)
    RESETDP         reduce using rule 90 (expression -> SWITCH7 .)
    ON              reduce using rule 90 (expression -> SWITCH7 .)
    OFF             reduce using rule 90 (expression -> SWITCH7 .)
    THISWAY         reduce using rule 90 (expression -> SWITCH7 .)
    THATWAY         reduce using rule 90 (expression -> SWITCH7 .)
    RD              reduce using rule 90 (expression -> SWITCH7 .)
    BRAKE           reduce using rule 90 (expression -> SWITCH7 .)
    LEDON           reduce using rule 90 (expression -> SWITCH7 .)
    LEDOFF          reduce using rule 90 (expression -> SWITCH7 .)
    I2C_START       reduce using rule 90 (expression -> SWITCH7 .)
    I2C_STOP        reduce using rule 90 (expression -> SWITCH7 .)
    WHENOFF         reduce using rule 90 (expression -> SWITCH7 .)
    MOTORATTENTION  reduce using rule 90 (expression -> SWITCH7 .)
    BYTES           reduce using rule 90 (expression -> SWITCH7 .)
    PROCEDURENAME   reduce using rule 90 (expression -> SWITCH7 .)
    END             reduce using rule 90 (expression -> SWITCH7 .)
    RBRACKET        reduce using rule 90 (expression -> SWITCH7 .)
    REPORTER        reduce using rule 90 (expression -> SWITCH7 .)
    NOT             reduce using rule 90 (expression -> SWITCH7 .)
    LPAREN          reduce using rule 90 (expression -> SWITCH7 .)
    LBRACKET        reduce using rule 90 (expression -> SWITCH7 .)
    I2C_READ        reduce using rule 90 (expression -> SWITCH7 .)
    HIGHBYTE        reduce using rule 90 (expression -> SWITCH7 .)
    LOWBYTE         reduce using rule 90 (expression -> SWITCH7 .)
    NUMBERLITERAL   reduce using rule 90 (expression -> SWITCH7 .)
    TIMER           reduce using rule 90 (expression -> SWITCH7 .)
    RANDOM          reduce using rule 90 (expression -> SWITCH7 .)
    RECALL          reduce using rule 90 (expression -> SWITCH7 .)
    SENSOR1         reduce using rule 90 (expression -> SWITCH7 .)
    SENSOR2         reduce using rule 90 (expression -> SWITCH7 .)
    SENSOR3         reduce using rule 90 (expression -> SWITCH7 .)
    SENSOR4         reduce using rule 90 (expression -> SWITCH7 .)
    SENSOR5         reduce using rule 90 (expression -> SWITCH7 .)
    SENSOR6         reduce using rule 90 (expression -> SWITCH7 .)
    SENSOR7         reduce using rule 90 (expression -> SWITCH7 .)
    SENSOR8         reduce using rule 90 (expression -> SWITCH7 .)
    SWITCH1         reduce using rule 90 (expression -> SWITCH7 .)
    SWITCH2         reduce using rule 90 (expression -> SWITCH7 .)
    SWITCH3         reduce using rule 90 (expression -> SWITCH7 .)
    SWITCH4         reduce using rule 90 (expression -> SWITCH7 .)
    SWITCH5         reduce using rule 90 (expression -> SWITCH7 .)
    SWITCH6         reduce using rule 90 (expression -> SWITCH7 .)
    SWITCH7         reduce using rule 90 (expression -> SWITCH7 .)
    SWITCH8         reduce using rule 90 (expression -> SWITCH7 .)
    NEWIRQ          reduce using rule 90 (expression -> SWITCH7 .)
    SERIAL          reduce using rule 90 (expression -> SWITCH7 .)
    RPAREN          reduce using rule 90 (expression -> SWITCH7 .)


state 71

    (89) expression -> SWITCH6 .

    AND             reduce using rule 89 (expression -> SWITCH6 .)
    OR              reduce using rule 89 (expression -> SWITCH6 .)
    XOR             reduce using rule 89 (expression -> SWITCH6 .)
    LESSTHAN        reduce using rule 89 (expression -> SWITCH6 .)
    GREATERTHAN     reduce using rule 89 (expression -> SWITCH6 .)
    EQUALS          reduce using rule 89 (expression -> SWITCH6 .)
    PLUS            reduce using rule 89 (expression -> SWITCH6 .)
    MINUS           reduce using rule 89 (expression -> SWITCH6 .)
    TIMES           reduce using rule 89 (expression -> SWITCH6 .)
    DIVIDE          reduce using rule 89 (expression -> SWITCH6 .)
    PERCENT         reduce using rule 89 (expression -> SWITCH6 .)
    REPEAT          reduce using rule 89 (expression -> SWITCH6 .)
    WHILE           reduce using rule 89 (expression -> SWITCH6 .)
    LOOP            reduce using rule 89 (expression -> SWITCH6 .)
    FOREVER         reduce using rule 89 (expression -> SWITCH6 .)
    IF              reduce using rule 89 (expression -> SWITCH6 .)
    IFELSE          reduce using rule 89 (expression -> SWITCH6 .)
    WAITUNTIL       reduce using rule 89 (expression -> SWITCH6 .)
    WHEN            reduce using rule 89 (expression -> SWITCH6 .)
    SHOW            reduce using rule 89 (expression -> SWITCH6 .)
    MAKE            reduce using rule 89 (expression -> SWITCH6 .)
    WAIT            reduce using rule 89 (expression -> SWITCH6 .)
    SEND            reduce using rule 89 (expression -> SWITCH6 .)
    RECORD          reduce using rule 89 (expression -> SWITCH6 .)
    ERASE           reduce using rule 89 (expression -> SWITCH6 .)
    SETSVH          reduce using rule 89 (expression -> SWITCH6 .)
    SVR             reduce using rule 89 (expression -> SWITCH6 .)
    SVL             reduce using rule 89 (expression -> SWITCH6 .)
    SETPOWER        reduce using rule 89 (expression -> SWITCH6 .)
    I2C_WRITE       reduce using rule 89 (expression -> SWITCH6 .)
    OUTPUT          reduce using rule 89 (expression -> SWITCH6 .)
    ONFOR           reduce using rule 89 (expression -> SWITCH6 .)
    BSEND           reduce using rule 89 (expression -> SWITCH6 .)
    BSR             reduce using rule 89 (expression -> SWITCH6 .)
    SETDP           reduce using rule 89 (expression -> SWITCH6 .)
    FASTSEND        reduce using rule 89 (expression -> SWITCH6 .)
    BEEP            reduce using rule 89 (expression -> SWITCH6 .)
    STOP            reduce using rule 89 (expression -> SWITCH6 .)
    RESET           reduce using rule 89 (expression -> SWITCH6 .)
    RESETDP         reduce using rule 89 (expression -> SWITCH6 .)
    ON              reduce using rule 89 (expression -> SWITCH6 .)
    OFF             reduce using rule 89 (expression -> SWITCH6 .)
    THISWAY         reduce using rule 89 (expression -> SWITCH6 .)
    THATWAY         reduce using rule 89 (expression -> SWITCH6 .)
    RD              reduce using rule 89 (expression -> SWITCH6 .)
    BRAKE           reduce using rule 89 (expression -> SWITCH6 .)
    LEDON           reduce using rule 89 (expression -> SWITCH6 .)
    LEDOFF          reduce using rule 89 (expression -> SWITCH6 .)
    I2C_START       reduce using rule 89 (expression -> SWITCH6 .)
    I2C_STOP        reduce using rule 89 (expression -> SWITCH6 .)
    WHENOFF         reduce using rule 89 (expression -> SWITCH6 .)
    MOTORATTENTION  reduce using rule 89 (expression -> SWITCH6 .)
    BYTES           reduce using rule 89 (expression -> SWITCH6 .)
    PROCEDURENAME   reduce using rule 89 (expression -> SWITCH6 .)
    END             reduce using rule 89 (expression -> SWITCH6 .)
    RBRACKET        reduce using rule 89 (expression -> SWITCH6 .)
    REPORTER        reduce using rule 89 (expression -> SWITCH6 .)
    NOT             reduce using rule 89 (expression -> SWITCH6 .)
    LPAREN          reduce using rule 89 (expression -> SWITCH6 .)
    LBRACKET        reduce using rule 89 (expression -> SWITCH6 .)
    I2C_READ        reduce using rule 89 (expression -> SWITCH6 .)
    HIGHBYTE        reduce using rule 89 (expression -> SWITCH6 .)
    LOWBYTE         reduce using rule 89 (expression -> SWITCH6 .)
    NUMBERLITERAL   reduce using rule 89 (expression -> SWITCH6 .)
    TIMER           reduce using rule 89 (expression -> SWITCH6 .)
    RANDOM          reduce using rule 89 (expression -> SWITCH6 .)
    RECALL          reduce using rule 89 (expression -> SWITCH6 .)
    SENSOR1         reduce using rule 89 (expression -> SWITCH6 .)
    SENSOR2         reduce using rule 89 (expression -> SWITCH6 .)
    SENSOR3         reduce using rule 89 (expression -> SWITCH6 .)
    SENSOR4         reduce using rule 89 (expression -> SWITCH6 .)
    SENSOR5         reduce using rule 89 (expression -> SWITCH6 .)
    SENSOR6         reduce using rule 89 (expression -> SWITCH6 .)
    SENSOR7         reduce using rule 89 (expression -> SWITCH6 .)
    SENSOR8         reduce using rule 89 (expression -> SWITCH6 .)
    SWITCH1         reduce using rule 89 (expression -> SWITCH6 .)
    SWITCH2         reduce using rule 89 (expression -> SWITCH6 .)
    SWITCH3         reduce using rule 89 (expression -> SWITCH6 .)
    SWITCH4         reduce using rule 89 (expression -> SWITCH6 .)
    SWITCH5         reduce using rule 89 (expression -> SWITCH6 .)
    SWITCH6         reduce using rule 89 (expression -> SWITCH6 .)
    SWITCH7         reduce using rule 89 (expression -> SWITCH6 .)
    SWITCH8         reduce using rule 89 (expression -> SWITCH6 .)
    NEWIRQ          reduce using rule 89 (expression -> SWITCH6 .)
    SERIAL          reduce using rule 89 (expression -> SWITCH6 .)
    RPAREN          reduce using rule 89 (expression -> SWITCH6 .)


state 72

    (88) expression -> SWITCH5 .

    AND             reduce using rule 88 (expression -> SWITCH5 .)
    OR              reduce using rule 88 (expression -> SWITCH5 .)
    XOR             reduce using rule 88 (expression -> SWITCH5 .)
    LESSTHAN        reduce using rule 88 (expression -> SWITCH5 .)
    GREATERTHAN     reduce using rule 88 (expression -> SWITCH5 .)
    EQUALS          reduce using rule 88 (expression -> SWITCH5 .)
    PLUS            reduce using rule 88 (expression -> SWITCH5 .)
    MINUS           reduce using rule 88 (expression -> SWITCH5 .)
    TIMES           reduce using rule 88 (expression -> SWITCH5 .)
    DIVIDE          reduce using rule 88 (expression -> SWITCH5 .)
    PERCENT         reduce using rule 88 (expression -> SWITCH5 .)
    REPEAT          reduce using rule 88 (expression -> SWITCH5 .)
    WHILE           reduce using rule 88 (expression -> SWITCH5 .)
    LOOP            reduce using rule 88 (expression -> SWITCH5 .)
    FOREVER         reduce using rule 88 (expression -> SWITCH5 .)
    IF              reduce using rule 88 (expression -> SWITCH5 .)
    IFELSE          reduce using rule 88 (expression -> SWITCH5 .)
    WAITUNTIL       reduce using rule 88 (expression -> SWITCH5 .)
    WHEN            reduce using rule 88 (expression -> SWITCH5 .)
    SHOW            reduce using rule 88 (expression -> SWITCH5 .)
    MAKE            reduce using rule 88 (expression -> SWITCH5 .)
    WAIT            reduce using rule 88 (expression -> SWITCH5 .)
    SEND            reduce using rule 88 (expression -> SWITCH5 .)
    RECORD          reduce using rule 88 (expression -> SWITCH5 .)
    ERASE           reduce using rule 88 (expression -> SWITCH5 .)
    SETSVH          reduce using rule 88 (expression -> SWITCH5 .)
    SVR             reduce using rule 88 (expression -> SWITCH5 .)
    SVL             reduce using rule 88 (expression -> SWITCH5 .)
    SETPOWER        reduce using rule 88 (expression -> SWITCH5 .)
    I2C_WRITE       reduce using rule 88 (expression -> SWITCH5 .)
    OUTPUT          reduce using rule 88 (expression -> SWITCH5 .)
    ONFOR           reduce using rule 88 (expression -> SWITCH5 .)
    BSEND           reduce using rule 88 (expression -> SWITCH5 .)
    BSR             reduce using rule 88 (expression -> SWITCH5 .)
    SETDP           reduce using rule 88 (expression -> SWITCH5 .)
    FASTSEND        reduce using rule 88 (expression -> SWITCH5 .)
    BEEP            reduce using rule 88 (expression -> SWITCH5 .)
    STOP            reduce using rule 88 (expression -> SWITCH5 .)
    RESET           reduce using rule 88 (expression -> SWITCH5 .)
    RESETDP         reduce using rule 88 (expression -> SWITCH5 .)
    ON              reduce using rule 88 (expression -> SWITCH5 .)
    OFF             reduce using rule 88 (expression -> SWITCH5 .)
    THISWAY         reduce using rule 88 (expression -> SWITCH5 .)
    THATWAY         reduce using rule 88 (expression -> SWITCH5 .)
    RD              reduce using rule 88 (expression -> SWITCH5 .)
    BRAKE           reduce using rule 88 (expression -> SWITCH5 .)
    LEDON           reduce using rule 88 (expression -> SWITCH5 .)
    LEDOFF          reduce using rule 88 (expression -> SWITCH5 .)
    I2C_START       reduce using rule 88 (expression -> SWITCH5 .)
    I2C_STOP        reduce using rule 88 (expression -> SWITCH5 .)
    WHENOFF         reduce using rule 88 (expression -> SWITCH5 .)
    MOTORATTENTION  reduce using rule 88 (expression -> SWITCH5 .)
    BYTES           reduce using rule 88 (expression -> SWITCH5 .)
    PROCEDURENAME   reduce using rule 88 (expression -> SWITCH5 .)
    END             reduce using rule 88 (expression -> SWITCH5 .)
    RBRACKET        reduce using rule 88 (expression -> SWITCH5 .)
    REPORTER        reduce using rule 88 (expression -> SWITCH5 .)
    NOT             reduce using rule 88 (expression -> SWITCH5 .)
    LPAREN          reduce using rule 88 (expression -> SWITCH5 .)
    LBRACKET        reduce using rule 88 (expression -> SWITCH5 .)
    I2C_READ        reduce using rule 88 (expression -> SWITCH5 .)
    HIGHBYTE        reduce using rule 88 (expression -> SWITCH5 .)
    LOWBYTE         reduce using rule 88 (expression -> SWITCH5 .)
    NUMBERLITERAL   reduce using rule 88 (expression -> SWITCH5 .)
    TIMER           reduce using rule 88 (expression -> SWITCH5 .)
    RANDOM          reduce using rule 88 (expression -> SWITCH5 .)
    RECALL          reduce using rule 88 (expression -> SWITCH5 .)
    SENSOR1         reduce using rule 88 (expression -> SWITCH5 .)
    SENSOR2         reduce using rule 88 (expression -> SWITCH5 .)
    SENSOR3         reduce using rule 88 (expression -> SWITCH5 .)
    SENSOR4         reduce using rule 88 (expression -> SWITCH5 .)
    SENSOR5         reduce using rule 88 (expression -> SWITCH5 .)
    SENSOR6         reduce using rule 88 (expression -> SWITCH5 .)
    SENSOR7         reduce using rule 88 (expression -> SWITCH5 .)
    SENSOR8         reduce using rule 88 (expression -> SWITCH5 .)
    SWITCH1         reduce using rule 88 (expression -> SWITCH5 .)
    SWITCH2         reduce using rule 88 (expression -> SWITCH5 .)
    SWITCH3         reduce using rule 88 (expression -> SWITCH5 .)
    SWITCH4         reduce using rule 88 (expression -> SWITCH5 .)
    SWITCH5         reduce using rule 88 (expression -> SWITCH5 .)
    SWITCH6         reduce using rule 88 (expression -> SWITCH5 .)
    SWITCH7         reduce using rule 88 (expression -> SWITCH5 .)
    SWITCH8         reduce using rule 88 (expression -> SWITCH5 .)
    NEWIRQ          reduce using rule 88 (expression -> SWITCH5 .)
    SERIAL          reduce using rule 88 (expression -> SWITCH5 .)
    RPAREN          reduce using rule 88 (expression -> SWITCH5 .)


state 73

    (79) expression -> SENSOR4 .

    AND             reduce using rule 79 (expression -> SENSOR4 .)
    OR              reduce using rule 79 (expression -> SENSOR4 .)
    XOR             reduce using rule 79 (expression -> SENSOR4 .)
    LESSTHAN        reduce using rule 79 (expression -> SENSOR4 .)
    GREATERTHAN     reduce using rule 79 (expression -> SENSOR4 .)
    EQUALS          reduce using rule 79 (expression -> SENSOR4 .)
    PLUS            reduce using rule 79 (expression -> SENSOR4 .)
    MINUS           reduce using rule 79 (expression -> SENSOR4 .)
    TIMES           reduce using rule 79 (expression -> SENSOR4 .)
    DIVIDE          reduce using rule 79 (expression -> SENSOR4 .)
    PERCENT         reduce using rule 79 (expression -> SENSOR4 .)
    REPEAT          reduce using rule 79 (expression -> SENSOR4 .)
    WHILE           reduce using rule 79 (expression -> SENSOR4 .)
    LOOP            reduce using rule 79 (expression -> SENSOR4 .)
    FOREVER         reduce using rule 79 (expression -> SENSOR4 .)
    IF              reduce using rule 79 (expression -> SENSOR4 .)
    IFELSE          reduce using rule 79 (expression -> SENSOR4 .)
    WAITUNTIL       reduce using rule 79 (expression -> SENSOR4 .)
    WHEN            reduce using rule 79 (expression -> SENSOR4 .)
    SHOW            reduce using rule 79 (expression -> SENSOR4 .)
    MAKE            reduce using rule 79 (expression -> SENSOR4 .)
    WAIT            reduce using rule 79 (expression -> SENSOR4 .)
    SEND            reduce using rule 79 (expression -> SENSOR4 .)
    RECORD          reduce using rule 79 (expression -> SENSOR4 .)
    ERASE           reduce using rule 79 (expression -> SENSOR4 .)
    SETSVH          reduce using rule 79 (expression -> SENSOR4 .)
    SVR             reduce using rule 79 (expression -> SENSOR4 .)
    SVL             reduce using rule 79 (expression -> SENSOR4 .)
    SETPOWER        reduce using rule 79 (expression -> SENSOR4 .)
    I2C_WRITE       reduce using rule 79 (expression -> SENSOR4 .)
    OUTPUT          reduce using rule 79 (expression -> SENSOR4 .)
    ONFOR           reduce using rule 79 (expression -> SENSOR4 .)
    BSEND           reduce using rule 79 (expression -> SENSOR4 .)
    BSR             reduce using rule 79 (expression -> SENSOR4 .)
    SETDP           reduce using rule 79 (expression -> SENSOR4 .)
    FASTSEND        reduce using rule 79 (expression -> SENSOR4 .)
    BEEP            reduce using rule 79 (expression -> SENSOR4 .)
    STOP            reduce using rule 79 (expression -> SENSOR4 .)
    RESET           reduce using rule 79 (expression -> SENSOR4 .)
    RESETDP         reduce using rule 79 (expression -> SENSOR4 .)
    ON              reduce using rule 79 (expression -> SENSOR4 .)
    OFF             reduce using rule 79 (expression -> SENSOR4 .)
    THISWAY         reduce using rule 79 (expression -> SENSOR4 .)
    THATWAY         reduce using rule 79 (expression -> SENSOR4 .)
    RD              reduce using rule 79 (expression -> SENSOR4 .)
    BRAKE           reduce using rule 79 (expression -> SENSOR4 .)
    LEDON           reduce using rule 79 (expression -> SENSOR4 .)
    LEDOFF          reduce using rule 79 (expression -> SENSOR4 .)
    I2C_START       reduce using rule 79 (expression -> SENSOR4 .)
    I2C_STOP        reduce using rule 79 (expression -> SENSOR4 .)
    WHENOFF         reduce using rule 79 (expression -> SENSOR4 .)
    MOTORATTENTION  reduce using rule 79 (expression -> SENSOR4 .)
    BYTES           reduce using rule 79 (expression -> SENSOR4 .)
    PROCEDURENAME   reduce using rule 79 (expression -> SENSOR4 .)
    END             reduce using rule 79 (expression -> SENSOR4 .)
    RBRACKET        reduce using rule 79 (expression -> SENSOR4 .)
    REPORTER        reduce using rule 79 (expression -> SENSOR4 .)
    NOT             reduce using rule 79 (expression -> SENSOR4 .)
    LPAREN          reduce using rule 79 (expression -> SENSOR4 .)
    LBRACKET        reduce using rule 79 (expression -> SENSOR4 .)
    I2C_READ        reduce using rule 79 (expression -> SENSOR4 .)
    HIGHBYTE        reduce using rule 79 (expression -> SENSOR4 .)
    LOWBYTE         reduce using rule 79 (expression -> SENSOR4 .)
    NUMBERLITERAL   reduce using rule 79 (expression -> SENSOR4 .)
    TIMER           reduce using rule 79 (expression -> SENSOR4 .)
    RANDOM          reduce using rule 79 (expression -> SENSOR4 .)
    RECALL          reduce using rule 79 (expression -> SENSOR4 .)
    SENSOR1         reduce using rule 79 (expression -> SENSOR4 .)
    SENSOR2         reduce using rule 79 (expression -> SENSOR4 .)
    SENSOR3         reduce using rule 79 (expression -> SENSOR4 .)
    SENSOR4         reduce using rule 79 (expression -> SENSOR4 .)
    SENSOR5         reduce using rule 79 (expression -> SENSOR4 .)
    SENSOR6         reduce using rule 79 (expression -> SENSOR4 .)
    SENSOR7         reduce using rule 79 (expression -> SENSOR4 .)
    SENSOR8         reduce using rule 79 (expression -> SENSOR4 .)
    SWITCH1         reduce using rule 79 (expression -> SENSOR4 .)
    SWITCH2         reduce using rule 79 (expression -> SENSOR4 .)
    SWITCH3         reduce using rule 79 (expression -> SENSOR4 .)
    SWITCH4         reduce using rule 79 (expression -> SENSOR4 .)
    SWITCH5         reduce using rule 79 (expression -> SENSOR4 .)
    SWITCH6         reduce using rule 79 (expression -> SENSOR4 .)
    SWITCH7         reduce using rule 79 (expression -> SENSOR4 .)
    SWITCH8         reduce using rule 79 (expression -> SENSOR4 .)
    NEWIRQ          reduce using rule 79 (expression -> SENSOR4 .)
    SERIAL          reduce using rule 79 (expression -> SENSOR4 .)
    RPAREN          reduce using rule 79 (expression -> SENSOR4 .)


state 74

    (70) expression -> HIGHBYTE . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 119

state 75

    (53) expression -> REPORTER .

    AND             reduce using rule 53 (expression -> REPORTER .)
    OR              reduce using rule 53 (expression -> REPORTER .)
    XOR             reduce using rule 53 (expression -> REPORTER .)
    LESSTHAN        reduce using rule 53 (expression -> REPORTER .)
    GREATERTHAN     reduce using rule 53 (expression -> REPORTER .)
    EQUALS          reduce using rule 53 (expression -> REPORTER .)
    PLUS            reduce using rule 53 (expression -> REPORTER .)
    MINUS           reduce using rule 53 (expression -> REPORTER .)
    TIMES           reduce using rule 53 (expression -> REPORTER .)
    DIVIDE          reduce using rule 53 (expression -> REPORTER .)
    PERCENT         reduce using rule 53 (expression -> REPORTER .)
    REPEAT          reduce using rule 53 (expression -> REPORTER .)
    WHILE           reduce using rule 53 (expression -> REPORTER .)
    LOOP            reduce using rule 53 (expression -> REPORTER .)
    FOREVER         reduce using rule 53 (expression -> REPORTER .)
    IF              reduce using rule 53 (expression -> REPORTER .)
    IFELSE          reduce using rule 53 (expression -> REPORTER .)
    WAITUNTIL       reduce using rule 53 (expression -> REPORTER .)
    WHEN            reduce using rule 53 (expression -> REPORTER .)
    SHOW            reduce using rule 53 (expression -> REPORTER .)
    MAKE            reduce using rule 53 (expression -> REPORTER .)
    WAIT            reduce using rule 53 (expression -> REPORTER .)
    SEND            reduce using rule 53 (expression -> REPORTER .)
    RECORD          reduce using rule 53 (expression -> REPORTER .)
    ERASE           reduce using rule 53 (expression -> REPORTER .)
    SETSVH          reduce using rule 53 (expression -> REPORTER .)
    SVR             reduce using rule 53 (expression -> REPORTER .)
    SVL             reduce using rule 53 (expression -> REPORTER .)
    SETPOWER        reduce using rule 53 (expression -> REPORTER .)
    I2C_WRITE       reduce using rule 53 (expression -> REPORTER .)
    OUTPUT          reduce using rule 53 (expression -> REPORTER .)
    ONFOR           reduce using rule 53 (expression -> REPORTER .)
    BSEND           reduce using rule 53 (expression -> REPORTER .)
    BSR             reduce using rule 53 (expression -> REPORTER .)
    SETDP           reduce using rule 53 (expression -> REPORTER .)
    FASTSEND        reduce using rule 53 (expression -> REPORTER .)
    BEEP            reduce using rule 53 (expression -> REPORTER .)
    STOP            reduce using rule 53 (expression -> REPORTER .)
    RESET           reduce using rule 53 (expression -> REPORTER .)
    RESETDP         reduce using rule 53 (expression -> REPORTER .)
    ON              reduce using rule 53 (expression -> REPORTER .)
    OFF             reduce using rule 53 (expression -> REPORTER .)
    THISWAY         reduce using rule 53 (expression -> REPORTER .)
    THATWAY         reduce using rule 53 (expression -> REPORTER .)
    RD              reduce using rule 53 (expression -> REPORTER .)
    BRAKE           reduce using rule 53 (expression -> REPORTER .)
    LEDON           reduce using rule 53 (expression -> REPORTER .)
    LEDOFF          reduce using rule 53 (expression -> REPORTER .)
    I2C_START       reduce using rule 53 (expression -> REPORTER .)
    I2C_STOP        reduce using rule 53 (expression -> REPORTER .)
    WHENOFF         reduce using rule 53 (expression -> REPORTER .)
    MOTORATTENTION  reduce using rule 53 (expression -> REPORTER .)
    BYTES           reduce using rule 53 (expression -> REPORTER .)
    PROCEDURENAME   reduce using rule 53 (expression -> REPORTER .)
    END             reduce using rule 53 (expression -> REPORTER .)
    RBRACKET        reduce using rule 53 (expression -> REPORTER .)
    REPORTER        reduce using rule 53 (expression -> REPORTER .)
    NOT             reduce using rule 53 (expression -> REPORTER .)
    LPAREN          reduce using rule 53 (expression -> REPORTER .)
    LBRACKET        reduce using rule 53 (expression -> REPORTER .)
    I2C_READ        reduce using rule 53 (expression -> REPORTER .)
    HIGHBYTE        reduce using rule 53 (expression -> REPORTER .)
    LOWBYTE         reduce using rule 53 (expression -> REPORTER .)
    NUMBERLITERAL   reduce using rule 53 (expression -> REPORTER .)
    TIMER           reduce using rule 53 (expression -> REPORTER .)
    RANDOM          reduce using rule 53 (expression -> REPORTER .)
    RECALL          reduce using rule 53 (expression -> REPORTER .)
    SENSOR1         reduce using rule 53 (expression -> REPORTER .)
    SENSOR2         reduce using rule 53 (expression -> REPORTER .)
    SENSOR3         reduce using rule 53 (expression -> REPORTER .)
    SENSOR4         reduce using rule 53 (expression -> REPORTER .)
    SENSOR5         reduce using rule 53 (expression -> REPORTER .)
    SENSOR6         reduce using rule 53 (expression -> REPORTER .)
    SENSOR7         reduce using rule 53 (expression -> REPORTER .)
    SENSOR8         reduce using rule 53 (expression -> REPORTER .)
    SWITCH1         reduce using rule 53 (expression -> REPORTER .)
    SWITCH2         reduce using rule 53 (expression -> REPORTER .)
    SWITCH3         reduce using rule 53 (expression -> REPORTER .)
    SWITCH4         reduce using rule 53 (expression -> REPORTER .)
    SWITCH5         reduce using rule 53 (expression -> REPORTER .)
    SWITCH6         reduce using rule 53 (expression -> REPORTER .)
    SWITCH7         reduce using rule 53 (expression -> REPORTER .)
    SWITCH8         reduce using rule 53 (expression -> REPORTER .)
    NEWIRQ          reduce using rule 53 (expression -> REPORTER .)
    SERIAL          reduce using rule 53 (expression -> REPORTER .)
    RPAREN          reduce using rule 53 (expression -> REPORTER .)


state 76

    (74) expression -> RANDOM .

    AND             reduce using rule 74 (expression -> RANDOM .)
    OR              reduce using rule 74 (expression -> RANDOM .)
    XOR             reduce using rule 74 (expression -> RANDOM .)
    LESSTHAN        reduce using rule 74 (expression -> RANDOM .)
    GREATERTHAN     reduce using rule 74 (expression -> RANDOM .)
    EQUALS          reduce using rule 74 (expression -> RANDOM .)
    PLUS            reduce using rule 74 (expression -> RANDOM .)
    MINUS           reduce using rule 74 (expression -> RANDOM .)
    TIMES           reduce using rule 74 (expression -> RANDOM .)
    DIVIDE          reduce using rule 74 (expression -> RANDOM .)
    PERCENT         reduce using rule 74 (expression -> RANDOM .)
    REPEAT          reduce using rule 74 (expression -> RANDOM .)
    WHILE           reduce using rule 74 (expression -> RANDOM .)
    LOOP            reduce using rule 74 (expression -> RANDOM .)
    FOREVER         reduce using rule 74 (expression -> RANDOM .)
    IF              reduce using rule 74 (expression -> RANDOM .)
    IFELSE          reduce using rule 74 (expression -> RANDOM .)
    WAITUNTIL       reduce using rule 74 (expression -> RANDOM .)
    WHEN            reduce using rule 74 (expression -> RANDOM .)
    SHOW            reduce using rule 74 (expression -> RANDOM .)
    MAKE            reduce using rule 74 (expression -> RANDOM .)
    WAIT            reduce using rule 74 (expression -> RANDOM .)
    SEND            reduce using rule 74 (expression -> RANDOM .)
    RECORD          reduce using rule 74 (expression -> RANDOM .)
    ERASE           reduce using rule 74 (expression -> RANDOM .)
    SETSVH          reduce using rule 74 (expression -> RANDOM .)
    SVR             reduce using rule 74 (expression -> RANDOM .)
    SVL             reduce using rule 74 (expression -> RANDOM .)
    SETPOWER        reduce using rule 74 (expression -> RANDOM .)
    I2C_WRITE       reduce using rule 74 (expression -> RANDOM .)
    OUTPUT          reduce using rule 74 (expression -> RANDOM .)
    ONFOR           reduce using rule 74 (expression -> RANDOM .)
    BSEND           reduce using rule 74 (expression -> RANDOM .)
    BSR             reduce using rule 74 (expression -> RANDOM .)
    SETDP           reduce using rule 74 (expression -> RANDOM .)
    FASTSEND        reduce using rule 74 (expression -> RANDOM .)
    BEEP            reduce using rule 74 (expression -> RANDOM .)
    STOP            reduce using rule 74 (expression -> RANDOM .)
    RESET           reduce using rule 74 (expression -> RANDOM .)
    RESETDP         reduce using rule 74 (expression -> RANDOM .)
    ON              reduce using rule 74 (expression -> RANDOM .)
    OFF             reduce using rule 74 (expression -> RANDOM .)
    THISWAY         reduce using rule 74 (expression -> RANDOM .)
    THATWAY         reduce using rule 74 (expression -> RANDOM .)
    RD              reduce using rule 74 (expression -> RANDOM .)
    BRAKE           reduce using rule 74 (expression -> RANDOM .)
    LEDON           reduce using rule 74 (expression -> RANDOM .)
    LEDOFF          reduce using rule 74 (expression -> RANDOM .)
    I2C_START       reduce using rule 74 (expression -> RANDOM .)
    I2C_STOP        reduce using rule 74 (expression -> RANDOM .)
    WHENOFF         reduce using rule 74 (expression -> RANDOM .)
    MOTORATTENTION  reduce using rule 74 (expression -> RANDOM .)
    BYTES           reduce using rule 74 (expression -> RANDOM .)
    PROCEDURENAME   reduce using rule 74 (expression -> RANDOM .)
    END             reduce using rule 74 (expression -> RANDOM .)
    RBRACKET        reduce using rule 74 (expression -> RANDOM .)
    REPORTER        reduce using rule 74 (expression -> RANDOM .)
    NOT             reduce using rule 74 (expression -> RANDOM .)
    LPAREN          reduce using rule 74 (expression -> RANDOM .)
    LBRACKET        reduce using rule 74 (expression -> RANDOM .)
    I2C_READ        reduce using rule 74 (expression -> RANDOM .)
    HIGHBYTE        reduce using rule 74 (expression -> RANDOM .)
    LOWBYTE         reduce using rule 74 (expression -> RANDOM .)
    NUMBERLITERAL   reduce using rule 74 (expression -> RANDOM .)
    TIMER           reduce using rule 74 (expression -> RANDOM .)
    RANDOM          reduce using rule 74 (expression -> RANDOM .)
    RECALL          reduce using rule 74 (expression -> RANDOM .)
    SENSOR1         reduce using rule 74 (expression -> RANDOM .)
    SENSOR2         reduce using rule 74 (expression -> RANDOM .)
    SENSOR3         reduce using rule 74 (expression -> RANDOM .)
    SENSOR4         reduce using rule 74 (expression -> RANDOM .)
    SENSOR5         reduce using rule 74 (expression -> RANDOM .)
    SENSOR6         reduce using rule 74 (expression -> RANDOM .)
    SENSOR7         reduce using rule 74 (expression -> RANDOM .)
    SENSOR8         reduce using rule 74 (expression -> RANDOM .)
    SWITCH1         reduce using rule 74 (expression -> RANDOM .)
    SWITCH2         reduce using rule 74 (expression -> RANDOM .)
    SWITCH3         reduce using rule 74 (expression -> RANDOM .)
    SWITCH4         reduce using rule 74 (expression -> RANDOM .)
    SWITCH5         reduce using rule 74 (expression -> RANDOM .)
    SWITCH6         reduce using rule 74 (expression -> RANDOM .)
    SWITCH7         reduce using rule 74 (expression -> RANDOM .)
    SWITCH8         reduce using rule 74 (expression -> RANDOM .)
    NEWIRQ          reduce using rule 74 (expression -> RANDOM .)
    SERIAL          reduce using rule 74 (expression -> RANDOM .)
    RPAREN          reduce using rule 74 (expression -> RANDOM .)


state 77

    (73) expression -> TIMER .

    AND             reduce using rule 73 (expression -> TIMER .)
    OR              reduce using rule 73 (expression -> TIMER .)
    XOR             reduce using rule 73 (expression -> TIMER .)
    LESSTHAN        reduce using rule 73 (expression -> TIMER .)
    GREATERTHAN     reduce using rule 73 (expression -> TIMER .)
    EQUALS          reduce using rule 73 (expression -> TIMER .)
    PLUS            reduce using rule 73 (expression -> TIMER .)
    MINUS           reduce using rule 73 (expression -> TIMER .)
    TIMES           reduce using rule 73 (expression -> TIMER .)
    DIVIDE          reduce using rule 73 (expression -> TIMER .)
    PERCENT         reduce using rule 73 (expression -> TIMER .)
    REPEAT          reduce using rule 73 (expression -> TIMER .)
    WHILE           reduce using rule 73 (expression -> TIMER .)
    LOOP            reduce using rule 73 (expression -> TIMER .)
    FOREVER         reduce using rule 73 (expression -> TIMER .)
    IF              reduce using rule 73 (expression -> TIMER .)
    IFELSE          reduce using rule 73 (expression -> TIMER .)
    WAITUNTIL       reduce using rule 73 (expression -> TIMER .)
    WHEN            reduce using rule 73 (expression -> TIMER .)
    SHOW            reduce using rule 73 (expression -> TIMER .)
    MAKE            reduce using rule 73 (expression -> TIMER .)
    WAIT            reduce using rule 73 (expression -> TIMER .)
    SEND            reduce using rule 73 (expression -> TIMER .)
    RECORD          reduce using rule 73 (expression -> TIMER .)
    ERASE           reduce using rule 73 (expression -> TIMER .)
    SETSVH          reduce using rule 73 (expression -> TIMER .)
    SVR             reduce using rule 73 (expression -> TIMER .)
    SVL             reduce using rule 73 (expression -> TIMER .)
    SETPOWER        reduce using rule 73 (expression -> TIMER .)
    I2C_WRITE       reduce using rule 73 (expression -> TIMER .)
    OUTPUT          reduce using rule 73 (expression -> TIMER .)
    ONFOR           reduce using rule 73 (expression -> TIMER .)
    BSEND           reduce using rule 73 (expression -> TIMER .)
    BSR             reduce using rule 73 (expression -> TIMER .)
    SETDP           reduce using rule 73 (expression -> TIMER .)
    FASTSEND        reduce using rule 73 (expression -> TIMER .)
    BEEP            reduce using rule 73 (expression -> TIMER .)
    STOP            reduce using rule 73 (expression -> TIMER .)
    RESET           reduce using rule 73 (expression -> TIMER .)
    RESETDP         reduce using rule 73 (expression -> TIMER .)
    ON              reduce using rule 73 (expression -> TIMER .)
    OFF             reduce using rule 73 (expression -> TIMER .)
    THISWAY         reduce using rule 73 (expression -> TIMER .)
    THATWAY         reduce using rule 73 (expression -> TIMER .)
    RD              reduce using rule 73 (expression -> TIMER .)
    BRAKE           reduce using rule 73 (expression -> TIMER .)
    LEDON           reduce using rule 73 (expression -> TIMER .)
    LEDOFF          reduce using rule 73 (expression -> TIMER .)
    I2C_START       reduce using rule 73 (expression -> TIMER .)
    I2C_STOP        reduce using rule 73 (expression -> TIMER .)
    WHENOFF         reduce using rule 73 (expression -> TIMER .)
    MOTORATTENTION  reduce using rule 73 (expression -> TIMER .)
    BYTES           reduce using rule 73 (expression -> TIMER .)
    PROCEDURENAME   reduce using rule 73 (expression -> TIMER .)
    END             reduce using rule 73 (expression -> TIMER .)
    RBRACKET        reduce using rule 73 (expression -> TIMER .)
    REPORTER        reduce using rule 73 (expression -> TIMER .)
    NOT             reduce using rule 73 (expression -> TIMER .)
    LPAREN          reduce using rule 73 (expression -> TIMER .)
    LBRACKET        reduce using rule 73 (expression -> TIMER .)
    I2C_READ        reduce using rule 73 (expression -> TIMER .)
    HIGHBYTE        reduce using rule 73 (expression -> TIMER .)
    LOWBYTE         reduce using rule 73 (expression -> TIMER .)
    NUMBERLITERAL   reduce using rule 73 (expression -> TIMER .)
    TIMER           reduce using rule 73 (expression -> TIMER .)
    RANDOM          reduce using rule 73 (expression -> TIMER .)
    RECALL          reduce using rule 73 (expression -> TIMER .)
    SENSOR1         reduce using rule 73 (expression -> TIMER .)
    SENSOR2         reduce using rule 73 (expression -> TIMER .)
    SENSOR3         reduce using rule 73 (expression -> TIMER .)
    SENSOR4         reduce using rule 73 (expression -> TIMER .)
    SENSOR5         reduce using rule 73 (expression -> TIMER .)
    SENSOR6         reduce using rule 73 (expression -> TIMER .)
    SENSOR7         reduce using rule 73 (expression -> TIMER .)
    SENSOR8         reduce using rule 73 (expression -> TIMER .)
    SWITCH1         reduce using rule 73 (expression -> TIMER .)
    SWITCH2         reduce using rule 73 (expression -> TIMER .)
    SWITCH3         reduce using rule 73 (expression -> TIMER .)
    SWITCH4         reduce using rule 73 (expression -> TIMER .)
    SWITCH5         reduce using rule 73 (expression -> TIMER .)
    SWITCH6         reduce using rule 73 (expression -> TIMER .)
    SWITCH7         reduce using rule 73 (expression -> TIMER .)
    SWITCH8         reduce using rule 73 (expression -> TIMER .)
    NEWIRQ          reduce using rule 73 (expression -> TIMER .)
    SERIAL          reduce using rule 73 (expression -> TIMER .)
    RPAREN          reduce using rule 73 (expression -> TIMER .)


state 78

    (67) expression -> LPAREN . expression RPAREN
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 120

state 79

    (93) expression -> SERIAL .

    AND             reduce using rule 93 (expression -> SERIAL .)
    OR              reduce using rule 93 (expression -> SERIAL .)
    XOR             reduce using rule 93 (expression -> SERIAL .)
    LESSTHAN        reduce using rule 93 (expression -> SERIAL .)
    GREATERTHAN     reduce using rule 93 (expression -> SERIAL .)
    EQUALS          reduce using rule 93 (expression -> SERIAL .)
    PLUS            reduce using rule 93 (expression -> SERIAL .)
    MINUS           reduce using rule 93 (expression -> SERIAL .)
    TIMES           reduce using rule 93 (expression -> SERIAL .)
    DIVIDE          reduce using rule 93 (expression -> SERIAL .)
    PERCENT         reduce using rule 93 (expression -> SERIAL .)
    REPEAT          reduce using rule 93 (expression -> SERIAL .)
    WHILE           reduce using rule 93 (expression -> SERIAL .)
    LOOP            reduce using rule 93 (expression -> SERIAL .)
    FOREVER         reduce using rule 93 (expression -> SERIAL .)
    IF              reduce using rule 93 (expression -> SERIAL .)
    IFELSE          reduce using rule 93 (expression -> SERIAL .)
    WAITUNTIL       reduce using rule 93 (expression -> SERIAL .)
    WHEN            reduce using rule 93 (expression -> SERIAL .)
    SHOW            reduce using rule 93 (expression -> SERIAL .)
    MAKE            reduce using rule 93 (expression -> SERIAL .)
    WAIT            reduce using rule 93 (expression -> SERIAL .)
    SEND            reduce using rule 93 (expression -> SERIAL .)
    RECORD          reduce using rule 93 (expression -> SERIAL .)
    ERASE           reduce using rule 93 (expression -> SERIAL .)
    SETSVH          reduce using rule 93 (expression -> SERIAL .)
    SVR             reduce using rule 93 (expression -> SERIAL .)
    SVL             reduce using rule 93 (expression -> SERIAL .)
    SETPOWER        reduce using rule 93 (expression -> SERIAL .)
    I2C_WRITE       reduce using rule 93 (expression -> SERIAL .)
    OUTPUT          reduce using rule 93 (expression -> SERIAL .)
    ONFOR           reduce using rule 93 (expression -> SERIAL .)
    BSEND           reduce using rule 93 (expression -> SERIAL .)
    BSR             reduce using rule 93 (expression -> SERIAL .)
    SETDP           reduce using rule 93 (expression -> SERIAL .)
    FASTSEND        reduce using rule 93 (expression -> SERIAL .)
    BEEP            reduce using rule 93 (expression -> SERIAL .)
    STOP            reduce using rule 93 (expression -> SERIAL .)
    RESET           reduce using rule 93 (expression -> SERIAL .)
    RESETDP         reduce using rule 93 (expression -> SERIAL .)
    ON              reduce using rule 93 (expression -> SERIAL .)
    OFF             reduce using rule 93 (expression -> SERIAL .)
    THISWAY         reduce using rule 93 (expression -> SERIAL .)
    THATWAY         reduce using rule 93 (expression -> SERIAL .)
    RD              reduce using rule 93 (expression -> SERIAL .)
    BRAKE           reduce using rule 93 (expression -> SERIAL .)
    LEDON           reduce using rule 93 (expression -> SERIAL .)
    LEDOFF          reduce using rule 93 (expression -> SERIAL .)
    I2C_START       reduce using rule 93 (expression -> SERIAL .)
    I2C_STOP        reduce using rule 93 (expression -> SERIAL .)
    WHENOFF         reduce using rule 93 (expression -> SERIAL .)
    MOTORATTENTION  reduce using rule 93 (expression -> SERIAL .)
    BYTES           reduce using rule 93 (expression -> SERIAL .)
    PROCEDURENAME   reduce using rule 93 (expression -> SERIAL .)
    END             reduce using rule 93 (expression -> SERIAL .)
    RBRACKET        reduce using rule 93 (expression -> SERIAL .)
    REPORTER        reduce using rule 93 (expression -> SERIAL .)
    NOT             reduce using rule 93 (expression -> SERIAL .)
    LPAREN          reduce using rule 93 (expression -> SERIAL .)
    LBRACKET        reduce using rule 93 (expression -> SERIAL .)
    I2C_READ        reduce using rule 93 (expression -> SERIAL .)
    HIGHBYTE        reduce using rule 93 (expression -> SERIAL .)
    LOWBYTE         reduce using rule 93 (expression -> SERIAL .)
    NUMBERLITERAL   reduce using rule 93 (expression -> SERIAL .)
    TIMER           reduce using rule 93 (expression -> SERIAL .)
    RANDOM          reduce using rule 93 (expression -> SERIAL .)
    RECALL          reduce using rule 93 (expression -> SERIAL .)
    SENSOR1         reduce using rule 93 (expression -> SERIAL .)
    SENSOR2         reduce using rule 93 (expression -> SERIAL .)
    SENSOR3         reduce using rule 93 (expression -> SERIAL .)
    SENSOR4         reduce using rule 93 (expression -> SERIAL .)
    SENSOR5         reduce using rule 93 (expression -> SERIAL .)
    SENSOR6         reduce using rule 93 (expression -> SERIAL .)
    SENSOR7         reduce using rule 93 (expression -> SERIAL .)
    SENSOR8         reduce using rule 93 (expression -> SERIAL .)
    SWITCH1         reduce using rule 93 (expression -> SERIAL .)
    SWITCH2         reduce using rule 93 (expression -> SERIAL .)
    SWITCH3         reduce using rule 93 (expression -> SERIAL .)
    SWITCH4         reduce using rule 93 (expression -> SERIAL .)
    SWITCH5         reduce using rule 93 (expression -> SERIAL .)
    SWITCH6         reduce using rule 93 (expression -> SERIAL .)
    SWITCH7         reduce using rule 93 (expression -> SERIAL .)
    SWITCH8         reduce using rule 93 (expression -> SERIAL .)
    NEWIRQ          reduce using rule 93 (expression -> SERIAL .)
    SERIAL          reduce using rule 93 (expression -> SERIAL .)
    RPAREN          reduce using rule 93 (expression -> SERIAL .)


state 80

    (71) expression -> LOWBYTE . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 121

state 81

    (72) expression -> NUMBERLITERAL .

    AND             reduce using rule 72 (expression -> NUMBERLITERAL .)
    OR              reduce using rule 72 (expression -> NUMBERLITERAL .)
    XOR             reduce using rule 72 (expression -> NUMBERLITERAL .)
    LESSTHAN        reduce using rule 72 (expression -> NUMBERLITERAL .)
    GREATERTHAN     reduce using rule 72 (expression -> NUMBERLITERAL .)
    EQUALS          reduce using rule 72 (expression -> NUMBERLITERAL .)
    PLUS            reduce using rule 72 (expression -> NUMBERLITERAL .)
    MINUS           reduce using rule 72 (expression -> NUMBERLITERAL .)
    TIMES           reduce using rule 72 (expression -> NUMBERLITERAL .)
    DIVIDE          reduce using rule 72 (expression -> NUMBERLITERAL .)
    PERCENT         reduce using rule 72 (expression -> NUMBERLITERAL .)
    REPEAT          reduce using rule 72 (expression -> NUMBERLITERAL .)
    WHILE           reduce using rule 72 (expression -> NUMBERLITERAL .)
    LOOP            reduce using rule 72 (expression -> NUMBERLITERAL .)
    FOREVER         reduce using rule 72 (expression -> NUMBERLITERAL .)
    IF              reduce using rule 72 (expression -> NUMBERLITERAL .)
    IFELSE          reduce using rule 72 (expression -> NUMBERLITERAL .)
    WAITUNTIL       reduce using rule 72 (expression -> NUMBERLITERAL .)
    WHEN            reduce using rule 72 (expression -> NUMBERLITERAL .)
    SHOW            reduce using rule 72 (expression -> NUMBERLITERAL .)
    MAKE            reduce using rule 72 (expression -> NUMBERLITERAL .)
    WAIT            reduce using rule 72 (expression -> NUMBERLITERAL .)
    SEND            reduce using rule 72 (expression -> NUMBERLITERAL .)
    RECORD          reduce using rule 72 (expression -> NUMBERLITERAL .)
    ERASE           reduce using rule 72 (expression -> NUMBERLITERAL .)
    SETSVH          reduce using rule 72 (expression -> NUMBERLITERAL .)
    SVR             reduce using rule 72 (expression -> NUMBERLITERAL .)
    SVL             reduce using rule 72 (expression -> NUMBERLITERAL .)
    SETPOWER        reduce using rule 72 (expression -> NUMBERLITERAL .)
    I2C_WRITE       reduce using rule 72 (expression -> NUMBERLITERAL .)
    OUTPUT          reduce using rule 72 (expression -> NUMBERLITERAL .)
    ONFOR           reduce using rule 72 (expression -> NUMBERLITERAL .)
    BSEND           reduce using rule 72 (expression -> NUMBERLITERAL .)
    BSR             reduce using rule 72 (expression -> NUMBERLITERAL .)
    SETDP           reduce using rule 72 (expression -> NUMBERLITERAL .)
    FASTSEND        reduce using rule 72 (expression -> NUMBERLITERAL .)
    BEEP            reduce using rule 72 (expression -> NUMBERLITERAL .)
    STOP            reduce using rule 72 (expression -> NUMBERLITERAL .)
    RESET           reduce using rule 72 (expression -> NUMBERLITERAL .)
    RESETDP         reduce using rule 72 (expression -> NUMBERLITERAL .)
    ON              reduce using rule 72 (expression -> NUMBERLITERAL .)
    OFF             reduce using rule 72 (expression -> NUMBERLITERAL .)
    THISWAY         reduce using rule 72 (expression -> NUMBERLITERAL .)
    THATWAY         reduce using rule 72 (expression -> NUMBERLITERAL .)
    RD              reduce using rule 72 (expression -> NUMBERLITERAL .)
    BRAKE           reduce using rule 72 (expression -> NUMBERLITERAL .)
    LEDON           reduce using rule 72 (expression -> NUMBERLITERAL .)
    LEDOFF          reduce using rule 72 (expression -> NUMBERLITERAL .)
    I2C_START       reduce using rule 72 (expression -> NUMBERLITERAL .)
    I2C_STOP        reduce using rule 72 (expression -> NUMBERLITERAL .)
    WHENOFF         reduce using rule 72 (expression -> NUMBERLITERAL .)
    MOTORATTENTION  reduce using rule 72 (expression -> NUMBERLITERAL .)
    BYTES           reduce using rule 72 (expression -> NUMBERLITERAL .)
    PROCEDURENAME   reduce using rule 72 (expression -> NUMBERLITERAL .)
    END             reduce using rule 72 (expression -> NUMBERLITERAL .)
    RBRACKET        reduce using rule 72 (expression -> NUMBERLITERAL .)
    REPORTER        reduce using rule 72 (expression -> NUMBERLITERAL .)
    NOT             reduce using rule 72 (expression -> NUMBERLITERAL .)
    LPAREN          reduce using rule 72 (expression -> NUMBERLITERAL .)
    LBRACKET        reduce using rule 72 (expression -> NUMBERLITERAL .)
    I2C_READ        reduce using rule 72 (expression -> NUMBERLITERAL .)
    HIGHBYTE        reduce using rule 72 (expression -> NUMBERLITERAL .)
    LOWBYTE         reduce using rule 72 (expression -> NUMBERLITERAL .)
    NUMBERLITERAL   reduce using rule 72 (expression -> NUMBERLITERAL .)
    TIMER           reduce using rule 72 (expression -> NUMBERLITERAL .)
    RANDOM          reduce using rule 72 (expression -> NUMBERLITERAL .)
    RECALL          reduce using rule 72 (expression -> NUMBERLITERAL .)
    SENSOR1         reduce using rule 72 (expression -> NUMBERLITERAL .)
    SENSOR2         reduce using rule 72 (expression -> NUMBERLITERAL .)
    SENSOR3         reduce using rule 72 (expression -> NUMBERLITERAL .)
    SENSOR4         reduce using rule 72 (expression -> NUMBERLITERAL .)
    SENSOR5         reduce using rule 72 (expression -> NUMBERLITERAL .)
    SENSOR6         reduce using rule 72 (expression -> NUMBERLITERAL .)
    SENSOR7         reduce using rule 72 (expression -> NUMBERLITERAL .)
    SENSOR8         reduce using rule 72 (expression -> NUMBERLITERAL .)
    SWITCH1         reduce using rule 72 (expression -> NUMBERLITERAL .)
    SWITCH2         reduce using rule 72 (expression -> NUMBERLITERAL .)
    SWITCH3         reduce using rule 72 (expression -> NUMBERLITERAL .)
    SWITCH4         reduce using rule 72 (expression -> NUMBERLITERAL .)
    SWITCH5         reduce using rule 72 (expression -> NUMBERLITERAL .)
    SWITCH6         reduce using rule 72 (expression -> NUMBERLITERAL .)
    SWITCH7         reduce using rule 72 (expression -> NUMBERLITERAL .)
    SWITCH8         reduce using rule 72 (expression -> NUMBERLITERAL .)
    NEWIRQ          reduce using rule 72 (expression -> NUMBERLITERAL .)
    SERIAL          reduce using rule 72 (expression -> NUMBERLITERAL .)
    RPAREN          reduce using rule 72 (expression -> NUMBERLITERAL .)


state 82

    (75) expression -> RECALL .

    AND             reduce using rule 75 (expression -> RECALL .)
    OR              reduce using rule 75 (expression -> RECALL .)
    XOR             reduce using rule 75 (expression -> RECALL .)
    LESSTHAN        reduce using rule 75 (expression -> RECALL .)
    GREATERTHAN     reduce using rule 75 (expression -> RECALL .)
    EQUALS          reduce using rule 75 (expression -> RECALL .)
    PLUS            reduce using rule 75 (expression -> RECALL .)
    MINUS           reduce using rule 75 (expression -> RECALL .)
    TIMES           reduce using rule 75 (expression -> RECALL .)
    DIVIDE          reduce using rule 75 (expression -> RECALL .)
    PERCENT         reduce using rule 75 (expression -> RECALL .)
    REPEAT          reduce using rule 75 (expression -> RECALL .)
    WHILE           reduce using rule 75 (expression -> RECALL .)
    LOOP            reduce using rule 75 (expression -> RECALL .)
    FOREVER         reduce using rule 75 (expression -> RECALL .)
    IF              reduce using rule 75 (expression -> RECALL .)
    IFELSE          reduce using rule 75 (expression -> RECALL .)
    WAITUNTIL       reduce using rule 75 (expression -> RECALL .)
    WHEN            reduce using rule 75 (expression -> RECALL .)
    SHOW            reduce using rule 75 (expression -> RECALL .)
    MAKE            reduce using rule 75 (expression -> RECALL .)
    WAIT            reduce using rule 75 (expression -> RECALL .)
    SEND            reduce using rule 75 (expression -> RECALL .)
    RECORD          reduce using rule 75 (expression -> RECALL .)
    ERASE           reduce using rule 75 (expression -> RECALL .)
    SETSVH          reduce using rule 75 (expression -> RECALL .)
    SVR             reduce using rule 75 (expression -> RECALL .)
    SVL             reduce using rule 75 (expression -> RECALL .)
    SETPOWER        reduce using rule 75 (expression -> RECALL .)
    I2C_WRITE       reduce using rule 75 (expression -> RECALL .)
    OUTPUT          reduce using rule 75 (expression -> RECALL .)
    ONFOR           reduce using rule 75 (expression -> RECALL .)
    BSEND           reduce using rule 75 (expression -> RECALL .)
    BSR             reduce using rule 75 (expression -> RECALL .)
    SETDP           reduce using rule 75 (expression -> RECALL .)
    FASTSEND        reduce using rule 75 (expression -> RECALL .)
    BEEP            reduce using rule 75 (expression -> RECALL .)
    STOP            reduce using rule 75 (expression -> RECALL .)
    RESET           reduce using rule 75 (expression -> RECALL .)
    RESETDP         reduce using rule 75 (expression -> RECALL .)
    ON              reduce using rule 75 (expression -> RECALL .)
    OFF             reduce using rule 75 (expression -> RECALL .)
    THISWAY         reduce using rule 75 (expression -> RECALL .)
    THATWAY         reduce using rule 75 (expression -> RECALL .)
    RD              reduce using rule 75 (expression -> RECALL .)
    BRAKE           reduce using rule 75 (expression -> RECALL .)
    LEDON           reduce using rule 75 (expression -> RECALL .)
    LEDOFF          reduce using rule 75 (expression -> RECALL .)
    I2C_START       reduce using rule 75 (expression -> RECALL .)
    I2C_STOP        reduce using rule 75 (expression -> RECALL .)
    WHENOFF         reduce using rule 75 (expression -> RECALL .)
    MOTORATTENTION  reduce using rule 75 (expression -> RECALL .)
    BYTES           reduce using rule 75 (expression -> RECALL .)
    PROCEDURENAME   reduce using rule 75 (expression -> RECALL .)
    END             reduce using rule 75 (expression -> RECALL .)
    RBRACKET        reduce using rule 75 (expression -> RECALL .)
    REPORTER        reduce using rule 75 (expression -> RECALL .)
    NOT             reduce using rule 75 (expression -> RECALL .)
    LPAREN          reduce using rule 75 (expression -> RECALL .)
    LBRACKET        reduce using rule 75 (expression -> RECALL .)
    I2C_READ        reduce using rule 75 (expression -> RECALL .)
    HIGHBYTE        reduce using rule 75 (expression -> RECALL .)
    LOWBYTE         reduce using rule 75 (expression -> RECALL .)
    NUMBERLITERAL   reduce using rule 75 (expression -> RECALL .)
    TIMER           reduce using rule 75 (expression -> RECALL .)
    RANDOM          reduce using rule 75 (expression -> RECALL .)
    RECALL          reduce using rule 75 (expression -> RECALL .)
    SENSOR1         reduce using rule 75 (expression -> RECALL .)
    SENSOR2         reduce using rule 75 (expression -> RECALL .)
    SENSOR3         reduce using rule 75 (expression -> RECALL .)
    SENSOR4         reduce using rule 75 (expression -> RECALL .)
    SENSOR5         reduce using rule 75 (expression -> RECALL .)
    SENSOR6         reduce using rule 75 (expression -> RECALL .)
    SENSOR7         reduce using rule 75 (expression -> RECALL .)
    SENSOR8         reduce using rule 75 (expression -> RECALL .)
    SWITCH1         reduce using rule 75 (expression -> RECALL .)
    SWITCH2         reduce using rule 75 (expression -> RECALL .)
    SWITCH3         reduce using rule 75 (expression -> RECALL .)
    SWITCH4         reduce using rule 75 (expression -> RECALL .)
    SWITCH5         reduce using rule 75 (expression -> RECALL .)
    SWITCH6         reduce using rule 75 (expression -> RECALL .)
    SWITCH7         reduce using rule 75 (expression -> RECALL .)
    SWITCH8         reduce using rule 75 (expression -> RECALL .)
    NEWIRQ          reduce using rule 75 (expression -> RECALL .)
    SERIAL          reduce using rule 75 (expression -> RECALL .)
    RPAREN          reduce using rule 75 (expression -> RECALL .)


state 83

    (69) expression -> I2C_READ . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 122

state 84

    (87) expression -> SWITCH4 .

    AND             reduce using rule 87 (expression -> SWITCH4 .)
    OR              reduce using rule 87 (expression -> SWITCH4 .)
    XOR             reduce using rule 87 (expression -> SWITCH4 .)
    LESSTHAN        reduce using rule 87 (expression -> SWITCH4 .)
    GREATERTHAN     reduce using rule 87 (expression -> SWITCH4 .)
    EQUALS          reduce using rule 87 (expression -> SWITCH4 .)
    PLUS            reduce using rule 87 (expression -> SWITCH4 .)
    MINUS           reduce using rule 87 (expression -> SWITCH4 .)
    TIMES           reduce using rule 87 (expression -> SWITCH4 .)
    DIVIDE          reduce using rule 87 (expression -> SWITCH4 .)
    PERCENT         reduce using rule 87 (expression -> SWITCH4 .)
    REPEAT          reduce using rule 87 (expression -> SWITCH4 .)
    WHILE           reduce using rule 87 (expression -> SWITCH4 .)
    LOOP            reduce using rule 87 (expression -> SWITCH4 .)
    FOREVER         reduce using rule 87 (expression -> SWITCH4 .)
    IF              reduce using rule 87 (expression -> SWITCH4 .)
    IFELSE          reduce using rule 87 (expression -> SWITCH4 .)
    WAITUNTIL       reduce using rule 87 (expression -> SWITCH4 .)
    WHEN            reduce using rule 87 (expression -> SWITCH4 .)
    SHOW            reduce using rule 87 (expression -> SWITCH4 .)
    MAKE            reduce using rule 87 (expression -> SWITCH4 .)
    WAIT            reduce using rule 87 (expression -> SWITCH4 .)
    SEND            reduce using rule 87 (expression -> SWITCH4 .)
    RECORD          reduce using rule 87 (expression -> SWITCH4 .)
    ERASE           reduce using rule 87 (expression -> SWITCH4 .)
    SETSVH          reduce using rule 87 (expression -> SWITCH4 .)
    SVR             reduce using rule 87 (expression -> SWITCH4 .)
    SVL             reduce using rule 87 (expression -> SWITCH4 .)
    SETPOWER        reduce using rule 87 (expression -> SWITCH4 .)
    I2C_WRITE       reduce using rule 87 (expression -> SWITCH4 .)
    OUTPUT          reduce using rule 87 (expression -> SWITCH4 .)
    ONFOR           reduce using rule 87 (expression -> SWITCH4 .)
    BSEND           reduce using rule 87 (expression -> SWITCH4 .)
    BSR             reduce using rule 87 (expression -> SWITCH4 .)
    SETDP           reduce using rule 87 (expression -> SWITCH4 .)
    FASTSEND        reduce using rule 87 (expression -> SWITCH4 .)
    BEEP            reduce using rule 87 (expression -> SWITCH4 .)
    STOP            reduce using rule 87 (expression -> SWITCH4 .)
    RESET           reduce using rule 87 (expression -> SWITCH4 .)
    RESETDP         reduce using rule 87 (expression -> SWITCH4 .)
    ON              reduce using rule 87 (expression -> SWITCH4 .)
    OFF             reduce using rule 87 (expression -> SWITCH4 .)
    THISWAY         reduce using rule 87 (expression -> SWITCH4 .)
    THATWAY         reduce using rule 87 (expression -> SWITCH4 .)
    RD              reduce using rule 87 (expression -> SWITCH4 .)
    BRAKE           reduce using rule 87 (expression -> SWITCH4 .)
    LEDON           reduce using rule 87 (expression -> SWITCH4 .)
    LEDOFF          reduce using rule 87 (expression -> SWITCH4 .)
    I2C_START       reduce using rule 87 (expression -> SWITCH4 .)
    I2C_STOP        reduce using rule 87 (expression -> SWITCH4 .)
    WHENOFF         reduce using rule 87 (expression -> SWITCH4 .)
    MOTORATTENTION  reduce using rule 87 (expression -> SWITCH4 .)
    BYTES           reduce using rule 87 (expression -> SWITCH4 .)
    PROCEDURENAME   reduce using rule 87 (expression -> SWITCH4 .)
    END             reduce using rule 87 (expression -> SWITCH4 .)
    RBRACKET        reduce using rule 87 (expression -> SWITCH4 .)
    REPORTER        reduce using rule 87 (expression -> SWITCH4 .)
    NOT             reduce using rule 87 (expression -> SWITCH4 .)
    LPAREN          reduce using rule 87 (expression -> SWITCH4 .)
    LBRACKET        reduce using rule 87 (expression -> SWITCH4 .)
    I2C_READ        reduce using rule 87 (expression -> SWITCH4 .)
    HIGHBYTE        reduce using rule 87 (expression -> SWITCH4 .)
    LOWBYTE         reduce using rule 87 (expression -> SWITCH4 .)
    NUMBERLITERAL   reduce using rule 87 (expression -> SWITCH4 .)
    TIMER           reduce using rule 87 (expression -> SWITCH4 .)
    RANDOM          reduce using rule 87 (expression -> SWITCH4 .)
    RECALL          reduce using rule 87 (expression -> SWITCH4 .)
    SENSOR1         reduce using rule 87 (expression -> SWITCH4 .)
    SENSOR2         reduce using rule 87 (expression -> SWITCH4 .)
    SENSOR3         reduce using rule 87 (expression -> SWITCH4 .)
    SENSOR4         reduce using rule 87 (expression -> SWITCH4 .)
    SENSOR5         reduce using rule 87 (expression -> SWITCH4 .)
    SENSOR6         reduce using rule 87 (expression -> SWITCH4 .)
    SENSOR7         reduce using rule 87 (expression -> SWITCH4 .)
    SENSOR8         reduce using rule 87 (expression -> SWITCH4 .)
    SWITCH1         reduce using rule 87 (expression -> SWITCH4 .)
    SWITCH2         reduce using rule 87 (expression -> SWITCH4 .)
    SWITCH3         reduce using rule 87 (expression -> SWITCH4 .)
    SWITCH4         reduce using rule 87 (expression -> SWITCH4 .)
    SWITCH5         reduce using rule 87 (expression -> SWITCH4 .)
    SWITCH6         reduce using rule 87 (expression -> SWITCH4 .)
    SWITCH7         reduce using rule 87 (expression -> SWITCH4 .)
    SWITCH8         reduce using rule 87 (expression -> SWITCH4 .)
    NEWIRQ          reduce using rule 87 (expression -> SWITCH4 .)
    SERIAL          reduce using rule 87 (expression -> SWITCH4 .)
    RPAREN          reduce using rule 87 (expression -> SWITCH4 .)


state 85

    (66) expression -> NOT . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 123

state 86

    (27) statement -> SETPOWER expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 27 (statement -> SETPOWER expression .)
    WHILE           reduce using rule 27 (statement -> SETPOWER expression .)
    LOOP            reduce using rule 27 (statement -> SETPOWER expression .)
    FOREVER         reduce using rule 27 (statement -> SETPOWER expression .)
    IF              reduce using rule 27 (statement -> SETPOWER expression .)
    IFELSE          reduce using rule 27 (statement -> SETPOWER expression .)
    WAITUNTIL       reduce using rule 27 (statement -> SETPOWER expression .)
    WHEN            reduce using rule 27 (statement -> SETPOWER expression .)
    SHOW            reduce using rule 27 (statement -> SETPOWER expression .)
    MAKE            reduce using rule 27 (statement -> SETPOWER expression .)
    WAIT            reduce using rule 27 (statement -> SETPOWER expression .)
    SEND            reduce using rule 27 (statement -> SETPOWER expression .)
    RECORD          reduce using rule 27 (statement -> SETPOWER expression .)
    ERASE           reduce using rule 27 (statement -> SETPOWER expression .)
    SETSVH          reduce using rule 27 (statement -> SETPOWER expression .)
    SVR             reduce using rule 27 (statement -> SETPOWER expression .)
    SVL             reduce using rule 27 (statement -> SETPOWER expression .)
    SETPOWER        reduce using rule 27 (statement -> SETPOWER expression .)
    I2C_WRITE       reduce using rule 27 (statement -> SETPOWER expression .)
    OUTPUT          reduce using rule 27 (statement -> SETPOWER expression .)
    ONFOR           reduce using rule 27 (statement -> SETPOWER expression .)
    BSEND           reduce using rule 27 (statement -> SETPOWER expression .)
    BSR             reduce using rule 27 (statement -> SETPOWER expression .)
    SETDP           reduce using rule 27 (statement -> SETPOWER expression .)
    FASTSEND        reduce using rule 27 (statement -> SETPOWER expression .)
    BEEP            reduce using rule 27 (statement -> SETPOWER expression .)
    STOP            reduce using rule 27 (statement -> SETPOWER expression .)
    RESET           reduce using rule 27 (statement -> SETPOWER expression .)
    RESETDP         reduce using rule 27 (statement -> SETPOWER expression .)
    ON              reduce using rule 27 (statement -> SETPOWER expression .)
    OFF             reduce using rule 27 (statement -> SETPOWER expression .)
    THISWAY         reduce using rule 27 (statement -> SETPOWER expression .)
    THATWAY         reduce using rule 27 (statement -> SETPOWER expression .)
    RD              reduce using rule 27 (statement -> SETPOWER expression .)
    BRAKE           reduce using rule 27 (statement -> SETPOWER expression .)
    LEDON           reduce using rule 27 (statement -> SETPOWER expression .)
    LEDOFF          reduce using rule 27 (statement -> SETPOWER expression .)
    I2C_START       reduce using rule 27 (statement -> SETPOWER expression .)
    I2C_STOP        reduce using rule 27 (statement -> SETPOWER expression .)
    WHENOFF         reduce using rule 27 (statement -> SETPOWER expression .)
    MOTORATTENTION  reduce using rule 27 (statement -> SETPOWER expression .)
    BYTES           reduce using rule 27 (statement -> SETPOWER expression .)
    PROCEDURENAME   reduce using rule 27 (statement -> SETPOWER expression .)
    RBRACKET        reduce using rule 27 (statement -> SETPOWER expression .)
    END             reduce using rule 27 (statement -> SETPOWER expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 87

    (96) procedurecall -> PROCEDURENAME parm .
    (94) parm -> parm . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPEAT          reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    WHILE           reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    LOOP            reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    FOREVER         reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    IF              reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    IFELSE          reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    WAITUNTIL       reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    WHEN            reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    SHOW            reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    MAKE            reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    WAIT            reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    SEND            reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    RECORD          reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    ERASE           reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    SETSVH          reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    SVR             reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    SVL             reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    SETPOWER        reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    I2C_WRITE       reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    OUTPUT          reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    ONFOR           reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    BSEND           reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    BSR             reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    SETDP           reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    FASTSEND        reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    BEEP            reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    STOP            reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    RESET           reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    RESETDP         reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    ON              reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    OFF             reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    THISWAY         reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    THATWAY         reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    RD              reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    BRAKE           reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    LEDON           reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    LEDOFF          reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    I2C_START       reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    I2C_STOP        reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    WHENOFF         reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    MOTORATTENTION  reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    BYTES           reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    PROCEDURENAME   reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    RBRACKET        reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    END             reduce using rule 96 (procedurecall -> PROCEDURENAME parm .)
    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 135

state 88

    (95) parm -> expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

  ! shift/reduce conflict for MINUS resolved as shift
    REPORTER        reduce using rule 95 (parm -> expression .)
    NOT             reduce using rule 95 (parm -> expression .)
    LPAREN          reduce using rule 95 (parm -> expression .)
    LBRACKET        reduce using rule 95 (parm -> expression .)
    I2C_READ        reduce using rule 95 (parm -> expression .)
    HIGHBYTE        reduce using rule 95 (parm -> expression .)
    LOWBYTE         reduce using rule 95 (parm -> expression .)
    NUMBERLITERAL   reduce using rule 95 (parm -> expression .)
    TIMER           reduce using rule 95 (parm -> expression .)
    RANDOM          reduce using rule 95 (parm -> expression .)
    RECALL          reduce using rule 95 (parm -> expression .)
    SENSOR1         reduce using rule 95 (parm -> expression .)
    SENSOR2         reduce using rule 95 (parm -> expression .)
    SENSOR3         reduce using rule 95 (parm -> expression .)
    SENSOR4         reduce using rule 95 (parm -> expression .)
    SENSOR5         reduce using rule 95 (parm -> expression .)
    SENSOR6         reduce using rule 95 (parm -> expression .)
    SENSOR7         reduce using rule 95 (parm -> expression .)
    SENSOR8         reduce using rule 95 (parm -> expression .)
    SWITCH1         reduce using rule 95 (parm -> expression .)
    SWITCH2         reduce using rule 95 (parm -> expression .)
    SWITCH3         reduce using rule 95 (parm -> expression .)
    SWITCH4         reduce using rule 95 (parm -> expression .)
    SWITCH5         reduce using rule 95 (parm -> expression .)
    SWITCH6         reduce using rule 95 (parm -> expression .)
    SWITCH7         reduce using rule 95 (parm -> expression .)
    SWITCH8         reduce using rule 95 (parm -> expression .)
    NEWIRQ          reduce using rule 95 (parm -> expression .)
    SERIAL          reduce using rule 95 (parm -> expression .)
    REPEAT          reduce using rule 95 (parm -> expression .)
    WHILE           reduce using rule 95 (parm -> expression .)
    LOOP            reduce using rule 95 (parm -> expression .)
    FOREVER         reduce using rule 95 (parm -> expression .)
    IF              reduce using rule 95 (parm -> expression .)
    IFELSE          reduce using rule 95 (parm -> expression .)
    WAITUNTIL       reduce using rule 95 (parm -> expression .)
    WHEN            reduce using rule 95 (parm -> expression .)
    SHOW            reduce using rule 95 (parm -> expression .)
    MAKE            reduce using rule 95 (parm -> expression .)
    WAIT            reduce using rule 95 (parm -> expression .)
    SEND            reduce using rule 95 (parm -> expression .)
    RECORD          reduce using rule 95 (parm -> expression .)
    ERASE           reduce using rule 95 (parm -> expression .)
    SETSVH          reduce using rule 95 (parm -> expression .)
    SVR             reduce using rule 95 (parm -> expression .)
    SVL             reduce using rule 95 (parm -> expression .)
    SETPOWER        reduce using rule 95 (parm -> expression .)
    I2C_WRITE       reduce using rule 95 (parm -> expression .)
    OUTPUT          reduce using rule 95 (parm -> expression .)
    ONFOR           reduce using rule 95 (parm -> expression .)
    BSEND           reduce using rule 95 (parm -> expression .)
    BSR             reduce using rule 95 (parm -> expression .)
    SETDP           reduce using rule 95 (parm -> expression .)
    FASTSEND        reduce using rule 95 (parm -> expression .)
    BEEP            reduce using rule 95 (parm -> expression .)
    STOP            reduce using rule 95 (parm -> expression .)
    RESET           reduce using rule 95 (parm -> expression .)
    RESETDP         reduce using rule 95 (parm -> expression .)
    ON              reduce using rule 95 (parm -> expression .)
    OFF             reduce using rule 95 (parm -> expression .)
    THISWAY         reduce using rule 95 (parm -> expression .)
    THATWAY         reduce using rule 95 (parm -> expression .)
    RD              reduce using rule 95 (parm -> expression .)
    BRAKE           reduce using rule 95 (parm -> expression .)
    LEDON           reduce using rule 95 (parm -> expression .)
    LEDOFF          reduce using rule 95 (parm -> expression .)
    I2C_START       reduce using rule 95 (parm -> expression .)
    I2C_STOP        reduce using rule 95 (parm -> expression .)
    WHENOFF         reduce using rule 95 (parm -> expression .)
    MOTORATTENTION  reduce using rule 95 (parm -> expression .)
    BYTES           reduce using rule 95 (parm -> expression .)
    PROCEDURENAME   reduce using rule 95 (parm -> expression .)
    END             reduce using rule 95 (parm -> expression .)
    RBRACKET        reduce using rule 95 (parm -> expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127

  ! MINUS           [ reduce using rule 95 (parm -> expression .) ]


state 89

    (10) statement -> WHILE expression . LBRACKET statements RBRACKET
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    LBRACKET        shift and go to state 136
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 90

    (34) statement -> FASTSEND expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 34 (statement -> FASTSEND expression .)
    WHILE           reduce using rule 34 (statement -> FASTSEND expression .)
    LOOP            reduce using rule 34 (statement -> FASTSEND expression .)
    FOREVER         reduce using rule 34 (statement -> FASTSEND expression .)
    IF              reduce using rule 34 (statement -> FASTSEND expression .)
    IFELSE          reduce using rule 34 (statement -> FASTSEND expression .)
    WAITUNTIL       reduce using rule 34 (statement -> FASTSEND expression .)
    WHEN            reduce using rule 34 (statement -> FASTSEND expression .)
    SHOW            reduce using rule 34 (statement -> FASTSEND expression .)
    MAKE            reduce using rule 34 (statement -> FASTSEND expression .)
    WAIT            reduce using rule 34 (statement -> FASTSEND expression .)
    SEND            reduce using rule 34 (statement -> FASTSEND expression .)
    RECORD          reduce using rule 34 (statement -> FASTSEND expression .)
    ERASE           reduce using rule 34 (statement -> FASTSEND expression .)
    SETSVH          reduce using rule 34 (statement -> FASTSEND expression .)
    SVR             reduce using rule 34 (statement -> FASTSEND expression .)
    SVL             reduce using rule 34 (statement -> FASTSEND expression .)
    SETPOWER        reduce using rule 34 (statement -> FASTSEND expression .)
    I2C_WRITE       reduce using rule 34 (statement -> FASTSEND expression .)
    OUTPUT          reduce using rule 34 (statement -> FASTSEND expression .)
    ONFOR           reduce using rule 34 (statement -> FASTSEND expression .)
    BSEND           reduce using rule 34 (statement -> FASTSEND expression .)
    BSR             reduce using rule 34 (statement -> FASTSEND expression .)
    SETDP           reduce using rule 34 (statement -> FASTSEND expression .)
    FASTSEND        reduce using rule 34 (statement -> FASTSEND expression .)
    BEEP            reduce using rule 34 (statement -> FASTSEND expression .)
    STOP            reduce using rule 34 (statement -> FASTSEND expression .)
    RESET           reduce using rule 34 (statement -> FASTSEND expression .)
    RESETDP         reduce using rule 34 (statement -> FASTSEND expression .)
    ON              reduce using rule 34 (statement -> FASTSEND expression .)
    OFF             reduce using rule 34 (statement -> FASTSEND expression .)
    THISWAY         reduce using rule 34 (statement -> FASTSEND expression .)
    THATWAY         reduce using rule 34 (statement -> FASTSEND expression .)
    RD              reduce using rule 34 (statement -> FASTSEND expression .)
    BRAKE           reduce using rule 34 (statement -> FASTSEND expression .)
    LEDON           reduce using rule 34 (statement -> FASTSEND expression .)
    LEDOFF          reduce using rule 34 (statement -> FASTSEND expression .)
    I2C_START       reduce using rule 34 (statement -> FASTSEND expression .)
    I2C_STOP        reduce using rule 34 (statement -> FASTSEND expression .)
    WHENOFF         reduce using rule 34 (statement -> FASTSEND expression .)
    MOTORATTENTION  reduce using rule 34 (statement -> FASTSEND expression .)
    BYTES           reduce using rule 34 (statement -> FASTSEND expression .)
    PROCEDURENAME   reduce using rule 34 (statement -> FASTSEND expression .)
    RBRACKET        reduce using rule 34 (statement -> FASTSEND expression .)
    END             reduce using rule 34 (statement -> FASTSEND expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 91

    (24) statement -> SETSVH expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 24 (statement -> SETSVH expression .)
    WHILE           reduce using rule 24 (statement -> SETSVH expression .)
    LOOP            reduce using rule 24 (statement -> SETSVH expression .)
    FOREVER         reduce using rule 24 (statement -> SETSVH expression .)
    IF              reduce using rule 24 (statement -> SETSVH expression .)
    IFELSE          reduce using rule 24 (statement -> SETSVH expression .)
    WAITUNTIL       reduce using rule 24 (statement -> SETSVH expression .)
    WHEN            reduce using rule 24 (statement -> SETSVH expression .)
    SHOW            reduce using rule 24 (statement -> SETSVH expression .)
    MAKE            reduce using rule 24 (statement -> SETSVH expression .)
    WAIT            reduce using rule 24 (statement -> SETSVH expression .)
    SEND            reduce using rule 24 (statement -> SETSVH expression .)
    RECORD          reduce using rule 24 (statement -> SETSVH expression .)
    ERASE           reduce using rule 24 (statement -> SETSVH expression .)
    SETSVH          reduce using rule 24 (statement -> SETSVH expression .)
    SVR             reduce using rule 24 (statement -> SETSVH expression .)
    SVL             reduce using rule 24 (statement -> SETSVH expression .)
    SETPOWER        reduce using rule 24 (statement -> SETSVH expression .)
    I2C_WRITE       reduce using rule 24 (statement -> SETSVH expression .)
    OUTPUT          reduce using rule 24 (statement -> SETSVH expression .)
    ONFOR           reduce using rule 24 (statement -> SETSVH expression .)
    BSEND           reduce using rule 24 (statement -> SETSVH expression .)
    BSR             reduce using rule 24 (statement -> SETSVH expression .)
    SETDP           reduce using rule 24 (statement -> SETSVH expression .)
    FASTSEND        reduce using rule 24 (statement -> SETSVH expression .)
    BEEP            reduce using rule 24 (statement -> SETSVH expression .)
    STOP            reduce using rule 24 (statement -> SETSVH expression .)
    RESET           reduce using rule 24 (statement -> SETSVH expression .)
    RESETDP         reduce using rule 24 (statement -> SETSVH expression .)
    ON              reduce using rule 24 (statement -> SETSVH expression .)
    OFF             reduce using rule 24 (statement -> SETSVH expression .)
    THISWAY         reduce using rule 24 (statement -> SETSVH expression .)
    THATWAY         reduce using rule 24 (statement -> SETSVH expression .)
    RD              reduce using rule 24 (statement -> SETSVH expression .)
    BRAKE           reduce using rule 24 (statement -> SETSVH expression .)
    LEDON           reduce using rule 24 (statement -> SETSVH expression .)
    LEDOFF          reduce using rule 24 (statement -> SETSVH expression .)
    I2C_START       reduce using rule 24 (statement -> SETSVH expression .)
    I2C_STOP        reduce using rule 24 (statement -> SETSVH expression .)
    WHENOFF         reduce using rule 24 (statement -> SETSVH expression .)
    MOTORATTENTION  reduce using rule 24 (statement -> SETSVH expression .)
    BYTES           reduce using rule 24 (statement -> SETSVH expression .)
    PROCEDURENAME   reduce using rule 24 (statement -> SETSVH expression .)
    RBRACKET        reduce using rule 24 (statement -> SETSVH expression .)
    END             reduce using rule 24 (statement -> SETSVH expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 92

    (22) statement -> RECORD expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 22 (statement -> RECORD expression .)
    WHILE           reduce using rule 22 (statement -> RECORD expression .)
    LOOP            reduce using rule 22 (statement -> RECORD expression .)
    FOREVER         reduce using rule 22 (statement -> RECORD expression .)
    IF              reduce using rule 22 (statement -> RECORD expression .)
    IFELSE          reduce using rule 22 (statement -> RECORD expression .)
    WAITUNTIL       reduce using rule 22 (statement -> RECORD expression .)
    WHEN            reduce using rule 22 (statement -> RECORD expression .)
    SHOW            reduce using rule 22 (statement -> RECORD expression .)
    MAKE            reduce using rule 22 (statement -> RECORD expression .)
    WAIT            reduce using rule 22 (statement -> RECORD expression .)
    SEND            reduce using rule 22 (statement -> RECORD expression .)
    RECORD          reduce using rule 22 (statement -> RECORD expression .)
    ERASE           reduce using rule 22 (statement -> RECORD expression .)
    SETSVH          reduce using rule 22 (statement -> RECORD expression .)
    SVR             reduce using rule 22 (statement -> RECORD expression .)
    SVL             reduce using rule 22 (statement -> RECORD expression .)
    SETPOWER        reduce using rule 22 (statement -> RECORD expression .)
    I2C_WRITE       reduce using rule 22 (statement -> RECORD expression .)
    OUTPUT          reduce using rule 22 (statement -> RECORD expression .)
    ONFOR           reduce using rule 22 (statement -> RECORD expression .)
    BSEND           reduce using rule 22 (statement -> RECORD expression .)
    BSR             reduce using rule 22 (statement -> RECORD expression .)
    SETDP           reduce using rule 22 (statement -> RECORD expression .)
    FASTSEND        reduce using rule 22 (statement -> RECORD expression .)
    BEEP            reduce using rule 22 (statement -> RECORD expression .)
    STOP            reduce using rule 22 (statement -> RECORD expression .)
    RESET           reduce using rule 22 (statement -> RECORD expression .)
    RESETDP         reduce using rule 22 (statement -> RECORD expression .)
    ON              reduce using rule 22 (statement -> RECORD expression .)
    OFF             reduce using rule 22 (statement -> RECORD expression .)
    THISWAY         reduce using rule 22 (statement -> RECORD expression .)
    THATWAY         reduce using rule 22 (statement -> RECORD expression .)
    RD              reduce using rule 22 (statement -> RECORD expression .)
    BRAKE           reduce using rule 22 (statement -> RECORD expression .)
    LEDON           reduce using rule 22 (statement -> RECORD expression .)
    LEDOFF          reduce using rule 22 (statement -> RECORD expression .)
    I2C_START       reduce using rule 22 (statement -> RECORD expression .)
    I2C_STOP        reduce using rule 22 (statement -> RECORD expression .)
    WHENOFF         reduce using rule 22 (statement -> RECORD expression .)
    MOTORATTENTION  reduce using rule 22 (statement -> RECORD expression .)
    BYTES           reduce using rule 22 (statement -> RECORD expression .)
    PROCEDURENAME   reduce using rule 22 (statement -> RECORD expression .)
    RBRACKET        reduce using rule 22 (statement -> RECORD expression .)
    END             reduce using rule 22 (statement -> RECORD expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 93

    (18) statement -> SHOW RECEIVER .

    REPEAT          reduce using rule 18 (statement -> SHOW RECEIVER .)
    WHILE           reduce using rule 18 (statement -> SHOW RECEIVER .)
    LOOP            reduce using rule 18 (statement -> SHOW RECEIVER .)
    FOREVER         reduce using rule 18 (statement -> SHOW RECEIVER .)
    IF              reduce using rule 18 (statement -> SHOW RECEIVER .)
    IFELSE          reduce using rule 18 (statement -> SHOW RECEIVER .)
    WAITUNTIL       reduce using rule 18 (statement -> SHOW RECEIVER .)
    WHEN            reduce using rule 18 (statement -> SHOW RECEIVER .)
    SHOW            reduce using rule 18 (statement -> SHOW RECEIVER .)
    MAKE            reduce using rule 18 (statement -> SHOW RECEIVER .)
    WAIT            reduce using rule 18 (statement -> SHOW RECEIVER .)
    SEND            reduce using rule 18 (statement -> SHOW RECEIVER .)
    RECORD          reduce using rule 18 (statement -> SHOW RECEIVER .)
    ERASE           reduce using rule 18 (statement -> SHOW RECEIVER .)
    SETSVH          reduce using rule 18 (statement -> SHOW RECEIVER .)
    SVR             reduce using rule 18 (statement -> SHOW RECEIVER .)
    SVL             reduce using rule 18 (statement -> SHOW RECEIVER .)
    SETPOWER        reduce using rule 18 (statement -> SHOW RECEIVER .)
    I2C_WRITE       reduce using rule 18 (statement -> SHOW RECEIVER .)
    OUTPUT          reduce using rule 18 (statement -> SHOW RECEIVER .)
    ONFOR           reduce using rule 18 (statement -> SHOW RECEIVER .)
    BSEND           reduce using rule 18 (statement -> SHOW RECEIVER .)
    BSR             reduce using rule 18 (statement -> SHOW RECEIVER .)
    SETDP           reduce using rule 18 (statement -> SHOW RECEIVER .)
    FASTSEND        reduce using rule 18 (statement -> SHOW RECEIVER .)
    BEEP            reduce using rule 18 (statement -> SHOW RECEIVER .)
    STOP            reduce using rule 18 (statement -> SHOW RECEIVER .)
    RESET           reduce using rule 18 (statement -> SHOW RECEIVER .)
    RESETDP         reduce using rule 18 (statement -> SHOW RECEIVER .)
    ON              reduce using rule 18 (statement -> SHOW RECEIVER .)
    OFF             reduce using rule 18 (statement -> SHOW RECEIVER .)
    THISWAY         reduce using rule 18 (statement -> SHOW RECEIVER .)
    THATWAY         reduce using rule 18 (statement -> SHOW RECEIVER .)
    RD              reduce using rule 18 (statement -> SHOW RECEIVER .)
    BRAKE           reduce using rule 18 (statement -> SHOW RECEIVER .)
    LEDON           reduce using rule 18 (statement -> SHOW RECEIVER .)
    LEDOFF          reduce using rule 18 (statement -> SHOW RECEIVER .)
    I2C_START       reduce using rule 18 (statement -> SHOW RECEIVER .)
    I2C_STOP        reduce using rule 18 (statement -> SHOW RECEIVER .)
    WHENOFF         reduce using rule 18 (statement -> SHOW RECEIVER .)
    MOTORATTENTION  reduce using rule 18 (statement -> SHOW RECEIVER .)
    BYTES           reduce using rule 18 (statement -> SHOW RECEIVER .)
    PROCEDURENAME   reduce using rule 18 (statement -> SHOW RECEIVER .)
    RBRACKET        reduce using rule 18 (statement -> SHOW RECEIVER .)
    END             reduce using rule 18 (statement -> SHOW RECEIVER .)


state 94

    (17) statement -> SHOW expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 17 (statement -> SHOW expression .)
    WHILE           reduce using rule 17 (statement -> SHOW expression .)
    LOOP            reduce using rule 17 (statement -> SHOW expression .)
    FOREVER         reduce using rule 17 (statement -> SHOW expression .)
    IF              reduce using rule 17 (statement -> SHOW expression .)
    IFELSE          reduce using rule 17 (statement -> SHOW expression .)
    WAITUNTIL       reduce using rule 17 (statement -> SHOW expression .)
    WHEN            reduce using rule 17 (statement -> SHOW expression .)
    SHOW            reduce using rule 17 (statement -> SHOW expression .)
    MAKE            reduce using rule 17 (statement -> SHOW expression .)
    WAIT            reduce using rule 17 (statement -> SHOW expression .)
    SEND            reduce using rule 17 (statement -> SHOW expression .)
    RECORD          reduce using rule 17 (statement -> SHOW expression .)
    ERASE           reduce using rule 17 (statement -> SHOW expression .)
    SETSVH          reduce using rule 17 (statement -> SHOW expression .)
    SVR             reduce using rule 17 (statement -> SHOW expression .)
    SVL             reduce using rule 17 (statement -> SHOW expression .)
    SETPOWER        reduce using rule 17 (statement -> SHOW expression .)
    I2C_WRITE       reduce using rule 17 (statement -> SHOW expression .)
    OUTPUT          reduce using rule 17 (statement -> SHOW expression .)
    ONFOR           reduce using rule 17 (statement -> SHOW expression .)
    BSEND           reduce using rule 17 (statement -> SHOW expression .)
    BSR             reduce using rule 17 (statement -> SHOW expression .)
    SETDP           reduce using rule 17 (statement -> SHOW expression .)
    FASTSEND        reduce using rule 17 (statement -> SHOW expression .)
    BEEP            reduce using rule 17 (statement -> SHOW expression .)
    STOP            reduce using rule 17 (statement -> SHOW expression .)
    RESET           reduce using rule 17 (statement -> SHOW expression .)
    RESETDP         reduce using rule 17 (statement -> SHOW expression .)
    ON              reduce using rule 17 (statement -> SHOW expression .)
    OFF             reduce using rule 17 (statement -> SHOW expression .)
    THISWAY         reduce using rule 17 (statement -> SHOW expression .)
    THATWAY         reduce using rule 17 (statement -> SHOW expression .)
    RD              reduce using rule 17 (statement -> SHOW expression .)
    BRAKE           reduce using rule 17 (statement -> SHOW expression .)
    LEDON           reduce using rule 17 (statement -> SHOW expression .)
    LEDOFF          reduce using rule 17 (statement -> SHOW expression .)
    I2C_START       reduce using rule 17 (statement -> SHOW expression .)
    I2C_STOP        reduce using rule 17 (statement -> SHOW expression .)
    WHENOFF         reduce using rule 17 (statement -> SHOW expression .)
    MOTORATTENTION  reduce using rule 17 (statement -> SHOW expression .)
    BYTES           reduce using rule 17 (statement -> SHOW expression .)
    PROCEDURENAME   reduce using rule 17 (statement -> SHOW expression .)
    RBRACKET        reduce using rule 17 (statement -> SHOW expression .)
    END             reduce using rule 17 (statement -> SHOW expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 95

    (16) statement -> WHEN expression . LBRACKET expression RBRACKET
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    LBRACKET        shift and go to state 137
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 96

    (32) statement -> BSR expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 32 (statement -> BSR expression .)
    WHILE           reduce using rule 32 (statement -> BSR expression .)
    LOOP            reduce using rule 32 (statement -> BSR expression .)
    FOREVER         reduce using rule 32 (statement -> BSR expression .)
    IF              reduce using rule 32 (statement -> BSR expression .)
    IFELSE          reduce using rule 32 (statement -> BSR expression .)
    WAITUNTIL       reduce using rule 32 (statement -> BSR expression .)
    WHEN            reduce using rule 32 (statement -> BSR expression .)
    SHOW            reduce using rule 32 (statement -> BSR expression .)
    MAKE            reduce using rule 32 (statement -> BSR expression .)
    WAIT            reduce using rule 32 (statement -> BSR expression .)
    SEND            reduce using rule 32 (statement -> BSR expression .)
    RECORD          reduce using rule 32 (statement -> BSR expression .)
    ERASE           reduce using rule 32 (statement -> BSR expression .)
    SETSVH          reduce using rule 32 (statement -> BSR expression .)
    SVR             reduce using rule 32 (statement -> BSR expression .)
    SVL             reduce using rule 32 (statement -> BSR expression .)
    SETPOWER        reduce using rule 32 (statement -> BSR expression .)
    I2C_WRITE       reduce using rule 32 (statement -> BSR expression .)
    OUTPUT          reduce using rule 32 (statement -> BSR expression .)
    ONFOR           reduce using rule 32 (statement -> BSR expression .)
    BSEND           reduce using rule 32 (statement -> BSR expression .)
    BSR             reduce using rule 32 (statement -> BSR expression .)
    SETDP           reduce using rule 32 (statement -> BSR expression .)
    FASTSEND        reduce using rule 32 (statement -> BSR expression .)
    BEEP            reduce using rule 32 (statement -> BSR expression .)
    STOP            reduce using rule 32 (statement -> BSR expression .)
    RESET           reduce using rule 32 (statement -> BSR expression .)
    RESETDP         reduce using rule 32 (statement -> BSR expression .)
    ON              reduce using rule 32 (statement -> BSR expression .)
    OFF             reduce using rule 32 (statement -> BSR expression .)
    THISWAY         reduce using rule 32 (statement -> BSR expression .)
    THATWAY         reduce using rule 32 (statement -> BSR expression .)
    RD              reduce using rule 32 (statement -> BSR expression .)
    BRAKE           reduce using rule 32 (statement -> BSR expression .)
    LEDON           reduce using rule 32 (statement -> BSR expression .)
    LEDOFF          reduce using rule 32 (statement -> BSR expression .)
    I2C_START       reduce using rule 32 (statement -> BSR expression .)
    I2C_STOP        reduce using rule 32 (statement -> BSR expression .)
    WHENOFF         reduce using rule 32 (statement -> BSR expression .)
    MOTORATTENTION  reduce using rule 32 (statement -> BSR expression .)
    BYTES           reduce using rule 32 (statement -> BSR expression .)
    PROCEDURENAME   reduce using rule 32 (statement -> BSR expression .)
    RBRACKET        reduce using rule 32 (statement -> BSR expression .)
    END             reduce using rule 32 (statement -> BSR expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 97

    (23) statement -> ERASE expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 23 (statement -> ERASE expression .)
    WHILE           reduce using rule 23 (statement -> ERASE expression .)
    LOOP            reduce using rule 23 (statement -> ERASE expression .)
    FOREVER         reduce using rule 23 (statement -> ERASE expression .)
    IF              reduce using rule 23 (statement -> ERASE expression .)
    IFELSE          reduce using rule 23 (statement -> ERASE expression .)
    WAITUNTIL       reduce using rule 23 (statement -> ERASE expression .)
    WHEN            reduce using rule 23 (statement -> ERASE expression .)
    SHOW            reduce using rule 23 (statement -> ERASE expression .)
    MAKE            reduce using rule 23 (statement -> ERASE expression .)
    WAIT            reduce using rule 23 (statement -> ERASE expression .)
    SEND            reduce using rule 23 (statement -> ERASE expression .)
    RECORD          reduce using rule 23 (statement -> ERASE expression .)
    ERASE           reduce using rule 23 (statement -> ERASE expression .)
    SETSVH          reduce using rule 23 (statement -> ERASE expression .)
    SVR             reduce using rule 23 (statement -> ERASE expression .)
    SVL             reduce using rule 23 (statement -> ERASE expression .)
    SETPOWER        reduce using rule 23 (statement -> ERASE expression .)
    I2C_WRITE       reduce using rule 23 (statement -> ERASE expression .)
    OUTPUT          reduce using rule 23 (statement -> ERASE expression .)
    ONFOR           reduce using rule 23 (statement -> ERASE expression .)
    BSEND           reduce using rule 23 (statement -> ERASE expression .)
    BSR             reduce using rule 23 (statement -> ERASE expression .)
    SETDP           reduce using rule 23 (statement -> ERASE expression .)
    FASTSEND        reduce using rule 23 (statement -> ERASE expression .)
    BEEP            reduce using rule 23 (statement -> ERASE expression .)
    STOP            reduce using rule 23 (statement -> ERASE expression .)
    RESET           reduce using rule 23 (statement -> ERASE expression .)
    RESETDP         reduce using rule 23 (statement -> ERASE expression .)
    ON              reduce using rule 23 (statement -> ERASE expression .)
    OFF             reduce using rule 23 (statement -> ERASE expression .)
    THISWAY         reduce using rule 23 (statement -> ERASE expression .)
    THATWAY         reduce using rule 23 (statement -> ERASE expression .)
    RD              reduce using rule 23 (statement -> ERASE expression .)
    BRAKE           reduce using rule 23 (statement -> ERASE expression .)
    LEDON           reduce using rule 23 (statement -> ERASE expression .)
    LEDOFF          reduce using rule 23 (statement -> ERASE expression .)
    I2C_START       reduce using rule 23 (statement -> ERASE expression .)
    I2C_STOP        reduce using rule 23 (statement -> ERASE expression .)
    WHENOFF         reduce using rule 23 (statement -> ERASE expression .)
    MOTORATTENTION  reduce using rule 23 (statement -> ERASE expression .)
    BYTES           reduce using rule 23 (statement -> ERASE expression .)
    PROCEDURENAME   reduce using rule 23 (statement -> ERASE expression .)
    RBRACKET        reduce using rule 23 (statement -> ERASE expression .)
    END             reduce using rule 23 (statement -> ERASE expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 98

    (14) statement -> IFELSE expression . LBRACKET statements RBRACKET LBRACKET statements RBRACKET
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    LBRACKET        shift and go to state 138
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 99

    (7) statements -> statement statements .

    END             reduce using rule 7 (statements -> statement statements .)
    RBRACKET        reduce using rule 7 (statements -> statement statements .)


state 100

    (33) statement -> SETDP expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 33 (statement -> SETDP expression .)
    WHILE           reduce using rule 33 (statement -> SETDP expression .)
    LOOP            reduce using rule 33 (statement -> SETDP expression .)
    FOREVER         reduce using rule 33 (statement -> SETDP expression .)
    IF              reduce using rule 33 (statement -> SETDP expression .)
    IFELSE          reduce using rule 33 (statement -> SETDP expression .)
    WAITUNTIL       reduce using rule 33 (statement -> SETDP expression .)
    WHEN            reduce using rule 33 (statement -> SETDP expression .)
    SHOW            reduce using rule 33 (statement -> SETDP expression .)
    MAKE            reduce using rule 33 (statement -> SETDP expression .)
    WAIT            reduce using rule 33 (statement -> SETDP expression .)
    SEND            reduce using rule 33 (statement -> SETDP expression .)
    RECORD          reduce using rule 33 (statement -> SETDP expression .)
    ERASE           reduce using rule 33 (statement -> SETDP expression .)
    SETSVH          reduce using rule 33 (statement -> SETDP expression .)
    SVR             reduce using rule 33 (statement -> SETDP expression .)
    SVL             reduce using rule 33 (statement -> SETDP expression .)
    SETPOWER        reduce using rule 33 (statement -> SETDP expression .)
    I2C_WRITE       reduce using rule 33 (statement -> SETDP expression .)
    OUTPUT          reduce using rule 33 (statement -> SETDP expression .)
    ONFOR           reduce using rule 33 (statement -> SETDP expression .)
    BSEND           reduce using rule 33 (statement -> SETDP expression .)
    BSR             reduce using rule 33 (statement -> SETDP expression .)
    SETDP           reduce using rule 33 (statement -> SETDP expression .)
    FASTSEND        reduce using rule 33 (statement -> SETDP expression .)
    BEEP            reduce using rule 33 (statement -> SETDP expression .)
    STOP            reduce using rule 33 (statement -> SETDP expression .)
    RESET           reduce using rule 33 (statement -> SETDP expression .)
    RESETDP         reduce using rule 33 (statement -> SETDP expression .)
    ON              reduce using rule 33 (statement -> SETDP expression .)
    OFF             reduce using rule 33 (statement -> SETDP expression .)
    THISWAY         reduce using rule 33 (statement -> SETDP expression .)
    THATWAY         reduce using rule 33 (statement -> SETDP expression .)
    RD              reduce using rule 33 (statement -> SETDP expression .)
    BRAKE           reduce using rule 33 (statement -> SETDP expression .)
    LEDON           reduce using rule 33 (statement -> SETDP expression .)
    LEDOFF          reduce using rule 33 (statement -> SETDP expression .)
    I2C_START       reduce using rule 33 (statement -> SETDP expression .)
    I2C_STOP        reduce using rule 33 (statement -> SETDP expression .)
    WHENOFF         reduce using rule 33 (statement -> SETDP expression .)
    MOTORATTENTION  reduce using rule 33 (statement -> SETDP expression .)
    BYTES           reduce using rule 33 (statement -> SETDP expression .)
    PROCEDURENAME   reduce using rule 33 (statement -> SETDP expression .)
    RBRACKET        reduce using rule 33 (statement -> SETDP expression .)
    END             reduce using rule 33 (statement -> SETDP expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 101

    (13) statement -> IF expression . LBRACKET statements RBRACKET
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    LBRACKET        shift and go to state 139
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 102

    (26) statement -> SVL expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 26 (statement -> SVL expression .)
    WHILE           reduce using rule 26 (statement -> SVL expression .)
    LOOP            reduce using rule 26 (statement -> SVL expression .)
    FOREVER         reduce using rule 26 (statement -> SVL expression .)
    IF              reduce using rule 26 (statement -> SVL expression .)
    IFELSE          reduce using rule 26 (statement -> SVL expression .)
    WAITUNTIL       reduce using rule 26 (statement -> SVL expression .)
    WHEN            reduce using rule 26 (statement -> SVL expression .)
    SHOW            reduce using rule 26 (statement -> SVL expression .)
    MAKE            reduce using rule 26 (statement -> SVL expression .)
    WAIT            reduce using rule 26 (statement -> SVL expression .)
    SEND            reduce using rule 26 (statement -> SVL expression .)
    RECORD          reduce using rule 26 (statement -> SVL expression .)
    ERASE           reduce using rule 26 (statement -> SVL expression .)
    SETSVH          reduce using rule 26 (statement -> SVL expression .)
    SVR             reduce using rule 26 (statement -> SVL expression .)
    SVL             reduce using rule 26 (statement -> SVL expression .)
    SETPOWER        reduce using rule 26 (statement -> SVL expression .)
    I2C_WRITE       reduce using rule 26 (statement -> SVL expression .)
    OUTPUT          reduce using rule 26 (statement -> SVL expression .)
    ONFOR           reduce using rule 26 (statement -> SVL expression .)
    BSEND           reduce using rule 26 (statement -> SVL expression .)
    BSR             reduce using rule 26 (statement -> SVL expression .)
    SETDP           reduce using rule 26 (statement -> SVL expression .)
    FASTSEND        reduce using rule 26 (statement -> SVL expression .)
    BEEP            reduce using rule 26 (statement -> SVL expression .)
    STOP            reduce using rule 26 (statement -> SVL expression .)
    RESET           reduce using rule 26 (statement -> SVL expression .)
    RESETDP         reduce using rule 26 (statement -> SVL expression .)
    ON              reduce using rule 26 (statement -> SVL expression .)
    OFF             reduce using rule 26 (statement -> SVL expression .)
    THISWAY         reduce using rule 26 (statement -> SVL expression .)
    THATWAY         reduce using rule 26 (statement -> SVL expression .)
    RD              reduce using rule 26 (statement -> SVL expression .)
    BRAKE           reduce using rule 26 (statement -> SVL expression .)
    LEDON           reduce using rule 26 (statement -> SVL expression .)
    LEDOFF          reduce using rule 26 (statement -> SVL expression .)
    I2C_START       reduce using rule 26 (statement -> SVL expression .)
    I2C_STOP        reduce using rule 26 (statement -> SVL expression .)
    WHENOFF         reduce using rule 26 (statement -> SVL expression .)
    MOTORATTENTION  reduce using rule 26 (statement -> SVL expression .)
    BYTES           reduce using rule 26 (statement -> SVL expression .)
    PROCEDURENAME   reduce using rule 26 (statement -> SVL expression .)
    RBRACKET        reduce using rule 26 (statement -> SVL expression .)
    END             reduce using rule 26 (statement -> SVL expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 103

    (9) statement -> REPEAT expression . LBRACKET statements RBRACKET
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    LBRACKET        shift and go to state 140
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 104

    (4) procedure -> TO PROCEDURENAME parameterDeclaration statements . END

    END             shift and go to state 141


state 105

    (30) statement -> ONFOR expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 30 (statement -> ONFOR expression .)
    WHILE           reduce using rule 30 (statement -> ONFOR expression .)
    LOOP            reduce using rule 30 (statement -> ONFOR expression .)
    FOREVER         reduce using rule 30 (statement -> ONFOR expression .)
    IF              reduce using rule 30 (statement -> ONFOR expression .)
    IFELSE          reduce using rule 30 (statement -> ONFOR expression .)
    WAITUNTIL       reduce using rule 30 (statement -> ONFOR expression .)
    WHEN            reduce using rule 30 (statement -> ONFOR expression .)
    SHOW            reduce using rule 30 (statement -> ONFOR expression .)
    MAKE            reduce using rule 30 (statement -> ONFOR expression .)
    WAIT            reduce using rule 30 (statement -> ONFOR expression .)
    SEND            reduce using rule 30 (statement -> ONFOR expression .)
    RECORD          reduce using rule 30 (statement -> ONFOR expression .)
    ERASE           reduce using rule 30 (statement -> ONFOR expression .)
    SETSVH          reduce using rule 30 (statement -> ONFOR expression .)
    SVR             reduce using rule 30 (statement -> ONFOR expression .)
    SVL             reduce using rule 30 (statement -> ONFOR expression .)
    SETPOWER        reduce using rule 30 (statement -> ONFOR expression .)
    I2C_WRITE       reduce using rule 30 (statement -> ONFOR expression .)
    OUTPUT          reduce using rule 30 (statement -> ONFOR expression .)
    ONFOR           reduce using rule 30 (statement -> ONFOR expression .)
    BSEND           reduce using rule 30 (statement -> ONFOR expression .)
    BSR             reduce using rule 30 (statement -> ONFOR expression .)
    SETDP           reduce using rule 30 (statement -> ONFOR expression .)
    FASTSEND        reduce using rule 30 (statement -> ONFOR expression .)
    BEEP            reduce using rule 30 (statement -> ONFOR expression .)
    STOP            reduce using rule 30 (statement -> ONFOR expression .)
    RESET           reduce using rule 30 (statement -> ONFOR expression .)
    RESETDP         reduce using rule 30 (statement -> ONFOR expression .)
    ON              reduce using rule 30 (statement -> ONFOR expression .)
    OFF             reduce using rule 30 (statement -> ONFOR expression .)
    THISWAY         reduce using rule 30 (statement -> ONFOR expression .)
    THATWAY         reduce using rule 30 (statement -> ONFOR expression .)
    RD              reduce using rule 30 (statement -> ONFOR expression .)
    BRAKE           reduce using rule 30 (statement -> ONFOR expression .)
    LEDON           reduce using rule 30 (statement -> ONFOR expression .)
    LEDOFF          reduce using rule 30 (statement -> ONFOR expression .)
    I2C_START       reduce using rule 30 (statement -> ONFOR expression .)
    I2C_STOP        reduce using rule 30 (statement -> ONFOR expression .)
    WHENOFF         reduce using rule 30 (statement -> ONFOR expression .)
    MOTORATTENTION  reduce using rule 30 (statement -> ONFOR expression .)
    BYTES           reduce using rule 30 (statement -> ONFOR expression .)
    PROCEDURENAME   reduce using rule 30 (statement -> ONFOR expression .)
    RBRACKET        reduce using rule 30 (statement -> ONFOR expression .)
    END             reduce using rule 30 (statement -> ONFOR expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 106

    (25) statement -> SVR expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 25 (statement -> SVR expression .)
    WHILE           reduce using rule 25 (statement -> SVR expression .)
    LOOP            reduce using rule 25 (statement -> SVR expression .)
    FOREVER         reduce using rule 25 (statement -> SVR expression .)
    IF              reduce using rule 25 (statement -> SVR expression .)
    IFELSE          reduce using rule 25 (statement -> SVR expression .)
    WAITUNTIL       reduce using rule 25 (statement -> SVR expression .)
    WHEN            reduce using rule 25 (statement -> SVR expression .)
    SHOW            reduce using rule 25 (statement -> SVR expression .)
    MAKE            reduce using rule 25 (statement -> SVR expression .)
    WAIT            reduce using rule 25 (statement -> SVR expression .)
    SEND            reduce using rule 25 (statement -> SVR expression .)
    RECORD          reduce using rule 25 (statement -> SVR expression .)
    ERASE           reduce using rule 25 (statement -> SVR expression .)
    SETSVH          reduce using rule 25 (statement -> SVR expression .)
    SVR             reduce using rule 25 (statement -> SVR expression .)
    SVL             reduce using rule 25 (statement -> SVR expression .)
    SETPOWER        reduce using rule 25 (statement -> SVR expression .)
    I2C_WRITE       reduce using rule 25 (statement -> SVR expression .)
    OUTPUT          reduce using rule 25 (statement -> SVR expression .)
    ONFOR           reduce using rule 25 (statement -> SVR expression .)
    BSEND           reduce using rule 25 (statement -> SVR expression .)
    BSR             reduce using rule 25 (statement -> SVR expression .)
    SETDP           reduce using rule 25 (statement -> SVR expression .)
    FASTSEND        reduce using rule 25 (statement -> SVR expression .)
    BEEP            reduce using rule 25 (statement -> SVR expression .)
    STOP            reduce using rule 25 (statement -> SVR expression .)
    RESET           reduce using rule 25 (statement -> SVR expression .)
    RESETDP         reduce using rule 25 (statement -> SVR expression .)
    ON              reduce using rule 25 (statement -> SVR expression .)
    OFF             reduce using rule 25 (statement -> SVR expression .)
    THISWAY         reduce using rule 25 (statement -> SVR expression .)
    THATWAY         reduce using rule 25 (statement -> SVR expression .)
    RD              reduce using rule 25 (statement -> SVR expression .)
    BRAKE           reduce using rule 25 (statement -> SVR expression .)
    LEDON           reduce using rule 25 (statement -> SVR expression .)
    LEDOFF          reduce using rule 25 (statement -> SVR expression .)
    I2C_START       reduce using rule 25 (statement -> SVR expression .)
    I2C_STOP        reduce using rule 25 (statement -> SVR expression .)
    WHENOFF         reduce using rule 25 (statement -> SVR expression .)
    MOTORATTENTION  reduce using rule 25 (statement -> SVR expression .)
    BYTES           reduce using rule 25 (statement -> SVR expression .)
    PROCEDURENAME   reduce using rule 25 (statement -> SVR expression .)
    RBRACKET        reduce using rule 25 (statement -> SVR expression .)
    END             reduce using rule 25 (statement -> SVR expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 107

    (28) statement -> I2C_WRITE expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 28 (statement -> I2C_WRITE expression .)
    WHILE           reduce using rule 28 (statement -> I2C_WRITE expression .)
    LOOP            reduce using rule 28 (statement -> I2C_WRITE expression .)
    FOREVER         reduce using rule 28 (statement -> I2C_WRITE expression .)
    IF              reduce using rule 28 (statement -> I2C_WRITE expression .)
    IFELSE          reduce using rule 28 (statement -> I2C_WRITE expression .)
    WAITUNTIL       reduce using rule 28 (statement -> I2C_WRITE expression .)
    WHEN            reduce using rule 28 (statement -> I2C_WRITE expression .)
    SHOW            reduce using rule 28 (statement -> I2C_WRITE expression .)
    MAKE            reduce using rule 28 (statement -> I2C_WRITE expression .)
    WAIT            reduce using rule 28 (statement -> I2C_WRITE expression .)
    SEND            reduce using rule 28 (statement -> I2C_WRITE expression .)
    RECORD          reduce using rule 28 (statement -> I2C_WRITE expression .)
    ERASE           reduce using rule 28 (statement -> I2C_WRITE expression .)
    SETSVH          reduce using rule 28 (statement -> I2C_WRITE expression .)
    SVR             reduce using rule 28 (statement -> I2C_WRITE expression .)
    SVL             reduce using rule 28 (statement -> I2C_WRITE expression .)
    SETPOWER        reduce using rule 28 (statement -> I2C_WRITE expression .)
    I2C_WRITE       reduce using rule 28 (statement -> I2C_WRITE expression .)
    OUTPUT          reduce using rule 28 (statement -> I2C_WRITE expression .)
    ONFOR           reduce using rule 28 (statement -> I2C_WRITE expression .)
    BSEND           reduce using rule 28 (statement -> I2C_WRITE expression .)
    BSR             reduce using rule 28 (statement -> I2C_WRITE expression .)
    SETDP           reduce using rule 28 (statement -> I2C_WRITE expression .)
    FASTSEND        reduce using rule 28 (statement -> I2C_WRITE expression .)
    BEEP            reduce using rule 28 (statement -> I2C_WRITE expression .)
    STOP            reduce using rule 28 (statement -> I2C_WRITE expression .)
    RESET           reduce using rule 28 (statement -> I2C_WRITE expression .)
    RESETDP         reduce using rule 28 (statement -> I2C_WRITE expression .)
    ON              reduce using rule 28 (statement -> I2C_WRITE expression .)
    OFF             reduce using rule 28 (statement -> I2C_WRITE expression .)
    THISWAY         reduce using rule 28 (statement -> I2C_WRITE expression .)
    THATWAY         reduce using rule 28 (statement -> I2C_WRITE expression .)
    RD              reduce using rule 28 (statement -> I2C_WRITE expression .)
    BRAKE           reduce using rule 28 (statement -> I2C_WRITE expression .)
    LEDON           reduce using rule 28 (statement -> I2C_WRITE expression .)
    LEDOFF          reduce using rule 28 (statement -> I2C_WRITE expression .)
    I2C_START       reduce using rule 28 (statement -> I2C_WRITE expression .)
    I2C_STOP        reduce using rule 28 (statement -> I2C_WRITE expression .)
    WHENOFF         reduce using rule 28 (statement -> I2C_WRITE expression .)
    MOTORATTENTION  reduce using rule 28 (statement -> I2C_WRITE expression .)
    BYTES           reduce using rule 28 (statement -> I2C_WRITE expression .)
    PROCEDURENAME   reduce using rule 28 (statement -> I2C_WRITE expression .)
    RBRACKET        reduce using rule 28 (statement -> I2C_WRITE expression .)
    END             reduce using rule 28 (statement -> I2C_WRITE expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 108

    (20) statement -> WAIT expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 20 (statement -> WAIT expression .)
    WHILE           reduce using rule 20 (statement -> WAIT expression .)
    LOOP            reduce using rule 20 (statement -> WAIT expression .)
    FOREVER         reduce using rule 20 (statement -> WAIT expression .)
    IF              reduce using rule 20 (statement -> WAIT expression .)
    IFELSE          reduce using rule 20 (statement -> WAIT expression .)
    WAITUNTIL       reduce using rule 20 (statement -> WAIT expression .)
    WHEN            reduce using rule 20 (statement -> WAIT expression .)
    SHOW            reduce using rule 20 (statement -> WAIT expression .)
    MAKE            reduce using rule 20 (statement -> WAIT expression .)
    WAIT            reduce using rule 20 (statement -> WAIT expression .)
    SEND            reduce using rule 20 (statement -> WAIT expression .)
    RECORD          reduce using rule 20 (statement -> WAIT expression .)
    ERASE           reduce using rule 20 (statement -> WAIT expression .)
    SETSVH          reduce using rule 20 (statement -> WAIT expression .)
    SVR             reduce using rule 20 (statement -> WAIT expression .)
    SVL             reduce using rule 20 (statement -> WAIT expression .)
    SETPOWER        reduce using rule 20 (statement -> WAIT expression .)
    I2C_WRITE       reduce using rule 20 (statement -> WAIT expression .)
    OUTPUT          reduce using rule 20 (statement -> WAIT expression .)
    ONFOR           reduce using rule 20 (statement -> WAIT expression .)
    BSEND           reduce using rule 20 (statement -> WAIT expression .)
    BSR             reduce using rule 20 (statement -> WAIT expression .)
    SETDP           reduce using rule 20 (statement -> WAIT expression .)
    FASTSEND        reduce using rule 20 (statement -> WAIT expression .)
    BEEP            reduce using rule 20 (statement -> WAIT expression .)
    STOP            reduce using rule 20 (statement -> WAIT expression .)
    RESET           reduce using rule 20 (statement -> WAIT expression .)
    RESETDP         reduce using rule 20 (statement -> WAIT expression .)
    ON              reduce using rule 20 (statement -> WAIT expression .)
    OFF             reduce using rule 20 (statement -> WAIT expression .)
    THISWAY         reduce using rule 20 (statement -> WAIT expression .)
    THATWAY         reduce using rule 20 (statement -> WAIT expression .)
    RD              reduce using rule 20 (statement -> WAIT expression .)
    BRAKE           reduce using rule 20 (statement -> WAIT expression .)
    LEDON           reduce using rule 20 (statement -> WAIT expression .)
    LEDOFF          reduce using rule 20 (statement -> WAIT expression .)
    I2C_START       reduce using rule 20 (statement -> WAIT expression .)
    I2C_STOP        reduce using rule 20 (statement -> WAIT expression .)
    WHENOFF         reduce using rule 20 (statement -> WAIT expression .)
    MOTORATTENTION  reduce using rule 20 (statement -> WAIT expression .)
    BYTES           reduce using rule 20 (statement -> WAIT expression .)
    PROCEDURENAME   reduce using rule 20 (statement -> WAIT expression .)
    RBRACKET        reduce using rule 20 (statement -> WAIT expression .)
    END             reduce using rule 20 (statement -> WAIT expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 109

    (31) statement -> BSEND expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 31 (statement -> BSEND expression .)
    WHILE           reduce using rule 31 (statement -> BSEND expression .)
    LOOP            reduce using rule 31 (statement -> BSEND expression .)
    FOREVER         reduce using rule 31 (statement -> BSEND expression .)
    IF              reduce using rule 31 (statement -> BSEND expression .)
    IFELSE          reduce using rule 31 (statement -> BSEND expression .)
    WAITUNTIL       reduce using rule 31 (statement -> BSEND expression .)
    WHEN            reduce using rule 31 (statement -> BSEND expression .)
    SHOW            reduce using rule 31 (statement -> BSEND expression .)
    MAKE            reduce using rule 31 (statement -> BSEND expression .)
    WAIT            reduce using rule 31 (statement -> BSEND expression .)
    SEND            reduce using rule 31 (statement -> BSEND expression .)
    RECORD          reduce using rule 31 (statement -> BSEND expression .)
    ERASE           reduce using rule 31 (statement -> BSEND expression .)
    SETSVH          reduce using rule 31 (statement -> BSEND expression .)
    SVR             reduce using rule 31 (statement -> BSEND expression .)
    SVL             reduce using rule 31 (statement -> BSEND expression .)
    SETPOWER        reduce using rule 31 (statement -> BSEND expression .)
    I2C_WRITE       reduce using rule 31 (statement -> BSEND expression .)
    OUTPUT          reduce using rule 31 (statement -> BSEND expression .)
    ONFOR           reduce using rule 31 (statement -> BSEND expression .)
    BSEND           reduce using rule 31 (statement -> BSEND expression .)
    BSR             reduce using rule 31 (statement -> BSEND expression .)
    SETDP           reduce using rule 31 (statement -> BSEND expression .)
    FASTSEND        reduce using rule 31 (statement -> BSEND expression .)
    BEEP            reduce using rule 31 (statement -> BSEND expression .)
    STOP            reduce using rule 31 (statement -> BSEND expression .)
    RESET           reduce using rule 31 (statement -> BSEND expression .)
    RESETDP         reduce using rule 31 (statement -> BSEND expression .)
    ON              reduce using rule 31 (statement -> BSEND expression .)
    OFF             reduce using rule 31 (statement -> BSEND expression .)
    THISWAY         reduce using rule 31 (statement -> BSEND expression .)
    THATWAY         reduce using rule 31 (statement -> BSEND expression .)
    RD              reduce using rule 31 (statement -> BSEND expression .)
    BRAKE           reduce using rule 31 (statement -> BSEND expression .)
    LEDON           reduce using rule 31 (statement -> BSEND expression .)
    LEDOFF          reduce using rule 31 (statement -> BSEND expression .)
    I2C_START       reduce using rule 31 (statement -> BSEND expression .)
    I2C_STOP        reduce using rule 31 (statement -> BSEND expression .)
    WHENOFF         reduce using rule 31 (statement -> BSEND expression .)
    MOTORATTENTION  reduce using rule 31 (statement -> BSEND expression .)
    BYTES           reduce using rule 31 (statement -> BSEND expression .)
    PROCEDURENAME   reduce using rule 31 (statement -> BSEND expression .)
    RBRACKET        reduce using rule 31 (statement -> BSEND expression .)
    END             reduce using rule 31 (statement -> BSEND expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 110

    (19) statement -> MAKE RECEIVER . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 142

state 111

    (21) statement -> SEND expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 21 (statement -> SEND expression .)
    WHILE           reduce using rule 21 (statement -> SEND expression .)
    LOOP            reduce using rule 21 (statement -> SEND expression .)
    FOREVER         reduce using rule 21 (statement -> SEND expression .)
    IF              reduce using rule 21 (statement -> SEND expression .)
    IFELSE          reduce using rule 21 (statement -> SEND expression .)
    WAITUNTIL       reduce using rule 21 (statement -> SEND expression .)
    WHEN            reduce using rule 21 (statement -> SEND expression .)
    SHOW            reduce using rule 21 (statement -> SEND expression .)
    MAKE            reduce using rule 21 (statement -> SEND expression .)
    WAIT            reduce using rule 21 (statement -> SEND expression .)
    SEND            reduce using rule 21 (statement -> SEND expression .)
    RECORD          reduce using rule 21 (statement -> SEND expression .)
    ERASE           reduce using rule 21 (statement -> SEND expression .)
    SETSVH          reduce using rule 21 (statement -> SEND expression .)
    SVR             reduce using rule 21 (statement -> SEND expression .)
    SVL             reduce using rule 21 (statement -> SEND expression .)
    SETPOWER        reduce using rule 21 (statement -> SEND expression .)
    I2C_WRITE       reduce using rule 21 (statement -> SEND expression .)
    OUTPUT          reduce using rule 21 (statement -> SEND expression .)
    ONFOR           reduce using rule 21 (statement -> SEND expression .)
    BSEND           reduce using rule 21 (statement -> SEND expression .)
    BSR             reduce using rule 21 (statement -> SEND expression .)
    SETDP           reduce using rule 21 (statement -> SEND expression .)
    FASTSEND        reduce using rule 21 (statement -> SEND expression .)
    BEEP            reduce using rule 21 (statement -> SEND expression .)
    STOP            reduce using rule 21 (statement -> SEND expression .)
    RESET           reduce using rule 21 (statement -> SEND expression .)
    RESETDP         reduce using rule 21 (statement -> SEND expression .)
    ON              reduce using rule 21 (statement -> SEND expression .)
    OFF             reduce using rule 21 (statement -> SEND expression .)
    THISWAY         reduce using rule 21 (statement -> SEND expression .)
    THATWAY         reduce using rule 21 (statement -> SEND expression .)
    RD              reduce using rule 21 (statement -> SEND expression .)
    BRAKE           reduce using rule 21 (statement -> SEND expression .)
    LEDON           reduce using rule 21 (statement -> SEND expression .)
    LEDOFF          reduce using rule 21 (statement -> SEND expression .)
    I2C_START       reduce using rule 21 (statement -> SEND expression .)
    I2C_STOP        reduce using rule 21 (statement -> SEND expression .)
    WHENOFF         reduce using rule 21 (statement -> SEND expression .)
    MOTORATTENTION  reduce using rule 21 (statement -> SEND expression .)
    BYTES           reduce using rule 21 (statement -> SEND expression .)
    PROCEDURENAME   reduce using rule 21 (statement -> SEND expression .)
    RBRACKET        reduce using rule 21 (statement -> SEND expression .)
    END             reduce using rule 21 (statement -> SEND expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 112

    (5) parameterDeclaration -> RECEIVER parameterDeclaration .

    REPEAT          reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    WHILE           reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    LOOP            reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    FOREVER         reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    IF              reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    IFELSE          reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    WAITUNTIL       reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    WHEN            reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    SHOW            reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    MAKE            reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    WAIT            reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    SEND            reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    RECORD          reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    ERASE           reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    SETSVH          reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    SVR             reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    SVL             reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    SETPOWER        reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    I2C_WRITE       reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    OUTPUT          reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    ONFOR           reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    BSEND           reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    BSR             reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    SETDP           reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    FASTSEND        reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    BEEP            reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    STOP            reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    RESET           reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    RESETDP         reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    ON              reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    OFF             reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    THISWAY         reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    THATWAY         reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    RD              reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    BRAKE           reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    LEDON           reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    LEDOFF          reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    I2C_START       reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    I2C_STOP        reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    WHENOFF         reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    MOTORATTENTION  reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    BYTES           reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)
    PROCEDURENAME   reduce using rule 5 (parameterDeclaration -> RECEIVER parameterDeclaration .)


state 113

    (15) statement -> WAITUNTIL LBRACKET . expression RBRACKET
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 143

state 114

    (29) statement -> OUTPUT expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 29 (statement -> OUTPUT expression .)
    WHILE           reduce using rule 29 (statement -> OUTPUT expression .)
    LOOP            reduce using rule 29 (statement -> OUTPUT expression .)
    FOREVER         reduce using rule 29 (statement -> OUTPUT expression .)
    IF              reduce using rule 29 (statement -> OUTPUT expression .)
    IFELSE          reduce using rule 29 (statement -> OUTPUT expression .)
    WAITUNTIL       reduce using rule 29 (statement -> OUTPUT expression .)
    WHEN            reduce using rule 29 (statement -> OUTPUT expression .)
    SHOW            reduce using rule 29 (statement -> OUTPUT expression .)
    MAKE            reduce using rule 29 (statement -> OUTPUT expression .)
    WAIT            reduce using rule 29 (statement -> OUTPUT expression .)
    SEND            reduce using rule 29 (statement -> OUTPUT expression .)
    RECORD          reduce using rule 29 (statement -> OUTPUT expression .)
    ERASE           reduce using rule 29 (statement -> OUTPUT expression .)
    SETSVH          reduce using rule 29 (statement -> OUTPUT expression .)
    SVR             reduce using rule 29 (statement -> OUTPUT expression .)
    SVL             reduce using rule 29 (statement -> OUTPUT expression .)
    SETPOWER        reduce using rule 29 (statement -> OUTPUT expression .)
    I2C_WRITE       reduce using rule 29 (statement -> OUTPUT expression .)
    OUTPUT          reduce using rule 29 (statement -> OUTPUT expression .)
    ONFOR           reduce using rule 29 (statement -> OUTPUT expression .)
    BSEND           reduce using rule 29 (statement -> OUTPUT expression .)
    BSR             reduce using rule 29 (statement -> OUTPUT expression .)
    SETDP           reduce using rule 29 (statement -> OUTPUT expression .)
    FASTSEND        reduce using rule 29 (statement -> OUTPUT expression .)
    BEEP            reduce using rule 29 (statement -> OUTPUT expression .)
    STOP            reduce using rule 29 (statement -> OUTPUT expression .)
    RESET           reduce using rule 29 (statement -> OUTPUT expression .)
    RESETDP         reduce using rule 29 (statement -> OUTPUT expression .)
    ON              reduce using rule 29 (statement -> OUTPUT expression .)
    OFF             reduce using rule 29 (statement -> OUTPUT expression .)
    THISWAY         reduce using rule 29 (statement -> OUTPUT expression .)
    THATWAY         reduce using rule 29 (statement -> OUTPUT expression .)
    RD              reduce using rule 29 (statement -> OUTPUT expression .)
    BRAKE           reduce using rule 29 (statement -> OUTPUT expression .)
    LEDON           reduce using rule 29 (statement -> OUTPUT expression .)
    LEDOFF          reduce using rule 29 (statement -> OUTPUT expression .)
    I2C_START       reduce using rule 29 (statement -> OUTPUT expression .)
    I2C_STOP        reduce using rule 29 (statement -> OUTPUT expression .)
    WHENOFF         reduce using rule 29 (statement -> OUTPUT expression .)
    MOTORATTENTION  reduce using rule 29 (statement -> OUTPUT expression .)
    BYTES           reduce using rule 29 (statement -> OUTPUT expression .)
    PROCEDURENAME   reduce using rule 29 (statement -> OUTPUT expression .)
    RBRACKET        reduce using rule 29 (statement -> OUTPUT expression .)
    END             reduce using rule 29 (statement -> OUTPUT expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 115

    (11) statement -> LOOP LBRACKET . statements RBRACKET
    (7) statements -> . statement statements
    (8) statements -> . statement
    (9) statement -> . REPEAT expression LBRACKET statements RBRACKET
    (10) statement -> . WHILE expression LBRACKET statements RBRACKET
    (11) statement -> . LOOP LBRACKET statements RBRACKET
    (12) statement -> . FOREVER LBRACKET statements RBRACKET
    (13) statement -> . IF expression LBRACKET statements RBRACKET
    (14) statement -> . IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET
    (15) statement -> . WAITUNTIL LBRACKET expression RBRACKET
    (16) statement -> . WHEN expression LBRACKET expression RBRACKET
    (17) statement -> . SHOW expression
    (18) statement -> . SHOW RECEIVER
    (19) statement -> . MAKE RECEIVER expression
    (20) statement -> . WAIT expression
    (21) statement -> . SEND expression
    (22) statement -> . RECORD expression
    (23) statement -> . ERASE expression
    (24) statement -> . SETSVH expression
    (25) statement -> . SVR expression
    (26) statement -> . SVL expression
    (27) statement -> . SETPOWER expression
    (28) statement -> . I2C_WRITE expression
    (29) statement -> . OUTPUT expression
    (30) statement -> . ONFOR expression
    (31) statement -> . BSEND expression
    (32) statement -> . BSR expression
    (33) statement -> . SETDP expression
    (34) statement -> . FASTSEND expression
    (35) statement -> . BEEP
    (36) statement -> . STOP
    (37) statement -> . RESET
    (38) statement -> . RESETDP
    (39) statement -> . ON
    (40) statement -> . OFF
    (41) statement -> . THISWAY
    (42) statement -> . THATWAY
    (43) statement -> . RD
    (44) statement -> . BRAKE
    (45) statement -> . LEDON
    (46) statement -> . LEDOFF
    (47) statement -> . I2C_START
    (48) statement -> . I2C_STOP
    (49) statement -> . WHENOFF
    (50) statement -> . procedurecall
    (51) statement -> . MOTORATTENTION
    (52) statement -> . BYTES
    (96) procedurecall -> . PROCEDURENAME parm
    (97) procedurecall -> . PROCEDURENAME

    REPEAT          shift and go to state 32
    WHILE           shift and go to state 13
    LOOP            shift and go to state 53
    FOREVER         shift and go to state 7
    IF              shift and go to state 28
    IFELSE          shift and go to state 25
    WAITUNTIL       shift and go to state 51
    WHEN            shift and go to state 21
    SHOW            shift and go to state 20
    MAKE            shift and go to state 45
    WAIT            shift and go to state 41
    SEND            shift and go to state 47
    RECORD          shift and go to state 19
    ERASE           shift and go to state 24
    SETSVH          shift and go to state 18
    SVR             shift and go to state 39
    SVL             shift and go to state 31
    SETPOWER        shift and go to state 10
    I2C_WRITE       shift and go to state 40
    OUTPUT          shift and go to state 52
    ONFOR           shift and go to state 37
    BSEND           shift and go to state 42
    BSR             shift and go to state 22
    SETDP           shift and go to state 27
    FASTSEND        shift and go to state 14
    BEEP            shift and go to state 48
    STOP            shift and go to state 11
    RESET           shift and go to state 6
    RESETDP         shift and go to state 33
    ON              shift and go to state 15
    OFF             shift and go to state 16
    THISWAY         shift and go to state 49
    THATWAY         shift and go to state 36
    RD              shift and go to state 23
    BRAKE           shift and go to state 38
    LEDON           shift and go to state 43
    LEDOFF          shift and go to state 9
    I2C_START       shift and go to state 46
    I2C_STOP        shift and go to state 17
    WHENOFF         shift and go to state 44
    MOTORATTENTION  shift and go to state 30
    BYTES           shift and go to state 35
    PROCEDURENAME   shift and go to state 12

    statements                     shift and go to state 144
    procedurecall                  shift and go to state 29
    statement                      shift and go to state 26

state 116

    (12) statement -> FOREVER LBRACKET statements . RBRACKET

    RBRACKET        shift and go to state 145


state 117

    (68) expression -> LBRACKET expression . RBRACKET
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    RBRACKET        shift and go to state 146
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 118

    (65) expression -> MINUS expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    AND             reduce using rule 65 (expression -> MINUS expression .)
    OR              reduce using rule 65 (expression -> MINUS expression .)
    XOR             reduce using rule 65 (expression -> MINUS expression .)
    LESSTHAN        reduce using rule 65 (expression -> MINUS expression .)
    GREATERTHAN     reduce using rule 65 (expression -> MINUS expression .)
    EQUALS          reduce using rule 65 (expression -> MINUS expression .)
    PLUS            reduce using rule 65 (expression -> MINUS expression .)
    MINUS           reduce using rule 65 (expression -> MINUS expression .)
    TIMES           reduce using rule 65 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 65 (expression -> MINUS expression .)
    PERCENT         reduce using rule 65 (expression -> MINUS expression .)
    REPEAT          reduce using rule 65 (expression -> MINUS expression .)
    WHILE           reduce using rule 65 (expression -> MINUS expression .)
    LOOP            reduce using rule 65 (expression -> MINUS expression .)
    FOREVER         reduce using rule 65 (expression -> MINUS expression .)
    IF              reduce using rule 65 (expression -> MINUS expression .)
    IFELSE          reduce using rule 65 (expression -> MINUS expression .)
    WAITUNTIL       reduce using rule 65 (expression -> MINUS expression .)
    WHEN            reduce using rule 65 (expression -> MINUS expression .)
    SHOW            reduce using rule 65 (expression -> MINUS expression .)
    MAKE            reduce using rule 65 (expression -> MINUS expression .)
    WAIT            reduce using rule 65 (expression -> MINUS expression .)
    SEND            reduce using rule 65 (expression -> MINUS expression .)
    RECORD          reduce using rule 65 (expression -> MINUS expression .)
    ERASE           reduce using rule 65 (expression -> MINUS expression .)
    SETSVH          reduce using rule 65 (expression -> MINUS expression .)
    SVR             reduce using rule 65 (expression -> MINUS expression .)
    SVL             reduce using rule 65 (expression -> MINUS expression .)
    SETPOWER        reduce using rule 65 (expression -> MINUS expression .)
    I2C_WRITE       reduce using rule 65 (expression -> MINUS expression .)
    OUTPUT          reduce using rule 65 (expression -> MINUS expression .)
    ONFOR           reduce using rule 65 (expression -> MINUS expression .)
    BSEND           reduce using rule 65 (expression -> MINUS expression .)
    BSR             reduce using rule 65 (expression -> MINUS expression .)
    SETDP           reduce using rule 65 (expression -> MINUS expression .)
    FASTSEND        reduce using rule 65 (expression -> MINUS expression .)
    BEEP            reduce using rule 65 (expression -> MINUS expression .)
    STOP            reduce using rule 65 (expression -> MINUS expression .)
    RESET           reduce using rule 65 (expression -> MINUS expression .)
    RESETDP         reduce using rule 65 (expression -> MINUS expression .)
    ON              reduce using rule 65 (expression -> MINUS expression .)
    OFF             reduce using rule 65 (expression -> MINUS expression .)
    THISWAY         reduce using rule 65 (expression -> MINUS expression .)
    THATWAY         reduce using rule 65 (expression -> MINUS expression .)
    RD              reduce using rule 65 (expression -> MINUS expression .)
    BRAKE           reduce using rule 65 (expression -> MINUS expression .)
    LEDON           reduce using rule 65 (expression -> MINUS expression .)
    LEDOFF          reduce using rule 65 (expression -> MINUS expression .)
    I2C_START       reduce using rule 65 (expression -> MINUS expression .)
    I2C_STOP        reduce using rule 65 (expression -> MINUS expression .)
    WHENOFF         reduce using rule 65 (expression -> MINUS expression .)
    MOTORATTENTION  reduce using rule 65 (expression -> MINUS expression .)
    BYTES           reduce using rule 65 (expression -> MINUS expression .)
    PROCEDURENAME   reduce using rule 65 (expression -> MINUS expression .)
    END             reduce using rule 65 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 65 (expression -> MINUS expression .)
    REPORTER        reduce using rule 65 (expression -> MINUS expression .)
    NOT             reduce using rule 65 (expression -> MINUS expression .)
    LPAREN          reduce using rule 65 (expression -> MINUS expression .)
    LBRACKET        reduce using rule 65 (expression -> MINUS expression .)
    I2C_READ        reduce using rule 65 (expression -> MINUS expression .)
    HIGHBYTE        reduce using rule 65 (expression -> MINUS expression .)
    LOWBYTE         reduce using rule 65 (expression -> MINUS expression .)
    NUMBERLITERAL   reduce using rule 65 (expression -> MINUS expression .)
    TIMER           reduce using rule 65 (expression -> MINUS expression .)
    RANDOM          reduce using rule 65 (expression -> MINUS expression .)
    RECALL          reduce using rule 65 (expression -> MINUS expression .)
    SENSOR1         reduce using rule 65 (expression -> MINUS expression .)
    SENSOR2         reduce using rule 65 (expression -> MINUS expression .)
    SENSOR3         reduce using rule 65 (expression -> MINUS expression .)
    SENSOR4         reduce using rule 65 (expression -> MINUS expression .)
    SENSOR5         reduce using rule 65 (expression -> MINUS expression .)
    SENSOR6         reduce using rule 65 (expression -> MINUS expression .)
    SENSOR7         reduce using rule 65 (expression -> MINUS expression .)
    SENSOR8         reduce using rule 65 (expression -> MINUS expression .)
    SWITCH1         reduce using rule 65 (expression -> MINUS expression .)
    SWITCH2         reduce using rule 65 (expression -> MINUS expression .)
    SWITCH3         reduce using rule 65 (expression -> MINUS expression .)
    SWITCH4         reduce using rule 65 (expression -> MINUS expression .)
    SWITCH5         reduce using rule 65 (expression -> MINUS expression .)
    SWITCH6         reduce using rule 65 (expression -> MINUS expression .)
    SWITCH7         reduce using rule 65 (expression -> MINUS expression .)
    SWITCH8         reduce using rule 65 (expression -> MINUS expression .)
    NEWIRQ          reduce using rule 65 (expression -> MINUS expression .)
    SERIAL          reduce using rule 65 (expression -> MINUS expression .)
    RPAREN          reduce using rule 65 (expression -> MINUS expression .)

  ! AND             [ shift and go to state 124 ]
  ! OR              [ shift and go to state 134 ]
  ! XOR             [ shift and go to state 125 ]
  ! LESSTHAN        [ shift and go to state 130 ]
  ! GREATERTHAN     [ shift and go to state 131 ]
  ! EQUALS          [ shift and go to state 128 ]
  ! PLUS            [ shift and go to state 132 ]
  ! MINUS           [ shift and go to state 129 ]
  ! TIMES           [ shift and go to state 133 ]
  ! DIVIDE          [ shift and go to state 126 ]
  ! PERCENT         [ shift and go to state 127 ]


state 119

    (70) expression -> HIGHBYTE expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    REPEAT          reduce using rule 70 (expression -> HIGHBYTE expression .)
    WHILE           reduce using rule 70 (expression -> HIGHBYTE expression .)
    LOOP            reduce using rule 70 (expression -> HIGHBYTE expression .)
    FOREVER         reduce using rule 70 (expression -> HIGHBYTE expression .)
    IF              reduce using rule 70 (expression -> HIGHBYTE expression .)
    IFELSE          reduce using rule 70 (expression -> HIGHBYTE expression .)
    WAITUNTIL       reduce using rule 70 (expression -> HIGHBYTE expression .)
    WHEN            reduce using rule 70 (expression -> HIGHBYTE expression .)
    SHOW            reduce using rule 70 (expression -> HIGHBYTE expression .)
    MAKE            reduce using rule 70 (expression -> HIGHBYTE expression .)
    WAIT            reduce using rule 70 (expression -> HIGHBYTE expression .)
    SEND            reduce using rule 70 (expression -> HIGHBYTE expression .)
    RECORD          reduce using rule 70 (expression -> HIGHBYTE expression .)
    ERASE           reduce using rule 70 (expression -> HIGHBYTE expression .)
    SETSVH          reduce using rule 70 (expression -> HIGHBYTE expression .)
    SVR             reduce using rule 70 (expression -> HIGHBYTE expression .)
    SVL             reduce using rule 70 (expression -> HIGHBYTE expression .)
    SETPOWER        reduce using rule 70 (expression -> HIGHBYTE expression .)
    I2C_WRITE       reduce using rule 70 (expression -> HIGHBYTE expression .)
    OUTPUT          reduce using rule 70 (expression -> HIGHBYTE expression .)
    ONFOR           reduce using rule 70 (expression -> HIGHBYTE expression .)
    BSEND           reduce using rule 70 (expression -> HIGHBYTE expression .)
    BSR             reduce using rule 70 (expression -> HIGHBYTE expression .)
    SETDP           reduce using rule 70 (expression -> HIGHBYTE expression .)
    FASTSEND        reduce using rule 70 (expression -> HIGHBYTE expression .)
    BEEP            reduce using rule 70 (expression -> HIGHBYTE expression .)
    STOP            reduce using rule 70 (expression -> HIGHBYTE expression .)
    RESET           reduce using rule 70 (expression -> HIGHBYTE expression .)
    RESETDP         reduce using rule 70 (expression -> HIGHBYTE expression .)
    ON              reduce using rule 70 (expression -> HIGHBYTE expression .)
    OFF             reduce using rule 70 (expression -> HIGHBYTE expression .)
    THISWAY         reduce using rule 70 (expression -> HIGHBYTE expression .)
    THATWAY         reduce using rule 70 (expression -> HIGHBYTE expression .)
    RD              reduce using rule 70 (expression -> HIGHBYTE expression .)
    BRAKE           reduce using rule 70 (expression -> HIGHBYTE expression .)
    LEDON           reduce using rule 70 (expression -> HIGHBYTE expression .)
    LEDOFF          reduce using rule 70 (expression -> HIGHBYTE expression .)
    I2C_START       reduce using rule 70 (expression -> HIGHBYTE expression .)
    I2C_STOP        reduce using rule 70 (expression -> HIGHBYTE expression .)
    WHENOFF         reduce using rule 70 (expression -> HIGHBYTE expression .)
    MOTORATTENTION  reduce using rule 70 (expression -> HIGHBYTE expression .)
    BYTES           reduce using rule 70 (expression -> HIGHBYTE expression .)
    PROCEDURENAME   reduce using rule 70 (expression -> HIGHBYTE expression .)
    END             reduce using rule 70 (expression -> HIGHBYTE expression .)
    RBRACKET        reduce using rule 70 (expression -> HIGHBYTE expression .)
    REPORTER        reduce using rule 70 (expression -> HIGHBYTE expression .)
    NOT             reduce using rule 70 (expression -> HIGHBYTE expression .)
    LPAREN          reduce using rule 70 (expression -> HIGHBYTE expression .)
    LBRACKET        reduce using rule 70 (expression -> HIGHBYTE expression .)
    I2C_READ        reduce using rule 70 (expression -> HIGHBYTE expression .)
    HIGHBYTE        reduce using rule 70 (expression -> HIGHBYTE expression .)
    LOWBYTE         reduce using rule 70 (expression -> HIGHBYTE expression .)
    NUMBERLITERAL   reduce using rule 70 (expression -> HIGHBYTE expression .)
    TIMER           reduce using rule 70 (expression -> HIGHBYTE expression .)
    RANDOM          reduce using rule 70 (expression -> HIGHBYTE expression .)
    RECALL          reduce using rule 70 (expression -> HIGHBYTE expression .)
    SENSOR1         reduce using rule 70 (expression -> HIGHBYTE expression .)
    SENSOR2         reduce using rule 70 (expression -> HIGHBYTE expression .)
    SENSOR3         reduce using rule 70 (expression -> HIGHBYTE expression .)
    SENSOR4         reduce using rule 70 (expression -> HIGHBYTE expression .)
    SENSOR5         reduce using rule 70 (expression -> HIGHBYTE expression .)
    SENSOR6         reduce using rule 70 (expression -> HIGHBYTE expression .)
    SENSOR7         reduce using rule 70 (expression -> HIGHBYTE expression .)
    SENSOR8         reduce using rule 70 (expression -> HIGHBYTE expression .)
    SWITCH1         reduce using rule 70 (expression -> HIGHBYTE expression .)
    SWITCH2         reduce using rule 70 (expression -> HIGHBYTE expression .)
    SWITCH3         reduce using rule 70 (expression -> HIGHBYTE expression .)
    SWITCH4         reduce using rule 70 (expression -> HIGHBYTE expression .)
    SWITCH5         reduce using rule 70 (expression -> HIGHBYTE expression .)
    SWITCH6         reduce using rule 70 (expression -> HIGHBYTE expression .)
    SWITCH7         reduce using rule 70 (expression -> HIGHBYTE expression .)
    SWITCH8         reduce using rule 70 (expression -> HIGHBYTE expression .)
    NEWIRQ          reduce using rule 70 (expression -> HIGHBYTE expression .)
    SERIAL          reduce using rule 70 (expression -> HIGHBYTE expression .)
    RPAREN          reduce using rule 70 (expression -> HIGHBYTE expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127

  ! AND             [ reduce using rule 70 (expression -> HIGHBYTE expression .) ]
  ! OR              [ reduce using rule 70 (expression -> HIGHBYTE expression .) ]
  ! XOR             [ reduce using rule 70 (expression -> HIGHBYTE expression .) ]
  ! LESSTHAN        [ reduce using rule 70 (expression -> HIGHBYTE expression .) ]
  ! GREATERTHAN     [ reduce using rule 70 (expression -> HIGHBYTE expression .) ]
  ! EQUALS          [ reduce using rule 70 (expression -> HIGHBYTE expression .) ]
  ! PLUS            [ reduce using rule 70 (expression -> HIGHBYTE expression .) ]
  ! MINUS           [ reduce using rule 70 (expression -> HIGHBYTE expression .) ]
  ! TIMES           [ reduce using rule 70 (expression -> HIGHBYTE expression .) ]
  ! DIVIDE          [ reduce using rule 70 (expression -> HIGHBYTE expression .) ]
  ! PERCENT         [ reduce using rule 70 (expression -> HIGHBYTE expression .) ]


state 120

    (67) expression -> LPAREN expression . RPAREN
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    RPAREN          shift and go to state 147
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 121

    (71) expression -> LOWBYTE expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    REPEAT          reduce using rule 71 (expression -> LOWBYTE expression .)
    WHILE           reduce using rule 71 (expression -> LOWBYTE expression .)
    LOOP            reduce using rule 71 (expression -> LOWBYTE expression .)
    FOREVER         reduce using rule 71 (expression -> LOWBYTE expression .)
    IF              reduce using rule 71 (expression -> LOWBYTE expression .)
    IFELSE          reduce using rule 71 (expression -> LOWBYTE expression .)
    WAITUNTIL       reduce using rule 71 (expression -> LOWBYTE expression .)
    WHEN            reduce using rule 71 (expression -> LOWBYTE expression .)
    SHOW            reduce using rule 71 (expression -> LOWBYTE expression .)
    MAKE            reduce using rule 71 (expression -> LOWBYTE expression .)
    WAIT            reduce using rule 71 (expression -> LOWBYTE expression .)
    SEND            reduce using rule 71 (expression -> LOWBYTE expression .)
    RECORD          reduce using rule 71 (expression -> LOWBYTE expression .)
    ERASE           reduce using rule 71 (expression -> LOWBYTE expression .)
    SETSVH          reduce using rule 71 (expression -> LOWBYTE expression .)
    SVR             reduce using rule 71 (expression -> LOWBYTE expression .)
    SVL             reduce using rule 71 (expression -> LOWBYTE expression .)
    SETPOWER        reduce using rule 71 (expression -> LOWBYTE expression .)
    I2C_WRITE       reduce using rule 71 (expression -> LOWBYTE expression .)
    OUTPUT          reduce using rule 71 (expression -> LOWBYTE expression .)
    ONFOR           reduce using rule 71 (expression -> LOWBYTE expression .)
    BSEND           reduce using rule 71 (expression -> LOWBYTE expression .)
    BSR             reduce using rule 71 (expression -> LOWBYTE expression .)
    SETDP           reduce using rule 71 (expression -> LOWBYTE expression .)
    FASTSEND        reduce using rule 71 (expression -> LOWBYTE expression .)
    BEEP            reduce using rule 71 (expression -> LOWBYTE expression .)
    STOP            reduce using rule 71 (expression -> LOWBYTE expression .)
    RESET           reduce using rule 71 (expression -> LOWBYTE expression .)
    RESETDP         reduce using rule 71 (expression -> LOWBYTE expression .)
    ON              reduce using rule 71 (expression -> LOWBYTE expression .)
    OFF             reduce using rule 71 (expression -> LOWBYTE expression .)
    THISWAY         reduce using rule 71 (expression -> LOWBYTE expression .)
    THATWAY         reduce using rule 71 (expression -> LOWBYTE expression .)
    RD              reduce using rule 71 (expression -> LOWBYTE expression .)
    BRAKE           reduce using rule 71 (expression -> LOWBYTE expression .)
    LEDON           reduce using rule 71 (expression -> LOWBYTE expression .)
    LEDOFF          reduce using rule 71 (expression -> LOWBYTE expression .)
    I2C_START       reduce using rule 71 (expression -> LOWBYTE expression .)
    I2C_STOP        reduce using rule 71 (expression -> LOWBYTE expression .)
    WHENOFF         reduce using rule 71 (expression -> LOWBYTE expression .)
    MOTORATTENTION  reduce using rule 71 (expression -> LOWBYTE expression .)
    BYTES           reduce using rule 71 (expression -> LOWBYTE expression .)
    PROCEDURENAME   reduce using rule 71 (expression -> LOWBYTE expression .)
    END             reduce using rule 71 (expression -> LOWBYTE expression .)
    RBRACKET        reduce using rule 71 (expression -> LOWBYTE expression .)
    REPORTER        reduce using rule 71 (expression -> LOWBYTE expression .)
    NOT             reduce using rule 71 (expression -> LOWBYTE expression .)
    LPAREN          reduce using rule 71 (expression -> LOWBYTE expression .)
    LBRACKET        reduce using rule 71 (expression -> LOWBYTE expression .)
    I2C_READ        reduce using rule 71 (expression -> LOWBYTE expression .)
    HIGHBYTE        reduce using rule 71 (expression -> LOWBYTE expression .)
    LOWBYTE         reduce using rule 71 (expression -> LOWBYTE expression .)
    NUMBERLITERAL   reduce using rule 71 (expression -> LOWBYTE expression .)
    TIMER           reduce using rule 71 (expression -> LOWBYTE expression .)
    RANDOM          reduce using rule 71 (expression -> LOWBYTE expression .)
    RECALL          reduce using rule 71 (expression -> LOWBYTE expression .)
    SENSOR1         reduce using rule 71 (expression -> LOWBYTE expression .)
    SENSOR2         reduce using rule 71 (expression -> LOWBYTE expression .)
    SENSOR3         reduce using rule 71 (expression -> LOWBYTE expression .)
    SENSOR4         reduce using rule 71 (expression -> LOWBYTE expression .)
    SENSOR5         reduce using rule 71 (expression -> LOWBYTE expression .)
    SENSOR6         reduce using rule 71 (expression -> LOWBYTE expression .)
    SENSOR7         reduce using rule 71 (expression -> LOWBYTE expression .)
    SENSOR8         reduce using rule 71 (expression -> LOWBYTE expression .)
    SWITCH1         reduce using rule 71 (expression -> LOWBYTE expression .)
    SWITCH2         reduce using rule 71 (expression -> LOWBYTE expression .)
    SWITCH3         reduce using rule 71 (expression -> LOWBYTE expression .)
    SWITCH4         reduce using rule 71 (expression -> LOWBYTE expression .)
    SWITCH5         reduce using rule 71 (expression -> LOWBYTE expression .)
    SWITCH6         reduce using rule 71 (expression -> LOWBYTE expression .)
    SWITCH7         reduce using rule 71 (expression -> LOWBYTE expression .)
    SWITCH8         reduce using rule 71 (expression -> LOWBYTE expression .)
    NEWIRQ          reduce using rule 71 (expression -> LOWBYTE expression .)
    SERIAL          reduce using rule 71 (expression -> LOWBYTE expression .)
    RPAREN          reduce using rule 71 (expression -> LOWBYTE expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127

  ! AND             [ reduce using rule 71 (expression -> LOWBYTE expression .) ]
  ! OR              [ reduce using rule 71 (expression -> LOWBYTE expression .) ]
  ! XOR             [ reduce using rule 71 (expression -> LOWBYTE expression .) ]
  ! LESSTHAN        [ reduce using rule 71 (expression -> LOWBYTE expression .) ]
  ! GREATERTHAN     [ reduce using rule 71 (expression -> LOWBYTE expression .) ]
  ! EQUALS          [ reduce using rule 71 (expression -> LOWBYTE expression .) ]
  ! PLUS            [ reduce using rule 71 (expression -> LOWBYTE expression .) ]
  ! MINUS           [ reduce using rule 71 (expression -> LOWBYTE expression .) ]
  ! TIMES           [ reduce using rule 71 (expression -> LOWBYTE expression .) ]
  ! DIVIDE          [ reduce using rule 71 (expression -> LOWBYTE expression .) ]
  ! PERCENT         [ reduce using rule 71 (expression -> LOWBYTE expression .) ]


state 122

    (69) expression -> I2C_READ expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    REPEAT          reduce using rule 69 (expression -> I2C_READ expression .)
    WHILE           reduce using rule 69 (expression -> I2C_READ expression .)
    LOOP            reduce using rule 69 (expression -> I2C_READ expression .)
    FOREVER         reduce using rule 69 (expression -> I2C_READ expression .)
    IF              reduce using rule 69 (expression -> I2C_READ expression .)
    IFELSE          reduce using rule 69 (expression -> I2C_READ expression .)
    WAITUNTIL       reduce using rule 69 (expression -> I2C_READ expression .)
    WHEN            reduce using rule 69 (expression -> I2C_READ expression .)
    SHOW            reduce using rule 69 (expression -> I2C_READ expression .)
    MAKE            reduce using rule 69 (expression -> I2C_READ expression .)
    WAIT            reduce using rule 69 (expression -> I2C_READ expression .)
    SEND            reduce using rule 69 (expression -> I2C_READ expression .)
    RECORD          reduce using rule 69 (expression -> I2C_READ expression .)
    ERASE           reduce using rule 69 (expression -> I2C_READ expression .)
    SETSVH          reduce using rule 69 (expression -> I2C_READ expression .)
    SVR             reduce using rule 69 (expression -> I2C_READ expression .)
    SVL             reduce using rule 69 (expression -> I2C_READ expression .)
    SETPOWER        reduce using rule 69 (expression -> I2C_READ expression .)
    I2C_WRITE       reduce using rule 69 (expression -> I2C_READ expression .)
    OUTPUT          reduce using rule 69 (expression -> I2C_READ expression .)
    ONFOR           reduce using rule 69 (expression -> I2C_READ expression .)
    BSEND           reduce using rule 69 (expression -> I2C_READ expression .)
    BSR             reduce using rule 69 (expression -> I2C_READ expression .)
    SETDP           reduce using rule 69 (expression -> I2C_READ expression .)
    FASTSEND        reduce using rule 69 (expression -> I2C_READ expression .)
    BEEP            reduce using rule 69 (expression -> I2C_READ expression .)
    STOP            reduce using rule 69 (expression -> I2C_READ expression .)
    RESET           reduce using rule 69 (expression -> I2C_READ expression .)
    RESETDP         reduce using rule 69 (expression -> I2C_READ expression .)
    ON              reduce using rule 69 (expression -> I2C_READ expression .)
    OFF             reduce using rule 69 (expression -> I2C_READ expression .)
    THISWAY         reduce using rule 69 (expression -> I2C_READ expression .)
    THATWAY         reduce using rule 69 (expression -> I2C_READ expression .)
    RD              reduce using rule 69 (expression -> I2C_READ expression .)
    BRAKE           reduce using rule 69 (expression -> I2C_READ expression .)
    LEDON           reduce using rule 69 (expression -> I2C_READ expression .)
    LEDOFF          reduce using rule 69 (expression -> I2C_READ expression .)
    I2C_START       reduce using rule 69 (expression -> I2C_READ expression .)
    I2C_STOP        reduce using rule 69 (expression -> I2C_READ expression .)
    WHENOFF         reduce using rule 69 (expression -> I2C_READ expression .)
    MOTORATTENTION  reduce using rule 69 (expression -> I2C_READ expression .)
    BYTES           reduce using rule 69 (expression -> I2C_READ expression .)
    PROCEDURENAME   reduce using rule 69 (expression -> I2C_READ expression .)
    END             reduce using rule 69 (expression -> I2C_READ expression .)
    RBRACKET        reduce using rule 69 (expression -> I2C_READ expression .)
    REPORTER        reduce using rule 69 (expression -> I2C_READ expression .)
    NOT             reduce using rule 69 (expression -> I2C_READ expression .)
    LPAREN          reduce using rule 69 (expression -> I2C_READ expression .)
    LBRACKET        reduce using rule 69 (expression -> I2C_READ expression .)
    I2C_READ        reduce using rule 69 (expression -> I2C_READ expression .)
    HIGHBYTE        reduce using rule 69 (expression -> I2C_READ expression .)
    LOWBYTE         reduce using rule 69 (expression -> I2C_READ expression .)
    NUMBERLITERAL   reduce using rule 69 (expression -> I2C_READ expression .)
    TIMER           reduce using rule 69 (expression -> I2C_READ expression .)
    RANDOM          reduce using rule 69 (expression -> I2C_READ expression .)
    RECALL          reduce using rule 69 (expression -> I2C_READ expression .)
    SENSOR1         reduce using rule 69 (expression -> I2C_READ expression .)
    SENSOR2         reduce using rule 69 (expression -> I2C_READ expression .)
    SENSOR3         reduce using rule 69 (expression -> I2C_READ expression .)
    SENSOR4         reduce using rule 69 (expression -> I2C_READ expression .)
    SENSOR5         reduce using rule 69 (expression -> I2C_READ expression .)
    SENSOR6         reduce using rule 69 (expression -> I2C_READ expression .)
    SENSOR7         reduce using rule 69 (expression -> I2C_READ expression .)
    SENSOR8         reduce using rule 69 (expression -> I2C_READ expression .)
    SWITCH1         reduce using rule 69 (expression -> I2C_READ expression .)
    SWITCH2         reduce using rule 69 (expression -> I2C_READ expression .)
    SWITCH3         reduce using rule 69 (expression -> I2C_READ expression .)
    SWITCH4         reduce using rule 69 (expression -> I2C_READ expression .)
    SWITCH5         reduce using rule 69 (expression -> I2C_READ expression .)
    SWITCH6         reduce using rule 69 (expression -> I2C_READ expression .)
    SWITCH7         reduce using rule 69 (expression -> I2C_READ expression .)
    SWITCH8         reduce using rule 69 (expression -> I2C_READ expression .)
    NEWIRQ          reduce using rule 69 (expression -> I2C_READ expression .)
    SERIAL          reduce using rule 69 (expression -> I2C_READ expression .)
    RPAREN          reduce using rule 69 (expression -> I2C_READ expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127

  ! AND             [ reduce using rule 69 (expression -> I2C_READ expression .) ]
  ! OR              [ reduce using rule 69 (expression -> I2C_READ expression .) ]
  ! XOR             [ reduce using rule 69 (expression -> I2C_READ expression .) ]
  ! LESSTHAN        [ reduce using rule 69 (expression -> I2C_READ expression .) ]
  ! GREATERTHAN     [ reduce using rule 69 (expression -> I2C_READ expression .) ]
  ! EQUALS          [ reduce using rule 69 (expression -> I2C_READ expression .) ]
  ! PLUS            [ reduce using rule 69 (expression -> I2C_READ expression .) ]
  ! MINUS           [ reduce using rule 69 (expression -> I2C_READ expression .) ]
  ! TIMES           [ reduce using rule 69 (expression -> I2C_READ expression .) ]
  ! DIVIDE          [ reduce using rule 69 (expression -> I2C_READ expression .) ]
  ! PERCENT         [ reduce using rule 69 (expression -> I2C_READ expression .) ]


state 123

    (66) expression -> NOT expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    AND             reduce using rule 66 (expression -> NOT expression .)
    OR              reduce using rule 66 (expression -> NOT expression .)
    XOR             reduce using rule 66 (expression -> NOT expression .)
    LESSTHAN        reduce using rule 66 (expression -> NOT expression .)
    GREATERTHAN     reduce using rule 66 (expression -> NOT expression .)
    EQUALS          reduce using rule 66 (expression -> NOT expression .)
    PLUS            reduce using rule 66 (expression -> NOT expression .)
    MINUS           reduce using rule 66 (expression -> NOT expression .)
    TIMES           reduce using rule 66 (expression -> NOT expression .)
    DIVIDE          reduce using rule 66 (expression -> NOT expression .)
    PERCENT         reduce using rule 66 (expression -> NOT expression .)
    REPEAT          reduce using rule 66 (expression -> NOT expression .)
    WHILE           reduce using rule 66 (expression -> NOT expression .)
    LOOP            reduce using rule 66 (expression -> NOT expression .)
    FOREVER         reduce using rule 66 (expression -> NOT expression .)
    IF              reduce using rule 66 (expression -> NOT expression .)
    IFELSE          reduce using rule 66 (expression -> NOT expression .)
    WAITUNTIL       reduce using rule 66 (expression -> NOT expression .)
    WHEN            reduce using rule 66 (expression -> NOT expression .)
    SHOW            reduce using rule 66 (expression -> NOT expression .)
    MAKE            reduce using rule 66 (expression -> NOT expression .)
    WAIT            reduce using rule 66 (expression -> NOT expression .)
    SEND            reduce using rule 66 (expression -> NOT expression .)
    RECORD          reduce using rule 66 (expression -> NOT expression .)
    ERASE           reduce using rule 66 (expression -> NOT expression .)
    SETSVH          reduce using rule 66 (expression -> NOT expression .)
    SVR             reduce using rule 66 (expression -> NOT expression .)
    SVL             reduce using rule 66 (expression -> NOT expression .)
    SETPOWER        reduce using rule 66 (expression -> NOT expression .)
    I2C_WRITE       reduce using rule 66 (expression -> NOT expression .)
    OUTPUT          reduce using rule 66 (expression -> NOT expression .)
    ONFOR           reduce using rule 66 (expression -> NOT expression .)
    BSEND           reduce using rule 66 (expression -> NOT expression .)
    BSR             reduce using rule 66 (expression -> NOT expression .)
    SETDP           reduce using rule 66 (expression -> NOT expression .)
    FASTSEND        reduce using rule 66 (expression -> NOT expression .)
    BEEP            reduce using rule 66 (expression -> NOT expression .)
    STOP            reduce using rule 66 (expression -> NOT expression .)
    RESET           reduce using rule 66 (expression -> NOT expression .)
    RESETDP         reduce using rule 66 (expression -> NOT expression .)
    ON              reduce using rule 66 (expression -> NOT expression .)
    OFF             reduce using rule 66 (expression -> NOT expression .)
    THISWAY         reduce using rule 66 (expression -> NOT expression .)
    THATWAY         reduce using rule 66 (expression -> NOT expression .)
    RD              reduce using rule 66 (expression -> NOT expression .)
    BRAKE           reduce using rule 66 (expression -> NOT expression .)
    LEDON           reduce using rule 66 (expression -> NOT expression .)
    LEDOFF          reduce using rule 66 (expression -> NOT expression .)
    I2C_START       reduce using rule 66 (expression -> NOT expression .)
    I2C_STOP        reduce using rule 66 (expression -> NOT expression .)
    WHENOFF         reduce using rule 66 (expression -> NOT expression .)
    MOTORATTENTION  reduce using rule 66 (expression -> NOT expression .)
    BYTES           reduce using rule 66 (expression -> NOT expression .)
    PROCEDURENAME   reduce using rule 66 (expression -> NOT expression .)
    END             reduce using rule 66 (expression -> NOT expression .)
    RBRACKET        reduce using rule 66 (expression -> NOT expression .)
    REPORTER        reduce using rule 66 (expression -> NOT expression .)
    NOT             reduce using rule 66 (expression -> NOT expression .)
    LPAREN          reduce using rule 66 (expression -> NOT expression .)
    LBRACKET        reduce using rule 66 (expression -> NOT expression .)
    I2C_READ        reduce using rule 66 (expression -> NOT expression .)
    HIGHBYTE        reduce using rule 66 (expression -> NOT expression .)
    LOWBYTE         reduce using rule 66 (expression -> NOT expression .)
    NUMBERLITERAL   reduce using rule 66 (expression -> NOT expression .)
    TIMER           reduce using rule 66 (expression -> NOT expression .)
    RANDOM          reduce using rule 66 (expression -> NOT expression .)
    RECALL          reduce using rule 66 (expression -> NOT expression .)
    SENSOR1         reduce using rule 66 (expression -> NOT expression .)
    SENSOR2         reduce using rule 66 (expression -> NOT expression .)
    SENSOR3         reduce using rule 66 (expression -> NOT expression .)
    SENSOR4         reduce using rule 66 (expression -> NOT expression .)
    SENSOR5         reduce using rule 66 (expression -> NOT expression .)
    SENSOR6         reduce using rule 66 (expression -> NOT expression .)
    SENSOR7         reduce using rule 66 (expression -> NOT expression .)
    SENSOR8         reduce using rule 66 (expression -> NOT expression .)
    SWITCH1         reduce using rule 66 (expression -> NOT expression .)
    SWITCH2         reduce using rule 66 (expression -> NOT expression .)
    SWITCH3         reduce using rule 66 (expression -> NOT expression .)
    SWITCH4         reduce using rule 66 (expression -> NOT expression .)
    SWITCH5         reduce using rule 66 (expression -> NOT expression .)
    SWITCH6         reduce using rule 66 (expression -> NOT expression .)
    SWITCH7         reduce using rule 66 (expression -> NOT expression .)
    SWITCH8         reduce using rule 66 (expression -> NOT expression .)
    NEWIRQ          reduce using rule 66 (expression -> NOT expression .)
    SERIAL          reduce using rule 66 (expression -> NOT expression .)
    RPAREN          reduce using rule 66 (expression -> NOT expression .)

  ! AND             [ shift and go to state 124 ]
  ! OR              [ shift and go to state 134 ]
  ! XOR             [ shift and go to state 125 ]
  ! LESSTHAN        [ shift and go to state 130 ]
  ! GREATERTHAN     [ shift and go to state 131 ]
  ! EQUALS          [ shift and go to state 128 ]
  ! PLUS            [ shift and go to state 132 ]
  ! MINUS           [ shift and go to state 129 ]
  ! TIMES           [ shift and go to state 133 ]
  ! DIVIDE          [ shift and go to state 126 ]
  ! PERCENT         [ shift and go to state 127 ]


state 124

    (54) expression -> expression AND . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 148

state 125

    (56) expression -> expression XOR . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 149

state 126

    (63) expression -> expression DIVIDE . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 150

state 127

    (64) expression -> expression PERCENT . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 151

state 128

    (59) expression -> expression EQUALS . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 152

state 129

    (61) expression -> expression MINUS . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 153

state 130

    (57) expression -> expression LESSTHAN . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 154

state 131

    (58) expression -> expression GREATERTHAN . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 155

state 132

    (60) expression -> expression PLUS . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 156

state 133

    (62) expression -> expression TIMES . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 157

state 134

    (55) expression -> expression OR . expression
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 158

state 135

    (94) parm -> parm expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

  ! shift/reduce conflict for MINUS resolved as shift
    REPORTER        reduce using rule 94 (parm -> parm expression .)
    NOT             reduce using rule 94 (parm -> parm expression .)
    LPAREN          reduce using rule 94 (parm -> parm expression .)
    LBRACKET        reduce using rule 94 (parm -> parm expression .)
    I2C_READ        reduce using rule 94 (parm -> parm expression .)
    HIGHBYTE        reduce using rule 94 (parm -> parm expression .)
    LOWBYTE         reduce using rule 94 (parm -> parm expression .)
    NUMBERLITERAL   reduce using rule 94 (parm -> parm expression .)
    TIMER           reduce using rule 94 (parm -> parm expression .)
    RANDOM          reduce using rule 94 (parm -> parm expression .)
    RECALL          reduce using rule 94 (parm -> parm expression .)
    SENSOR1         reduce using rule 94 (parm -> parm expression .)
    SENSOR2         reduce using rule 94 (parm -> parm expression .)
    SENSOR3         reduce using rule 94 (parm -> parm expression .)
    SENSOR4         reduce using rule 94 (parm -> parm expression .)
    SENSOR5         reduce using rule 94 (parm -> parm expression .)
    SENSOR6         reduce using rule 94 (parm -> parm expression .)
    SENSOR7         reduce using rule 94 (parm -> parm expression .)
    SENSOR8         reduce using rule 94 (parm -> parm expression .)
    SWITCH1         reduce using rule 94 (parm -> parm expression .)
    SWITCH2         reduce using rule 94 (parm -> parm expression .)
    SWITCH3         reduce using rule 94 (parm -> parm expression .)
    SWITCH4         reduce using rule 94 (parm -> parm expression .)
    SWITCH5         reduce using rule 94 (parm -> parm expression .)
    SWITCH6         reduce using rule 94 (parm -> parm expression .)
    SWITCH7         reduce using rule 94 (parm -> parm expression .)
    SWITCH8         reduce using rule 94 (parm -> parm expression .)
    NEWIRQ          reduce using rule 94 (parm -> parm expression .)
    SERIAL          reduce using rule 94 (parm -> parm expression .)
    REPEAT          reduce using rule 94 (parm -> parm expression .)
    WHILE           reduce using rule 94 (parm -> parm expression .)
    LOOP            reduce using rule 94 (parm -> parm expression .)
    FOREVER         reduce using rule 94 (parm -> parm expression .)
    IF              reduce using rule 94 (parm -> parm expression .)
    IFELSE          reduce using rule 94 (parm -> parm expression .)
    WAITUNTIL       reduce using rule 94 (parm -> parm expression .)
    WHEN            reduce using rule 94 (parm -> parm expression .)
    SHOW            reduce using rule 94 (parm -> parm expression .)
    MAKE            reduce using rule 94 (parm -> parm expression .)
    WAIT            reduce using rule 94 (parm -> parm expression .)
    SEND            reduce using rule 94 (parm -> parm expression .)
    RECORD          reduce using rule 94 (parm -> parm expression .)
    ERASE           reduce using rule 94 (parm -> parm expression .)
    SETSVH          reduce using rule 94 (parm -> parm expression .)
    SVR             reduce using rule 94 (parm -> parm expression .)
    SVL             reduce using rule 94 (parm -> parm expression .)
    SETPOWER        reduce using rule 94 (parm -> parm expression .)
    I2C_WRITE       reduce using rule 94 (parm -> parm expression .)
    OUTPUT          reduce using rule 94 (parm -> parm expression .)
    ONFOR           reduce using rule 94 (parm -> parm expression .)
    BSEND           reduce using rule 94 (parm -> parm expression .)
    BSR             reduce using rule 94 (parm -> parm expression .)
    SETDP           reduce using rule 94 (parm -> parm expression .)
    FASTSEND        reduce using rule 94 (parm -> parm expression .)
    BEEP            reduce using rule 94 (parm -> parm expression .)
    STOP            reduce using rule 94 (parm -> parm expression .)
    RESET           reduce using rule 94 (parm -> parm expression .)
    RESETDP         reduce using rule 94 (parm -> parm expression .)
    ON              reduce using rule 94 (parm -> parm expression .)
    OFF             reduce using rule 94 (parm -> parm expression .)
    THISWAY         reduce using rule 94 (parm -> parm expression .)
    THATWAY         reduce using rule 94 (parm -> parm expression .)
    RD              reduce using rule 94 (parm -> parm expression .)
    BRAKE           reduce using rule 94 (parm -> parm expression .)
    LEDON           reduce using rule 94 (parm -> parm expression .)
    LEDOFF          reduce using rule 94 (parm -> parm expression .)
    I2C_START       reduce using rule 94 (parm -> parm expression .)
    I2C_STOP        reduce using rule 94 (parm -> parm expression .)
    WHENOFF         reduce using rule 94 (parm -> parm expression .)
    MOTORATTENTION  reduce using rule 94 (parm -> parm expression .)
    BYTES           reduce using rule 94 (parm -> parm expression .)
    PROCEDURENAME   reduce using rule 94 (parm -> parm expression .)
    END             reduce using rule 94 (parm -> parm expression .)
    RBRACKET        reduce using rule 94 (parm -> parm expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127

  ! MINUS           [ reduce using rule 94 (parm -> parm expression .) ]


state 136

    (10) statement -> WHILE expression LBRACKET . statements RBRACKET
    (7) statements -> . statement statements
    (8) statements -> . statement
    (9) statement -> . REPEAT expression LBRACKET statements RBRACKET
    (10) statement -> . WHILE expression LBRACKET statements RBRACKET
    (11) statement -> . LOOP LBRACKET statements RBRACKET
    (12) statement -> . FOREVER LBRACKET statements RBRACKET
    (13) statement -> . IF expression LBRACKET statements RBRACKET
    (14) statement -> . IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET
    (15) statement -> . WAITUNTIL LBRACKET expression RBRACKET
    (16) statement -> . WHEN expression LBRACKET expression RBRACKET
    (17) statement -> . SHOW expression
    (18) statement -> . SHOW RECEIVER
    (19) statement -> . MAKE RECEIVER expression
    (20) statement -> . WAIT expression
    (21) statement -> . SEND expression
    (22) statement -> . RECORD expression
    (23) statement -> . ERASE expression
    (24) statement -> . SETSVH expression
    (25) statement -> . SVR expression
    (26) statement -> . SVL expression
    (27) statement -> . SETPOWER expression
    (28) statement -> . I2C_WRITE expression
    (29) statement -> . OUTPUT expression
    (30) statement -> . ONFOR expression
    (31) statement -> . BSEND expression
    (32) statement -> . BSR expression
    (33) statement -> . SETDP expression
    (34) statement -> . FASTSEND expression
    (35) statement -> . BEEP
    (36) statement -> . STOP
    (37) statement -> . RESET
    (38) statement -> . RESETDP
    (39) statement -> . ON
    (40) statement -> . OFF
    (41) statement -> . THISWAY
    (42) statement -> . THATWAY
    (43) statement -> . RD
    (44) statement -> . BRAKE
    (45) statement -> . LEDON
    (46) statement -> . LEDOFF
    (47) statement -> . I2C_START
    (48) statement -> . I2C_STOP
    (49) statement -> . WHENOFF
    (50) statement -> . procedurecall
    (51) statement -> . MOTORATTENTION
    (52) statement -> . BYTES
    (96) procedurecall -> . PROCEDURENAME parm
    (97) procedurecall -> . PROCEDURENAME

    REPEAT          shift and go to state 32
    WHILE           shift and go to state 13
    LOOP            shift and go to state 53
    FOREVER         shift and go to state 7
    IF              shift and go to state 28
    IFELSE          shift and go to state 25
    WAITUNTIL       shift and go to state 51
    WHEN            shift and go to state 21
    SHOW            shift and go to state 20
    MAKE            shift and go to state 45
    WAIT            shift and go to state 41
    SEND            shift and go to state 47
    RECORD          shift and go to state 19
    ERASE           shift and go to state 24
    SETSVH          shift and go to state 18
    SVR             shift and go to state 39
    SVL             shift and go to state 31
    SETPOWER        shift and go to state 10
    I2C_WRITE       shift and go to state 40
    OUTPUT          shift and go to state 52
    ONFOR           shift and go to state 37
    BSEND           shift and go to state 42
    BSR             shift and go to state 22
    SETDP           shift and go to state 27
    FASTSEND        shift and go to state 14
    BEEP            shift and go to state 48
    STOP            shift and go to state 11
    RESET           shift and go to state 6
    RESETDP         shift and go to state 33
    ON              shift and go to state 15
    OFF             shift and go to state 16
    THISWAY         shift and go to state 49
    THATWAY         shift and go to state 36
    RD              shift and go to state 23
    BRAKE           shift and go to state 38
    LEDON           shift and go to state 43
    LEDOFF          shift and go to state 9
    I2C_START       shift and go to state 46
    I2C_STOP        shift and go to state 17
    WHENOFF         shift and go to state 44
    MOTORATTENTION  shift and go to state 30
    BYTES           shift and go to state 35
    PROCEDURENAME   shift and go to state 12

    statements                     shift and go to state 159
    procedurecall                  shift and go to state 29
    statement                      shift and go to state 26

state 137

    (16) statement -> WHEN expression LBRACKET . expression RBRACKET
    (53) expression -> . REPORTER
    (54) expression -> . expression AND expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression XOR expression
    (57) expression -> . expression LESSTHAN expression
    (58) expression -> . expression GREATERTHAN expression
    (59) expression -> . expression EQUALS expression
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression PERCENT expression
    (65) expression -> . MINUS expression
    (66) expression -> . NOT expression
    (67) expression -> . LPAREN expression RPAREN
    (68) expression -> . LBRACKET expression RBRACKET
    (69) expression -> . I2C_READ expression
    (70) expression -> . HIGHBYTE expression
    (71) expression -> . LOWBYTE expression
    (72) expression -> . NUMBERLITERAL
    (73) expression -> . TIMER
    (74) expression -> . RANDOM
    (75) expression -> . RECALL
    (76) expression -> . SENSOR1
    (77) expression -> . SENSOR2
    (78) expression -> . SENSOR3
    (79) expression -> . SENSOR4
    (80) expression -> . SENSOR5
    (81) expression -> . SENSOR6
    (82) expression -> . SENSOR7
    (83) expression -> . SENSOR8
    (84) expression -> . SWITCH1
    (85) expression -> . SWITCH2
    (86) expression -> . SWITCH3
    (87) expression -> . SWITCH4
    (88) expression -> . SWITCH5
    (89) expression -> . SWITCH6
    (90) expression -> . SWITCH7
    (91) expression -> . SWITCH8
    (92) expression -> . NEWIRQ
    (93) expression -> . SERIAL

    REPORTER        shift and go to state 75
    MINUS           shift and go to state 63
    NOT             shift and go to state 85
    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 57
    I2C_READ        shift and go to state 83
    HIGHBYTE        shift and go to state 74
    LOWBYTE         shift and go to state 80
    NUMBERLITERAL   shift and go to state 81
    TIMER           shift and go to state 77
    RANDOM          shift and go to state 76
    RECALL          shift and go to state 82
    SENSOR1         shift and go to state 59
    SENSOR2         shift and go to state 61
    SENSOR3         shift and go to state 60
    SENSOR4         shift and go to state 73
    SENSOR5         shift and go to state 62
    SENSOR6         shift and go to state 65
    SENSOR7         shift and go to state 64
    SENSOR8         shift and go to state 58
    SWITCH1         shift and go to state 69
    SWITCH2         shift and go to state 68
    SWITCH3         shift and go to state 67
    SWITCH4         shift and go to state 84
    SWITCH5         shift and go to state 72
    SWITCH6         shift and go to state 71
    SWITCH7         shift and go to state 70
    SWITCH8         shift and go to state 66
    NEWIRQ          shift and go to state 56
    SERIAL          shift and go to state 79

    expression                     shift and go to state 160

state 138

    (14) statement -> IFELSE expression LBRACKET . statements RBRACKET LBRACKET statements RBRACKET
    (7) statements -> . statement statements
    (8) statements -> . statement
    (9) statement -> . REPEAT expression LBRACKET statements RBRACKET
    (10) statement -> . WHILE expression LBRACKET statements RBRACKET
    (11) statement -> . LOOP LBRACKET statements RBRACKET
    (12) statement -> . FOREVER LBRACKET statements RBRACKET
    (13) statement -> . IF expression LBRACKET statements RBRACKET
    (14) statement -> . IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET
    (15) statement -> . WAITUNTIL LBRACKET expression RBRACKET
    (16) statement -> . WHEN expression LBRACKET expression RBRACKET
    (17) statement -> . SHOW expression
    (18) statement -> . SHOW RECEIVER
    (19) statement -> . MAKE RECEIVER expression
    (20) statement -> . WAIT expression
    (21) statement -> . SEND expression
    (22) statement -> . RECORD expression
    (23) statement -> . ERASE expression
    (24) statement -> . SETSVH expression
    (25) statement -> . SVR expression
    (26) statement -> . SVL expression
    (27) statement -> . SETPOWER expression
    (28) statement -> . I2C_WRITE expression
    (29) statement -> . OUTPUT expression
    (30) statement -> . ONFOR expression
    (31) statement -> . BSEND expression
    (32) statement -> . BSR expression
    (33) statement -> . SETDP expression
    (34) statement -> . FASTSEND expression
    (35) statement -> . BEEP
    (36) statement -> . STOP
    (37) statement -> . RESET
    (38) statement -> . RESETDP
    (39) statement -> . ON
    (40) statement -> . OFF
    (41) statement -> . THISWAY
    (42) statement -> . THATWAY
    (43) statement -> . RD
    (44) statement -> . BRAKE
    (45) statement -> . LEDON
    (46) statement -> . LEDOFF
    (47) statement -> . I2C_START
    (48) statement -> . I2C_STOP
    (49) statement -> . WHENOFF
    (50) statement -> . procedurecall
    (51) statement -> . MOTORATTENTION
    (52) statement -> . BYTES
    (96) procedurecall -> . PROCEDURENAME parm
    (97) procedurecall -> . PROCEDURENAME

    REPEAT          shift and go to state 32
    WHILE           shift and go to state 13
    LOOP            shift and go to state 53
    FOREVER         shift and go to state 7
    IF              shift and go to state 28
    IFELSE          shift and go to state 25
    WAITUNTIL       shift and go to state 51
    WHEN            shift and go to state 21
    SHOW            shift and go to state 20
    MAKE            shift and go to state 45
    WAIT            shift and go to state 41
    SEND            shift and go to state 47
    RECORD          shift and go to state 19
    ERASE           shift and go to state 24
    SETSVH          shift and go to state 18
    SVR             shift and go to state 39
    SVL             shift and go to state 31
    SETPOWER        shift and go to state 10
    I2C_WRITE       shift and go to state 40
    OUTPUT          shift and go to state 52
    ONFOR           shift and go to state 37
    BSEND           shift and go to state 42
    BSR             shift and go to state 22
    SETDP           shift and go to state 27
    FASTSEND        shift and go to state 14
    BEEP            shift and go to state 48
    STOP            shift and go to state 11
    RESET           shift and go to state 6
    RESETDP         shift and go to state 33
    ON              shift and go to state 15
    OFF             shift and go to state 16
    THISWAY         shift and go to state 49
    THATWAY         shift and go to state 36
    RD              shift and go to state 23
    BRAKE           shift and go to state 38
    LEDON           shift and go to state 43
    LEDOFF          shift and go to state 9
    I2C_START       shift and go to state 46
    I2C_STOP        shift and go to state 17
    WHENOFF         shift and go to state 44
    MOTORATTENTION  shift and go to state 30
    BYTES           shift and go to state 35
    PROCEDURENAME   shift and go to state 12

    statements                     shift and go to state 161
    procedurecall                  shift and go to state 29
    statement                      shift and go to state 26

state 139

    (13) statement -> IF expression LBRACKET . statements RBRACKET
    (7) statements -> . statement statements
    (8) statements -> . statement
    (9) statement -> . REPEAT expression LBRACKET statements RBRACKET
    (10) statement -> . WHILE expression LBRACKET statements RBRACKET
    (11) statement -> . LOOP LBRACKET statements RBRACKET
    (12) statement -> . FOREVER LBRACKET statements RBRACKET
    (13) statement -> . IF expression LBRACKET statements RBRACKET
    (14) statement -> . IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET
    (15) statement -> . WAITUNTIL LBRACKET expression RBRACKET
    (16) statement -> . WHEN expression LBRACKET expression RBRACKET
    (17) statement -> . SHOW expression
    (18) statement -> . SHOW RECEIVER
    (19) statement -> . MAKE RECEIVER expression
    (20) statement -> . WAIT expression
    (21) statement -> . SEND expression
    (22) statement -> . RECORD expression
    (23) statement -> . ERASE expression
    (24) statement -> . SETSVH expression
    (25) statement -> . SVR expression
    (26) statement -> . SVL expression
    (27) statement -> . SETPOWER expression
    (28) statement -> . I2C_WRITE expression
    (29) statement -> . OUTPUT expression
    (30) statement -> . ONFOR expression
    (31) statement -> . BSEND expression
    (32) statement -> . BSR expression
    (33) statement -> . SETDP expression
    (34) statement -> . FASTSEND expression
    (35) statement -> . BEEP
    (36) statement -> . STOP
    (37) statement -> . RESET
    (38) statement -> . RESETDP
    (39) statement -> . ON
    (40) statement -> . OFF
    (41) statement -> . THISWAY
    (42) statement -> . THATWAY
    (43) statement -> . RD
    (44) statement -> . BRAKE
    (45) statement -> . LEDON
    (46) statement -> . LEDOFF
    (47) statement -> . I2C_START
    (48) statement -> . I2C_STOP
    (49) statement -> . WHENOFF
    (50) statement -> . procedurecall
    (51) statement -> . MOTORATTENTION
    (52) statement -> . BYTES
    (96) procedurecall -> . PROCEDURENAME parm
    (97) procedurecall -> . PROCEDURENAME

    REPEAT          shift and go to state 32
    WHILE           shift and go to state 13
    LOOP            shift and go to state 53
    FOREVER         shift and go to state 7
    IF              shift and go to state 28
    IFELSE          shift and go to state 25
    WAITUNTIL       shift and go to state 51
    WHEN            shift and go to state 21
    SHOW            shift and go to state 20
    MAKE            shift and go to state 45
    WAIT            shift and go to state 41
    SEND            shift and go to state 47
    RECORD          shift and go to state 19
    ERASE           shift and go to state 24
    SETSVH          shift and go to state 18
    SVR             shift and go to state 39
    SVL             shift and go to state 31
    SETPOWER        shift and go to state 10
    I2C_WRITE       shift and go to state 40
    OUTPUT          shift and go to state 52
    ONFOR           shift and go to state 37
    BSEND           shift and go to state 42
    BSR             shift and go to state 22
    SETDP           shift and go to state 27
    FASTSEND        shift and go to state 14
    BEEP            shift and go to state 48
    STOP            shift and go to state 11
    RESET           shift and go to state 6
    RESETDP         shift and go to state 33
    ON              shift and go to state 15
    OFF             shift and go to state 16
    THISWAY         shift and go to state 49
    THATWAY         shift and go to state 36
    RD              shift and go to state 23
    BRAKE           shift and go to state 38
    LEDON           shift and go to state 43
    LEDOFF          shift and go to state 9
    I2C_START       shift and go to state 46
    I2C_STOP        shift and go to state 17
    WHENOFF         shift and go to state 44
    MOTORATTENTION  shift and go to state 30
    BYTES           shift and go to state 35
    PROCEDURENAME   shift and go to state 12

    statements                     shift and go to state 162
    procedurecall                  shift and go to state 29
    statement                      shift and go to state 26

state 140

    (9) statement -> REPEAT expression LBRACKET . statements RBRACKET
    (7) statements -> . statement statements
    (8) statements -> . statement
    (9) statement -> . REPEAT expression LBRACKET statements RBRACKET
    (10) statement -> . WHILE expression LBRACKET statements RBRACKET
    (11) statement -> . LOOP LBRACKET statements RBRACKET
    (12) statement -> . FOREVER LBRACKET statements RBRACKET
    (13) statement -> . IF expression LBRACKET statements RBRACKET
    (14) statement -> . IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET
    (15) statement -> . WAITUNTIL LBRACKET expression RBRACKET
    (16) statement -> . WHEN expression LBRACKET expression RBRACKET
    (17) statement -> . SHOW expression
    (18) statement -> . SHOW RECEIVER
    (19) statement -> . MAKE RECEIVER expression
    (20) statement -> . WAIT expression
    (21) statement -> . SEND expression
    (22) statement -> . RECORD expression
    (23) statement -> . ERASE expression
    (24) statement -> . SETSVH expression
    (25) statement -> . SVR expression
    (26) statement -> . SVL expression
    (27) statement -> . SETPOWER expression
    (28) statement -> . I2C_WRITE expression
    (29) statement -> . OUTPUT expression
    (30) statement -> . ONFOR expression
    (31) statement -> . BSEND expression
    (32) statement -> . BSR expression
    (33) statement -> . SETDP expression
    (34) statement -> . FASTSEND expression
    (35) statement -> . BEEP
    (36) statement -> . STOP
    (37) statement -> . RESET
    (38) statement -> . RESETDP
    (39) statement -> . ON
    (40) statement -> . OFF
    (41) statement -> . THISWAY
    (42) statement -> . THATWAY
    (43) statement -> . RD
    (44) statement -> . BRAKE
    (45) statement -> . LEDON
    (46) statement -> . LEDOFF
    (47) statement -> . I2C_START
    (48) statement -> . I2C_STOP
    (49) statement -> . WHENOFF
    (50) statement -> . procedurecall
    (51) statement -> . MOTORATTENTION
    (52) statement -> . BYTES
    (96) procedurecall -> . PROCEDURENAME parm
    (97) procedurecall -> . PROCEDURENAME

    REPEAT          shift and go to state 32
    WHILE           shift and go to state 13
    LOOP            shift and go to state 53
    FOREVER         shift and go to state 7
    IF              shift and go to state 28
    IFELSE          shift and go to state 25
    WAITUNTIL       shift and go to state 51
    WHEN            shift and go to state 21
    SHOW            shift and go to state 20
    MAKE            shift and go to state 45
    WAIT            shift and go to state 41
    SEND            shift and go to state 47
    RECORD          shift and go to state 19
    ERASE           shift and go to state 24
    SETSVH          shift and go to state 18
    SVR             shift and go to state 39
    SVL             shift and go to state 31
    SETPOWER        shift and go to state 10
    I2C_WRITE       shift and go to state 40
    OUTPUT          shift and go to state 52
    ONFOR           shift and go to state 37
    BSEND           shift and go to state 42
    BSR             shift and go to state 22
    SETDP           shift and go to state 27
    FASTSEND        shift and go to state 14
    BEEP            shift and go to state 48
    STOP            shift and go to state 11
    RESET           shift and go to state 6
    RESETDP         shift and go to state 33
    ON              shift and go to state 15
    OFF             shift and go to state 16
    THISWAY         shift and go to state 49
    THATWAY         shift and go to state 36
    RD              shift and go to state 23
    BRAKE           shift and go to state 38
    LEDON           shift and go to state 43
    LEDOFF          shift and go to state 9
    I2C_START       shift and go to state 46
    I2C_STOP        shift and go to state 17
    WHENOFF         shift and go to state 44
    MOTORATTENTION  shift and go to state 30
    BYTES           shift and go to state 35
    PROCEDURENAME   shift and go to state 12

    statements                     shift and go to state 163
    procedurecall                  shift and go to state 29
    statement                      shift and go to state 26

state 141

    (4) procedure -> TO PROCEDURENAME parameterDeclaration statements END .

    TO              reduce using rule 4 (procedure -> TO PROCEDURENAME parameterDeclaration statements END .)
    $end            reduce using rule 4 (procedure -> TO PROCEDURENAME parameterDeclaration statements END .)


state 142

    (19) statement -> MAKE RECEIVER expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    REPEAT          reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    WHILE           reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    LOOP            reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    FOREVER         reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    IF              reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    IFELSE          reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    WAITUNTIL       reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    WHEN            reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    SHOW            reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    MAKE            reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    WAIT            reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    SEND            reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    RECORD          reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    ERASE           reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    SETSVH          reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    SVR             reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    SVL             reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    SETPOWER        reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    I2C_WRITE       reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    OUTPUT          reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    ONFOR           reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    BSEND           reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    BSR             reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    SETDP           reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    FASTSEND        reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    BEEP            reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    STOP            reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    RESET           reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    RESETDP         reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    ON              reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    OFF             reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    THISWAY         reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    THATWAY         reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    RD              reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    BRAKE           reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    LEDON           reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    LEDOFF          reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    I2C_START       reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    I2C_STOP        reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    WHENOFF         reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    MOTORATTENTION  reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    BYTES           reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    PROCEDURENAME   reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    RBRACKET        reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    END             reduce using rule 19 (statement -> MAKE RECEIVER expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 143

    (15) statement -> WAITUNTIL LBRACKET expression . RBRACKET
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    RBRACKET        shift and go to state 164
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 144

    (11) statement -> LOOP LBRACKET statements . RBRACKET

    RBRACKET        shift and go to state 165


state 145

    (12) statement -> FOREVER LBRACKET statements RBRACKET .

    REPEAT          reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    WHILE           reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    LOOP            reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    FOREVER         reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    IF              reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    IFELSE          reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    WAITUNTIL       reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    WHEN            reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    SHOW            reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    MAKE            reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    WAIT            reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    SEND            reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    RECORD          reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    ERASE           reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    SETSVH          reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    SVR             reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    SVL             reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    SETPOWER        reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    I2C_WRITE       reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    OUTPUT          reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    ONFOR           reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    BSEND           reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    BSR             reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    SETDP           reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    FASTSEND        reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    BEEP            reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    STOP            reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    RESET           reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    RESETDP         reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    ON              reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    OFF             reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    THISWAY         reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    THATWAY         reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    RD              reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    BRAKE           reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    LEDON           reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    LEDOFF          reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    I2C_START       reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    I2C_STOP        reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    WHENOFF         reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    MOTORATTENTION  reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    BYTES           reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    PROCEDURENAME   reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    RBRACKET        reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)
    END             reduce using rule 12 (statement -> FOREVER LBRACKET statements RBRACKET .)


state 146

    (68) expression -> LBRACKET expression RBRACKET .

    AND             reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    OR              reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    XOR             reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    LESSTHAN        reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    GREATERTHAN     reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    PERCENT         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    REPEAT          reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    LOOP            reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    FOREVER         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    IF              reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    IFELSE          reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    WAITUNTIL       reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    WHEN            reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SHOW            reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    MAKE            reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    WAIT            reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SEND            reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    RECORD          reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    ERASE           reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SETSVH          reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SVR             reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SVL             reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SETPOWER        reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    I2C_WRITE       reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    OUTPUT          reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    ONFOR           reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    BSEND           reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    BSR             reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SETDP           reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    FASTSEND        reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    BEEP            reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    STOP            reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    RESET           reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    RESETDP         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    ON              reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    OFF             reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    THISWAY         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    THATWAY         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    RD              reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    BRAKE           reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    LEDON           reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    LEDOFF          reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    I2C_START       reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    I2C_STOP        reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    WHENOFF         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    MOTORATTENTION  reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    BYTES           reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    PROCEDURENAME   reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    END             reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    REPORTER        reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    NOT             reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    I2C_READ        reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    HIGHBYTE        reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    LOWBYTE         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    NUMBERLITERAL   reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    TIMER           reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    RANDOM          reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    RECALL          reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SENSOR1         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SENSOR2         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SENSOR3         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SENSOR4         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SENSOR5         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SENSOR6         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SENSOR7         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SENSOR8         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SWITCH1         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SWITCH2         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SWITCH3         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SWITCH4         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SWITCH5         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SWITCH6         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SWITCH7         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SWITCH8         reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    NEWIRQ          reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    SERIAL          reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 68 (expression -> LBRACKET expression RBRACKET .)


state 147

    (67) expression -> LPAREN expression RPAREN .

    AND             reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    LESSTHAN        reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    GREATERTHAN     reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    PERCENT         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    REPEAT          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    LOOP            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    FOREVER         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    IFELSE          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    WAITUNTIL       reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    WHEN            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SHOW            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    MAKE            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    WAIT            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SEND            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    RECORD          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    ERASE           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SETSVH          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SVR             reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SVL             reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SETPOWER        reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    I2C_WRITE       reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    OUTPUT          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    ONFOR           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    BSEND           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    BSR             reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SETDP           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    FASTSEND        reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    BEEP            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    STOP            reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    RESET           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    RESETDP         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    ON              reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    OFF             reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    THISWAY         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    THATWAY         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    RD              reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    BRAKE           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    LEDON           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    LEDOFF          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    I2C_START       reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    I2C_STOP        reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    WHENOFF         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    MOTORATTENTION  reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    BYTES           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    PROCEDURENAME   reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    END             reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    REPORTER        reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    I2C_READ        reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    HIGHBYTE        reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    LOWBYTE         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    NUMBERLITERAL   reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    TIMER           reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    RANDOM          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    RECALL          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SENSOR1         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SENSOR2         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SENSOR3         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SENSOR4         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SENSOR5         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SENSOR6         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SENSOR7         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SENSOR8         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SWITCH1         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SWITCH2         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SWITCH3         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SWITCH4         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SWITCH5         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SWITCH6         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SWITCH7         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SWITCH8         reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    NEWIRQ          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    SERIAL          reduce using rule 67 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 67 (expression -> LPAREN expression RPAREN .)


state 148

    (54) expression -> expression AND expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    AND             reduce using rule 54 (expression -> expression AND expression .)
    OR              reduce using rule 54 (expression -> expression AND expression .)
    XOR             reduce using rule 54 (expression -> expression AND expression .)
    EQUALS          reduce using rule 54 (expression -> expression AND expression .)
    REPEAT          reduce using rule 54 (expression -> expression AND expression .)
    WHILE           reduce using rule 54 (expression -> expression AND expression .)
    LOOP            reduce using rule 54 (expression -> expression AND expression .)
    FOREVER         reduce using rule 54 (expression -> expression AND expression .)
    IF              reduce using rule 54 (expression -> expression AND expression .)
    IFELSE          reduce using rule 54 (expression -> expression AND expression .)
    WAITUNTIL       reduce using rule 54 (expression -> expression AND expression .)
    WHEN            reduce using rule 54 (expression -> expression AND expression .)
    SHOW            reduce using rule 54 (expression -> expression AND expression .)
    MAKE            reduce using rule 54 (expression -> expression AND expression .)
    WAIT            reduce using rule 54 (expression -> expression AND expression .)
    SEND            reduce using rule 54 (expression -> expression AND expression .)
    RECORD          reduce using rule 54 (expression -> expression AND expression .)
    ERASE           reduce using rule 54 (expression -> expression AND expression .)
    SETSVH          reduce using rule 54 (expression -> expression AND expression .)
    SVR             reduce using rule 54 (expression -> expression AND expression .)
    SVL             reduce using rule 54 (expression -> expression AND expression .)
    SETPOWER        reduce using rule 54 (expression -> expression AND expression .)
    I2C_WRITE       reduce using rule 54 (expression -> expression AND expression .)
    OUTPUT          reduce using rule 54 (expression -> expression AND expression .)
    ONFOR           reduce using rule 54 (expression -> expression AND expression .)
    BSEND           reduce using rule 54 (expression -> expression AND expression .)
    BSR             reduce using rule 54 (expression -> expression AND expression .)
    SETDP           reduce using rule 54 (expression -> expression AND expression .)
    FASTSEND        reduce using rule 54 (expression -> expression AND expression .)
    BEEP            reduce using rule 54 (expression -> expression AND expression .)
    STOP            reduce using rule 54 (expression -> expression AND expression .)
    RESET           reduce using rule 54 (expression -> expression AND expression .)
    RESETDP         reduce using rule 54 (expression -> expression AND expression .)
    ON              reduce using rule 54 (expression -> expression AND expression .)
    OFF             reduce using rule 54 (expression -> expression AND expression .)
    THISWAY         reduce using rule 54 (expression -> expression AND expression .)
    THATWAY         reduce using rule 54 (expression -> expression AND expression .)
    RD              reduce using rule 54 (expression -> expression AND expression .)
    BRAKE           reduce using rule 54 (expression -> expression AND expression .)
    LEDON           reduce using rule 54 (expression -> expression AND expression .)
    LEDOFF          reduce using rule 54 (expression -> expression AND expression .)
    I2C_START       reduce using rule 54 (expression -> expression AND expression .)
    I2C_STOP        reduce using rule 54 (expression -> expression AND expression .)
    WHENOFF         reduce using rule 54 (expression -> expression AND expression .)
    MOTORATTENTION  reduce using rule 54 (expression -> expression AND expression .)
    BYTES           reduce using rule 54 (expression -> expression AND expression .)
    PROCEDURENAME   reduce using rule 54 (expression -> expression AND expression .)
    END             reduce using rule 54 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 54 (expression -> expression AND expression .)
    REPORTER        reduce using rule 54 (expression -> expression AND expression .)
    NOT             reduce using rule 54 (expression -> expression AND expression .)
    LPAREN          reduce using rule 54 (expression -> expression AND expression .)
    LBRACKET        reduce using rule 54 (expression -> expression AND expression .)
    I2C_READ        reduce using rule 54 (expression -> expression AND expression .)
    HIGHBYTE        reduce using rule 54 (expression -> expression AND expression .)
    LOWBYTE         reduce using rule 54 (expression -> expression AND expression .)
    NUMBERLITERAL   reduce using rule 54 (expression -> expression AND expression .)
    TIMER           reduce using rule 54 (expression -> expression AND expression .)
    RANDOM          reduce using rule 54 (expression -> expression AND expression .)
    RECALL          reduce using rule 54 (expression -> expression AND expression .)
    SENSOR1         reduce using rule 54 (expression -> expression AND expression .)
    SENSOR2         reduce using rule 54 (expression -> expression AND expression .)
    SENSOR3         reduce using rule 54 (expression -> expression AND expression .)
    SENSOR4         reduce using rule 54 (expression -> expression AND expression .)
    SENSOR5         reduce using rule 54 (expression -> expression AND expression .)
    SENSOR6         reduce using rule 54 (expression -> expression AND expression .)
    SENSOR7         reduce using rule 54 (expression -> expression AND expression .)
    SENSOR8         reduce using rule 54 (expression -> expression AND expression .)
    SWITCH1         reduce using rule 54 (expression -> expression AND expression .)
    SWITCH2         reduce using rule 54 (expression -> expression AND expression .)
    SWITCH3         reduce using rule 54 (expression -> expression AND expression .)
    SWITCH4         reduce using rule 54 (expression -> expression AND expression .)
    SWITCH5         reduce using rule 54 (expression -> expression AND expression .)
    SWITCH6         reduce using rule 54 (expression -> expression AND expression .)
    SWITCH7         reduce using rule 54 (expression -> expression AND expression .)
    SWITCH8         reduce using rule 54 (expression -> expression AND expression .)
    NEWIRQ          reduce using rule 54 (expression -> expression AND expression .)
    SERIAL          reduce using rule 54 (expression -> expression AND expression .)
    RPAREN          reduce using rule 54 (expression -> expression AND expression .)
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127

  ! LESSTHAN        [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! GREATERTHAN     [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! PERCENT         [ reduce using rule 54 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 124 ]
  ! OR              [ shift and go to state 134 ]
  ! XOR             [ shift and go to state 125 ]
  ! EQUALS          [ shift and go to state 128 ]


state 149

    (56) expression -> expression XOR expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    AND             reduce using rule 56 (expression -> expression XOR expression .)
    OR              reduce using rule 56 (expression -> expression XOR expression .)
    XOR             reduce using rule 56 (expression -> expression XOR expression .)
    EQUALS          reduce using rule 56 (expression -> expression XOR expression .)
    REPEAT          reduce using rule 56 (expression -> expression XOR expression .)
    WHILE           reduce using rule 56 (expression -> expression XOR expression .)
    LOOP            reduce using rule 56 (expression -> expression XOR expression .)
    FOREVER         reduce using rule 56 (expression -> expression XOR expression .)
    IF              reduce using rule 56 (expression -> expression XOR expression .)
    IFELSE          reduce using rule 56 (expression -> expression XOR expression .)
    WAITUNTIL       reduce using rule 56 (expression -> expression XOR expression .)
    WHEN            reduce using rule 56 (expression -> expression XOR expression .)
    SHOW            reduce using rule 56 (expression -> expression XOR expression .)
    MAKE            reduce using rule 56 (expression -> expression XOR expression .)
    WAIT            reduce using rule 56 (expression -> expression XOR expression .)
    SEND            reduce using rule 56 (expression -> expression XOR expression .)
    RECORD          reduce using rule 56 (expression -> expression XOR expression .)
    ERASE           reduce using rule 56 (expression -> expression XOR expression .)
    SETSVH          reduce using rule 56 (expression -> expression XOR expression .)
    SVR             reduce using rule 56 (expression -> expression XOR expression .)
    SVL             reduce using rule 56 (expression -> expression XOR expression .)
    SETPOWER        reduce using rule 56 (expression -> expression XOR expression .)
    I2C_WRITE       reduce using rule 56 (expression -> expression XOR expression .)
    OUTPUT          reduce using rule 56 (expression -> expression XOR expression .)
    ONFOR           reduce using rule 56 (expression -> expression XOR expression .)
    BSEND           reduce using rule 56 (expression -> expression XOR expression .)
    BSR             reduce using rule 56 (expression -> expression XOR expression .)
    SETDP           reduce using rule 56 (expression -> expression XOR expression .)
    FASTSEND        reduce using rule 56 (expression -> expression XOR expression .)
    BEEP            reduce using rule 56 (expression -> expression XOR expression .)
    STOP            reduce using rule 56 (expression -> expression XOR expression .)
    RESET           reduce using rule 56 (expression -> expression XOR expression .)
    RESETDP         reduce using rule 56 (expression -> expression XOR expression .)
    ON              reduce using rule 56 (expression -> expression XOR expression .)
    OFF             reduce using rule 56 (expression -> expression XOR expression .)
    THISWAY         reduce using rule 56 (expression -> expression XOR expression .)
    THATWAY         reduce using rule 56 (expression -> expression XOR expression .)
    RD              reduce using rule 56 (expression -> expression XOR expression .)
    BRAKE           reduce using rule 56 (expression -> expression XOR expression .)
    LEDON           reduce using rule 56 (expression -> expression XOR expression .)
    LEDOFF          reduce using rule 56 (expression -> expression XOR expression .)
    I2C_START       reduce using rule 56 (expression -> expression XOR expression .)
    I2C_STOP        reduce using rule 56 (expression -> expression XOR expression .)
    WHENOFF         reduce using rule 56 (expression -> expression XOR expression .)
    MOTORATTENTION  reduce using rule 56 (expression -> expression XOR expression .)
    BYTES           reduce using rule 56 (expression -> expression XOR expression .)
    PROCEDURENAME   reduce using rule 56 (expression -> expression XOR expression .)
    END             reduce using rule 56 (expression -> expression XOR expression .)
    RBRACKET        reduce using rule 56 (expression -> expression XOR expression .)
    REPORTER        reduce using rule 56 (expression -> expression XOR expression .)
    NOT             reduce using rule 56 (expression -> expression XOR expression .)
    LPAREN          reduce using rule 56 (expression -> expression XOR expression .)
    LBRACKET        reduce using rule 56 (expression -> expression XOR expression .)
    I2C_READ        reduce using rule 56 (expression -> expression XOR expression .)
    HIGHBYTE        reduce using rule 56 (expression -> expression XOR expression .)
    LOWBYTE         reduce using rule 56 (expression -> expression XOR expression .)
    NUMBERLITERAL   reduce using rule 56 (expression -> expression XOR expression .)
    TIMER           reduce using rule 56 (expression -> expression XOR expression .)
    RANDOM          reduce using rule 56 (expression -> expression XOR expression .)
    RECALL          reduce using rule 56 (expression -> expression XOR expression .)
    SENSOR1         reduce using rule 56 (expression -> expression XOR expression .)
    SENSOR2         reduce using rule 56 (expression -> expression XOR expression .)
    SENSOR3         reduce using rule 56 (expression -> expression XOR expression .)
    SENSOR4         reduce using rule 56 (expression -> expression XOR expression .)
    SENSOR5         reduce using rule 56 (expression -> expression XOR expression .)
    SENSOR6         reduce using rule 56 (expression -> expression XOR expression .)
    SENSOR7         reduce using rule 56 (expression -> expression XOR expression .)
    SENSOR8         reduce using rule 56 (expression -> expression XOR expression .)
    SWITCH1         reduce using rule 56 (expression -> expression XOR expression .)
    SWITCH2         reduce using rule 56 (expression -> expression XOR expression .)
    SWITCH3         reduce using rule 56 (expression -> expression XOR expression .)
    SWITCH4         reduce using rule 56 (expression -> expression XOR expression .)
    SWITCH5         reduce using rule 56 (expression -> expression XOR expression .)
    SWITCH6         reduce using rule 56 (expression -> expression XOR expression .)
    SWITCH7         reduce using rule 56 (expression -> expression XOR expression .)
    SWITCH8         reduce using rule 56 (expression -> expression XOR expression .)
    NEWIRQ          reduce using rule 56 (expression -> expression XOR expression .)
    SERIAL          reduce using rule 56 (expression -> expression XOR expression .)
    RPAREN          reduce using rule 56 (expression -> expression XOR expression .)
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127

  ! LESSTHAN        [ reduce using rule 56 (expression -> expression XOR expression .) ]
  ! GREATERTHAN     [ reduce using rule 56 (expression -> expression XOR expression .) ]
  ! PLUS            [ reduce using rule 56 (expression -> expression XOR expression .) ]
  ! MINUS           [ reduce using rule 56 (expression -> expression XOR expression .) ]
  ! TIMES           [ reduce using rule 56 (expression -> expression XOR expression .) ]
  ! DIVIDE          [ reduce using rule 56 (expression -> expression XOR expression .) ]
  ! PERCENT         [ reduce using rule 56 (expression -> expression XOR expression .) ]
  ! AND             [ shift and go to state 124 ]
  ! OR              [ shift and go to state 134 ]
  ! XOR             [ shift and go to state 125 ]
  ! EQUALS          [ shift and go to state 128 ]


state 150

    (63) expression -> expression DIVIDE expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    AND             reduce using rule 63 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 63 (expression -> expression DIVIDE expression .)
    XOR             reduce using rule 63 (expression -> expression DIVIDE expression .)
    LESSTHAN        reduce using rule 63 (expression -> expression DIVIDE expression .)
    GREATERTHAN     reduce using rule 63 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 63 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 63 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 63 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 63 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 63 (expression -> expression DIVIDE expression .)
    PERCENT         reduce using rule 63 (expression -> expression DIVIDE expression .)
    REPEAT          reduce using rule 63 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 63 (expression -> expression DIVIDE expression .)
    LOOP            reduce using rule 63 (expression -> expression DIVIDE expression .)
    FOREVER         reduce using rule 63 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 63 (expression -> expression DIVIDE expression .)
    IFELSE          reduce using rule 63 (expression -> expression DIVIDE expression .)
    WAITUNTIL       reduce using rule 63 (expression -> expression DIVIDE expression .)
    WHEN            reduce using rule 63 (expression -> expression DIVIDE expression .)
    SHOW            reduce using rule 63 (expression -> expression DIVIDE expression .)
    MAKE            reduce using rule 63 (expression -> expression DIVIDE expression .)
    WAIT            reduce using rule 63 (expression -> expression DIVIDE expression .)
    SEND            reduce using rule 63 (expression -> expression DIVIDE expression .)
    RECORD          reduce using rule 63 (expression -> expression DIVIDE expression .)
    ERASE           reduce using rule 63 (expression -> expression DIVIDE expression .)
    SETSVH          reduce using rule 63 (expression -> expression DIVIDE expression .)
    SVR             reduce using rule 63 (expression -> expression DIVIDE expression .)
    SVL             reduce using rule 63 (expression -> expression DIVIDE expression .)
    SETPOWER        reduce using rule 63 (expression -> expression DIVIDE expression .)
    I2C_WRITE       reduce using rule 63 (expression -> expression DIVIDE expression .)
    OUTPUT          reduce using rule 63 (expression -> expression DIVIDE expression .)
    ONFOR           reduce using rule 63 (expression -> expression DIVIDE expression .)
    BSEND           reduce using rule 63 (expression -> expression DIVIDE expression .)
    BSR             reduce using rule 63 (expression -> expression DIVIDE expression .)
    SETDP           reduce using rule 63 (expression -> expression DIVIDE expression .)
    FASTSEND        reduce using rule 63 (expression -> expression DIVIDE expression .)
    BEEP            reduce using rule 63 (expression -> expression DIVIDE expression .)
    STOP            reduce using rule 63 (expression -> expression DIVIDE expression .)
    RESET           reduce using rule 63 (expression -> expression DIVIDE expression .)
    RESETDP         reduce using rule 63 (expression -> expression DIVIDE expression .)
    ON              reduce using rule 63 (expression -> expression DIVIDE expression .)
    OFF             reduce using rule 63 (expression -> expression DIVIDE expression .)
    THISWAY         reduce using rule 63 (expression -> expression DIVIDE expression .)
    THATWAY         reduce using rule 63 (expression -> expression DIVIDE expression .)
    RD              reduce using rule 63 (expression -> expression DIVIDE expression .)
    BRAKE           reduce using rule 63 (expression -> expression DIVIDE expression .)
    LEDON           reduce using rule 63 (expression -> expression DIVIDE expression .)
    LEDOFF          reduce using rule 63 (expression -> expression DIVIDE expression .)
    I2C_START       reduce using rule 63 (expression -> expression DIVIDE expression .)
    I2C_STOP        reduce using rule 63 (expression -> expression DIVIDE expression .)
    WHENOFF         reduce using rule 63 (expression -> expression DIVIDE expression .)
    MOTORATTENTION  reduce using rule 63 (expression -> expression DIVIDE expression .)
    BYTES           reduce using rule 63 (expression -> expression DIVIDE expression .)
    PROCEDURENAME   reduce using rule 63 (expression -> expression DIVIDE expression .)
    END             reduce using rule 63 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 63 (expression -> expression DIVIDE expression .)
    REPORTER        reduce using rule 63 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 63 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 63 (expression -> expression DIVIDE expression .)
    LBRACKET        reduce using rule 63 (expression -> expression DIVIDE expression .)
    I2C_READ        reduce using rule 63 (expression -> expression DIVIDE expression .)
    HIGHBYTE        reduce using rule 63 (expression -> expression DIVIDE expression .)
    LOWBYTE         reduce using rule 63 (expression -> expression DIVIDE expression .)
    NUMBERLITERAL   reduce using rule 63 (expression -> expression DIVIDE expression .)
    TIMER           reduce using rule 63 (expression -> expression DIVIDE expression .)
    RANDOM          reduce using rule 63 (expression -> expression DIVIDE expression .)
    RECALL          reduce using rule 63 (expression -> expression DIVIDE expression .)
    SENSOR1         reduce using rule 63 (expression -> expression DIVIDE expression .)
    SENSOR2         reduce using rule 63 (expression -> expression DIVIDE expression .)
    SENSOR3         reduce using rule 63 (expression -> expression DIVIDE expression .)
    SENSOR4         reduce using rule 63 (expression -> expression DIVIDE expression .)
    SENSOR5         reduce using rule 63 (expression -> expression DIVIDE expression .)
    SENSOR6         reduce using rule 63 (expression -> expression DIVIDE expression .)
    SENSOR7         reduce using rule 63 (expression -> expression DIVIDE expression .)
    SENSOR8         reduce using rule 63 (expression -> expression DIVIDE expression .)
    SWITCH1         reduce using rule 63 (expression -> expression DIVIDE expression .)
    SWITCH2         reduce using rule 63 (expression -> expression DIVIDE expression .)
    SWITCH3         reduce using rule 63 (expression -> expression DIVIDE expression .)
    SWITCH4         reduce using rule 63 (expression -> expression DIVIDE expression .)
    SWITCH5         reduce using rule 63 (expression -> expression DIVIDE expression .)
    SWITCH6         reduce using rule 63 (expression -> expression DIVIDE expression .)
    SWITCH7         reduce using rule 63 (expression -> expression DIVIDE expression .)
    SWITCH8         reduce using rule 63 (expression -> expression DIVIDE expression .)
    NEWIRQ          reduce using rule 63 (expression -> expression DIVIDE expression .)
    SERIAL          reduce using rule 63 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 63 (expression -> expression DIVIDE expression .)

  ! AND             [ shift and go to state 124 ]
  ! OR              [ shift and go to state 134 ]
  ! XOR             [ shift and go to state 125 ]
  ! LESSTHAN        [ shift and go to state 130 ]
  ! GREATERTHAN     [ shift and go to state 131 ]
  ! EQUALS          [ shift and go to state 128 ]
  ! PLUS            [ shift and go to state 132 ]
  ! MINUS           [ shift and go to state 129 ]
  ! TIMES           [ shift and go to state 133 ]
  ! DIVIDE          [ shift and go to state 126 ]
  ! PERCENT         [ shift and go to state 127 ]


state 151

    (64) expression -> expression PERCENT expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    AND             reduce using rule 64 (expression -> expression PERCENT expression .)
    OR              reduce using rule 64 (expression -> expression PERCENT expression .)
    XOR             reduce using rule 64 (expression -> expression PERCENT expression .)
    LESSTHAN        reduce using rule 64 (expression -> expression PERCENT expression .)
    GREATERTHAN     reduce using rule 64 (expression -> expression PERCENT expression .)
    EQUALS          reduce using rule 64 (expression -> expression PERCENT expression .)
    PLUS            reduce using rule 64 (expression -> expression PERCENT expression .)
    MINUS           reduce using rule 64 (expression -> expression PERCENT expression .)
    TIMES           reduce using rule 64 (expression -> expression PERCENT expression .)
    DIVIDE          reduce using rule 64 (expression -> expression PERCENT expression .)
    PERCENT         reduce using rule 64 (expression -> expression PERCENT expression .)
    REPEAT          reduce using rule 64 (expression -> expression PERCENT expression .)
    WHILE           reduce using rule 64 (expression -> expression PERCENT expression .)
    LOOP            reduce using rule 64 (expression -> expression PERCENT expression .)
    FOREVER         reduce using rule 64 (expression -> expression PERCENT expression .)
    IF              reduce using rule 64 (expression -> expression PERCENT expression .)
    IFELSE          reduce using rule 64 (expression -> expression PERCENT expression .)
    WAITUNTIL       reduce using rule 64 (expression -> expression PERCENT expression .)
    WHEN            reduce using rule 64 (expression -> expression PERCENT expression .)
    SHOW            reduce using rule 64 (expression -> expression PERCENT expression .)
    MAKE            reduce using rule 64 (expression -> expression PERCENT expression .)
    WAIT            reduce using rule 64 (expression -> expression PERCENT expression .)
    SEND            reduce using rule 64 (expression -> expression PERCENT expression .)
    RECORD          reduce using rule 64 (expression -> expression PERCENT expression .)
    ERASE           reduce using rule 64 (expression -> expression PERCENT expression .)
    SETSVH          reduce using rule 64 (expression -> expression PERCENT expression .)
    SVR             reduce using rule 64 (expression -> expression PERCENT expression .)
    SVL             reduce using rule 64 (expression -> expression PERCENT expression .)
    SETPOWER        reduce using rule 64 (expression -> expression PERCENT expression .)
    I2C_WRITE       reduce using rule 64 (expression -> expression PERCENT expression .)
    OUTPUT          reduce using rule 64 (expression -> expression PERCENT expression .)
    ONFOR           reduce using rule 64 (expression -> expression PERCENT expression .)
    BSEND           reduce using rule 64 (expression -> expression PERCENT expression .)
    BSR             reduce using rule 64 (expression -> expression PERCENT expression .)
    SETDP           reduce using rule 64 (expression -> expression PERCENT expression .)
    FASTSEND        reduce using rule 64 (expression -> expression PERCENT expression .)
    BEEP            reduce using rule 64 (expression -> expression PERCENT expression .)
    STOP            reduce using rule 64 (expression -> expression PERCENT expression .)
    RESET           reduce using rule 64 (expression -> expression PERCENT expression .)
    RESETDP         reduce using rule 64 (expression -> expression PERCENT expression .)
    ON              reduce using rule 64 (expression -> expression PERCENT expression .)
    OFF             reduce using rule 64 (expression -> expression PERCENT expression .)
    THISWAY         reduce using rule 64 (expression -> expression PERCENT expression .)
    THATWAY         reduce using rule 64 (expression -> expression PERCENT expression .)
    RD              reduce using rule 64 (expression -> expression PERCENT expression .)
    BRAKE           reduce using rule 64 (expression -> expression PERCENT expression .)
    LEDON           reduce using rule 64 (expression -> expression PERCENT expression .)
    LEDOFF          reduce using rule 64 (expression -> expression PERCENT expression .)
    I2C_START       reduce using rule 64 (expression -> expression PERCENT expression .)
    I2C_STOP        reduce using rule 64 (expression -> expression PERCENT expression .)
    WHENOFF         reduce using rule 64 (expression -> expression PERCENT expression .)
    MOTORATTENTION  reduce using rule 64 (expression -> expression PERCENT expression .)
    BYTES           reduce using rule 64 (expression -> expression PERCENT expression .)
    PROCEDURENAME   reduce using rule 64 (expression -> expression PERCENT expression .)
    END             reduce using rule 64 (expression -> expression PERCENT expression .)
    RBRACKET        reduce using rule 64 (expression -> expression PERCENT expression .)
    REPORTER        reduce using rule 64 (expression -> expression PERCENT expression .)
    NOT             reduce using rule 64 (expression -> expression PERCENT expression .)
    LPAREN          reduce using rule 64 (expression -> expression PERCENT expression .)
    LBRACKET        reduce using rule 64 (expression -> expression PERCENT expression .)
    I2C_READ        reduce using rule 64 (expression -> expression PERCENT expression .)
    HIGHBYTE        reduce using rule 64 (expression -> expression PERCENT expression .)
    LOWBYTE         reduce using rule 64 (expression -> expression PERCENT expression .)
    NUMBERLITERAL   reduce using rule 64 (expression -> expression PERCENT expression .)
    TIMER           reduce using rule 64 (expression -> expression PERCENT expression .)
    RANDOM          reduce using rule 64 (expression -> expression PERCENT expression .)
    RECALL          reduce using rule 64 (expression -> expression PERCENT expression .)
    SENSOR1         reduce using rule 64 (expression -> expression PERCENT expression .)
    SENSOR2         reduce using rule 64 (expression -> expression PERCENT expression .)
    SENSOR3         reduce using rule 64 (expression -> expression PERCENT expression .)
    SENSOR4         reduce using rule 64 (expression -> expression PERCENT expression .)
    SENSOR5         reduce using rule 64 (expression -> expression PERCENT expression .)
    SENSOR6         reduce using rule 64 (expression -> expression PERCENT expression .)
    SENSOR7         reduce using rule 64 (expression -> expression PERCENT expression .)
    SENSOR8         reduce using rule 64 (expression -> expression PERCENT expression .)
    SWITCH1         reduce using rule 64 (expression -> expression PERCENT expression .)
    SWITCH2         reduce using rule 64 (expression -> expression PERCENT expression .)
    SWITCH3         reduce using rule 64 (expression -> expression PERCENT expression .)
    SWITCH4         reduce using rule 64 (expression -> expression PERCENT expression .)
    SWITCH5         reduce using rule 64 (expression -> expression PERCENT expression .)
    SWITCH6         reduce using rule 64 (expression -> expression PERCENT expression .)
    SWITCH7         reduce using rule 64 (expression -> expression PERCENT expression .)
    SWITCH8         reduce using rule 64 (expression -> expression PERCENT expression .)
    NEWIRQ          reduce using rule 64 (expression -> expression PERCENT expression .)
    SERIAL          reduce using rule 64 (expression -> expression PERCENT expression .)
    RPAREN          reduce using rule 64 (expression -> expression PERCENT expression .)

  ! AND             [ shift and go to state 124 ]
  ! OR              [ shift and go to state 134 ]
  ! XOR             [ shift and go to state 125 ]
  ! LESSTHAN        [ shift and go to state 130 ]
  ! GREATERTHAN     [ shift and go to state 131 ]
  ! EQUALS          [ shift and go to state 128 ]
  ! PLUS            [ shift and go to state 132 ]
  ! MINUS           [ shift and go to state 129 ]
  ! TIMES           [ shift and go to state 133 ]
  ! DIVIDE          [ shift and go to state 126 ]
  ! PERCENT         [ shift and go to state 127 ]


state 152

    (59) expression -> expression EQUALS expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENT resolved as shift
    REPEAT          reduce using rule 59 (expression -> expression EQUALS expression .)
    WHILE           reduce using rule 59 (expression -> expression EQUALS expression .)
    LOOP            reduce using rule 59 (expression -> expression EQUALS expression .)
    FOREVER         reduce using rule 59 (expression -> expression EQUALS expression .)
    IF              reduce using rule 59 (expression -> expression EQUALS expression .)
    IFELSE          reduce using rule 59 (expression -> expression EQUALS expression .)
    WAITUNTIL       reduce using rule 59 (expression -> expression EQUALS expression .)
    WHEN            reduce using rule 59 (expression -> expression EQUALS expression .)
    SHOW            reduce using rule 59 (expression -> expression EQUALS expression .)
    MAKE            reduce using rule 59 (expression -> expression EQUALS expression .)
    WAIT            reduce using rule 59 (expression -> expression EQUALS expression .)
    SEND            reduce using rule 59 (expression -> expression EQUALS expression .)
    RECORD          reduce using rule 59 (expression -> expression EQUALS expression .)
    ERASE           reduce using rule 59 (expression -> expression EQUALS expression .)
    SETSVH          reduce using rule 59 (expression -> expression EQUALS expression .)
    SVR             reduce using rule 59 (expression -> expression EQUALS expression .)
    SVL             reduce using rule 59 (expression -> expression EQUALS expression .)
    SETPOWER        reduce using rule 59 (expression -> expression EQUALS expression .)
    I2C_WRITE       reduce using rule 59 (expression -> expression EQUALS expression .)
    OUTPUT          reduce using rule 59 (expression -> expression EQUALS expression .)
    ONFOR           reduce using rule 59 (expression -> expression EQUALS expression .)
    BSEND           reduce using rule 59 (expression -> expression EQUALS expression .)
    BSR             reduce using rule 59 (expression -> expression EQUALS expression .)
    SETDP           reduce using rule 59 (expression -> expression EQUALS expression .)
    FASTSEND        reduce using rule 59 (expression -> expression EQUALS expression .)
    BEEP            reduce using rule 59 (expression -> expression EQUALS expression .)
    STOP            reduce using rule 59 (expression -> expression EQUALS expression .)
    RESET           reduce using rule 59 (expression -> expression EQUALS expression .)
    RESETDP         reduce using rule 59 (expression -> expression EQUALS expression .)
    ON              reduce using rule 59 (expression -> expression EQUALS expression .)
    OFF             reduce using rule 59 (expression -> expression EQUALS expression .)
    THISWAY         reduce using rule 59 (expression -> expression EQUALS expression .)
    THATWAY         reduce using rule 59 (expression -> expression EQUALS expression .)
    RD              reduce using rule 59 (expression -> expression EQUALS expression .)
    BRAKE           reduce using rule 59 (expression -> expression EQUALS expression .)
    LEDON           reduce using rule 59 (expression -> expression EQUALS expression .)
    LEDOFF          reduce using rule 59 (expression -> expression EQUALS expression .)
    I2C_START       reduce using rule 59 (expression -> expression EQUALS expression .)
    I2C_STOP        reduce using rule 59 (expression -> expression EQUALS expression .)
    WHENOFF         reduce using rule 59 (expression -> expression EQUALS expression .)
    MOTORATTENTION  reduce using rule 59 (expression -> expression EQUALS expression .)
    BYTES           reduce using rule 59 (expression -> expression EQUALS expression .)
    PROCEDURENAME   reduce using rule 59 (expression -> expression EQUALS expression .)
    END             reduce using rule 59 (expression -> expression EQUALS expression .)
    RBRACKET        reduce using rule 59 (expression -> expression EQUALS expression .)
    REPORTER        reduce using rule 59 (expression -> expression EQUALS expression .)
    NOT             reduce using rule 59 (expression -> expression EQUALS expression .)
    LPAREN          reduce using rule 59 (expression -> expression EQUALS expression .)
    LBRACKET        reduce using rule 59 (expression -> expression EQUALS expression .)
    I2C_READ        reduce using rule 59 (expression -> expression EQUALS expression .)
    HIGHBYTE        reduce using rule 59 (expression -> expression EQUALS expression .)
    LOWBYTE         reduce using rule 59 (expression -> expression EQUALS expression .)
    NUMBERLITERAL   reduce using rule 59 (expression -> expression EQUALS expression .)
    TIMER           reduce using rule 59 (expression -> expression EQUALS expression .)
    RANDOM          reduce using rule 59 (expression -> expression EQUALS expression .)
    RECALL          reduce using rule 59 (expression -> expression EQUALS expression .)
    SENSOR1         reduce using rule 59 (expression -> expression EQUALS expression .)
    SENSOR2         reduce using rule 59 (expression -> expression EQUALS expression .)
    SENSOR3         reduce using rule 59 (expression -> expression EQUALS expression .)
    SENSOR4         reduce using rule 59 (expression -> expression EQUALS expression .)
    SENSOR5         reduce using rule 59 (expression -> expression EQUALS expression .)
    SENSOR6         reduce using rule 59 (expression -> expression EQUALS expression .)
    SENSOR7         reduce using rule 59 (expression -> expression EQUALS expression .)
    SENSOR8         reduce using rule 59 (expression -> expression EQUALS expression .)
    SWITCH1         reduce using rule 59 (expression -> expression EQUALS expression .)
    SWITCH2         reduce using rule 59 (expression -> expression EQUALS expression .)
    SWITCH3         reduce using rule 59 (expression -> expression EQUALS expression .)
    SWITCH4         reduce using rule 59 (expression -> expression EQUALS expression .)
    SWITCH5         reduce using rule 59 (expression -> expression EQUALS expression .)
    SWITCH6         reduce using rule 59 (expression -> expression EQUALS expression .)
    SWITCH7         reduce using rule 59 (expression -> expression EQUALS expression .)
    SWITCH8         reduce using rule 59 (expression -> expression EQUALS expression .)
    NEWIRQ          reduce using rule 59 (expression -> expression EQUALS expression .)
    SERIAL          reduce using rule 59 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 59 (expression -> expression EQUALS expression .)
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127

  ! AND             [ reduce using rule 59 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 59 (expression -> expression EQUALS expression .) ]
  ! XOR             [ reduce using rule 59 (expression -> expression EQUALS expression .) ]
  ! LESSTHAN        [ reduce using rule 59 (expression -> expression EQUALS expression .) ]
  ! GREATERTHAN     [ reduce using rule 59 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 59 (expression -> expression EQUALS expression .) ]
  ! PLUS            [ reduce using rule 59 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 59 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 59 (expression -> expression EQUALS expression .) ]
  ! PERCENT         [ reduce using rule 59 (expression -> expression EQUALS expression .) ]


state 153

    (61) expression -> expression MINUS expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    AND             reduce using rule 61 (expression -> expression MINUS expression .)
    OR              reduce using rule 61 (expression -> expression MINUS expression .)
    XOR             reduce using rule 61 (expression -> expression MINUS expression .)
    LESSTHAN        reduce using rule 61 (expression -> expression MINUS expression .)
    GREATERTHAN     reduce using rule 61 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 61 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 61 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 61 (expression -> expression MINUS expression .)
    REPEAT          reduce using rule 61 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 61 (expression -> expression MINUS expression .)
    LOOP            reduce using rule 61 (expression -> expression MINUS expression .)
    FOREVER         reduce using rule 61 (expression -> expression MINUS expression .)
    IF              reduce using rule 61 (expression -> expression MINUS expression .)
    IFELSE          reduce using rule 61 (expression -> expression MINUS expression .)
    WAITUNTIL       reduce using rule 61 (expression -> expression MINUS expression .)
    WHEN            reduce using rule 61 (expression -> expression MINUS expression .)
    SHOW            reduce using rule 61 (expression -> expression MINUS expression .)
    MAKE            reduce using rule 61 (expression -> expression MINUS expression .)
    WAIT            reduce using rule 61 (expression -> expression MINUS expression .)
    SEND            reduce using rule 61 (expression -> expression MINUS expression .)
    RECORD          reduce using rule 61 (expression -> expression MINUS expression .)
    ERASE           reduce using rule 61 (expression -> expression MINUS expression .)
    SETSVH          reduce using rule 61 (expression -> expression MINUS expression .)
    SVR             reduce using rule 61 (expression -> expression MINUS expression .)
    SVL             reduce using rule 61 (expression -> expression MINUS expression .)
    SETPOWER        reduce using rule 61 (expression -> expression MINUS expression .)
    I2C_WRITE       reduce using rule 61 (expression -> expression MINUS expression .)
    OUTPUT          reduce using rule 61 (expression -> expression MINUS expression .)
    ONFOR           reduce using rule 61 (expression -> expression MINUS expression .)
    BSEND           reduce using rule 61 (expression -> expression MINUS expression .)
    BSR             reduce using rule 61 (expression -> expression MINUS expression .)
    SETDP           reduce using rule 61 (expression -> expression MINUS expression .)
    FASTSEND        reduce using rule 61 (expression -> expression MINUS expression .)
    BEEP            reduce using rule 61 (expression -> expression MINUS expression .)
    STOP            reduce using rule 61 (expression -> expression MINUS expression .)
    RESET           reduce using rule 61 (expression -> expression MINUS expression .)
    RESETDP         reduce using rule 61 (expression -> expression MINUS expression .)
    ON              reduce using rule 61 (expression -> expression MINUS expression .)
    OFF             reduce using rule 61 (expression -> expression MINUS expression .)
    THISWAY         reduce using rule 61 (expression -> expression MINUS expression .)
    THATWAY         reduce using rule 61 (expression -> expression MINUS expression .)
    RD              reduce using rule 61 (expression -> expression MINUS expression .)
    BRAKE           reduce using rule 61 (expression -> expression MINUS expression .)
    LEDON           reduce using rule 61 (expression -> expression MINUS expression .)
    LEDOFF          reduce using rule 61 (expression -> expression MINUS expression .)
    I2C_START       reduce using rule 61 (expression -> expression MINUS expression .)
    I2C_STOP        reduce using rule 61 (expression -> expression MINUS expression .)
    WHENOFF         reduce using rule 61 (expression -> expression MINUS expression .)
    MOTORATTENTION  reduce using rule 61 (expression -> expression MINUS expression .)
    BYTES           reduce using rule 61 (expression -> expression MINUS expression .)
    PROCEDURENAME   reduce using rule 61 (expression -> expression MINUS expression .)
    END             reduce using rule 61 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 61 (expression -> expression MINUS expression .)
    REPORTER        reduce using rule 61 (expression -> expression MINUS expression .)
    NOT             reduce using rule 61 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 61 (expression -> expression MINUS expression .)
    LBRACKET        reduce using rule 61 (expression -> expression MINUS expression .)
    I2C_READ        reduce using rule 61 (expression -> expression MINUS expression .)
    HIGHBYTE        reduce using rule 61 (expression -> expression MINUS expression .)
    LOWBYTE         reduce using rule 61 (expression -> expression MINUS expression .)
    NUMBERLITERAL   reduce using rule 61 (expression -> expression MINUS expression .)
    TIMER           reduce using rule 61 (expression -> expression MINUS expression .)
    RANDOM          reduce using rule 61 (expression -> expression MINUS expression .)
    RECALL          reduce using rule 61 (expression -> expression MINUS expression .)
    SENSOR1         reduce using rule 61 (expression -> expression MINUS expression .)
    SENSOR2         reduce using rule 61 (expression -> expression MINUS expression .)
    SENSOR3         reduce using rule 61 (expression -> expression MINUS expression .)
    SENSOR4         reduce using rule 61 (expression -> expression MINUS expression .)
    SENSOR5         reduce using rule 61 (expression -> expression MINUS expression .)
    SENSOR6         reduce using rule 61 (expression -> expression MINUS expression .)
    SENSOR7         reduce using rule 61 (expression -> expression MINUS expression .)
    SENSOR8         reduce using rule 61 (expression -> expression MINUS expression .)
    SWITCH1         reduce using rule 61 (expression -> expression MINUS expression .)
    SWITCH2         reduce using rule 61 (expression -> expression MINUS expression .)
    SWITCH3         reduce using rule 61 (expression -> expression MINUS expression .)
    SWITCH4         reduce using rule 61 (expression -> expression MINUS expression .)
    SWITCH5         reduce using rule 61 (expression -> expression MINUS expression .)
    SWITCH6         reduce using rule 61 (expression -> expression MINUS expression .)
    SWITCH7         reduce using rule 61 (expression -> expression MINUS expression .)
    SWITCH8         reduce using rule 61 (expression -> expression MINUS expression .)
    NEWIRQ          reduce using rule 61 (expression -> expression MINUS expression .)
    SERIAL          reduce using rule 61 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 61 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127

  ! TIMES           [ reduce using rule 61 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 61 (expression -> expression MINUS expression .) ]
  ! PERCENT         [ reduce using rule 61 (expression -> expression MINUS expression .) ]
  ! AND             [ shift and go to state 124 ]
  ! OR              [ shift and go to state 134 ]
  ! XOR             [ shift and go to state 125 ]
  ! LESSTHAN        [ shift and go to state 130 ]
  ! GREATERTHAN     [ shift and go to state 131 ]
  ! EQUALS          [ shift and go to state 128 ]
  ! PLUS            [ shift and go to state 132 ]
  ! MINUS           [ shift and go to state 129 ]


state 154

    (57) expression -> expression LESSTHAN expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    AND             reduce using rule 57 (expression -> expression LESSTHAN expression .)
    OR              reduce using rule 57 (expression -> expression LESSTHAN expression .)
    XOR             reduce using rule 57 (expression -> expression LESSTHAN expression .)
    LESSTHAN        reduce using rule 57 (expression -> expression LESSTHAN expression .)
    GREATERTHAN     reduce using rule 57 (expression -> expression LESSTHAN expression .)
    EQUALS          reduce using rule 57 (expression -> expression LESSTHAN expression .)
    REPEAT          reduce using rule 57 (expression -> expression LESSTHAN expression .)
    WHILE           reduce using rule 57 (expression -> expression LESSTHAN expression .)
    LOOP            reduce using rule 57 (expression -> expression LESSTHAN expression .)
    FOREVER         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    IF              reduce using rule 57 (expression -> expression LESSTHAN expression .)
    IFELSE          reduce using rule 57 (expression -> expression LESSTHAN expression .)
    WAITUNTIL       reduce using rule 57 (expression -> expression LESSTHAN expression .)
    WHEN            reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SHOW            reduce using rule 57 (expression -> expression LESSTHAN expression .)
    MAKE            reduce using rule 57 (expression -> expression LESSTHAN expression .)
    WAIT            reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SEND            reduce using rule 57 (expression -> expression LESSTHAN expression .)
    RECORD          reduce using rule 57 (expression -> expression LESSTHAN expression .)
    ERASE           reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SETSVH          reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SVR             reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SVL             reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SETPOWER        reduce using rule 57 (expression -> expression LESSTHAN expression .)
    I2C_WRITE       reduce using rule 57 (expression -> expression LESSTHAN expression .)
    OUTPUT          reduce using rule 57 (expression -> expression LESSTHAN expression .)
    ONFOR           reduce using rule 57 (expression -> expression LESSTHAN expression .)
    BSEND           reduce using rule 57 (expression -> expression LESSTHAN expression .)
    BSR             reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SETDP           reduce using rule 57 (expression -> expression LESSTHAN expression .)
    FASTSEND        reduce using rule 57 (expression -> expression LESSTHAN expression .)
    BEEP            reduce using rule 57 (expression -> expression LESSTHAN expression .)
    STOP            reduce using rule 57 (expression -> expression LESSTHAN expression .)
    RESET           reduce using rule 57 (expression -> expression LESSTHAN expression .)
    RESETDP         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    ON              reduce using rule 57 (expression -> expression LESSTHAN expression .)
    OFF             reduce using rule 57 (expression -> expression LESSTHAN expression .)
    THISWAY         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    THATWAY         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    RD              reduce using rule 57 (expression -> expression LESSTHAN expression .)
    BRAKE           reduce using rule 57 (expression -> expression LESSTHAN expression .)
    LEDON           reduce using rule 57 (expression -> expression LESSTHAN expression .)
    LEDOFF          reduce using rule 57 (expression -> expression LESSTHAN expression .)
    I2C_START       reduce using rule 57 (expression -> expression LESSTHAN expression .)
    I2C_STOP        reduce using rule 57 (expression -> expression LESSTHAN expression .)
    WHENOFF         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    MOTORATTENTION  reduce using rule 57 (expression -> expression LESSTHAN expression .)
    BYTES           reduce using rule 57 (expression -> expression LESSTHAN expression .)
    PROCEDURENAME   reduce using rule 57 (expression -> expression LESSTHAN expression .)
    END             reduce using rule 57 (expression -> expression LESSTHAN expression .)
    RBRACKET        reduce using rule 57 (expression -> expression LESSTHAN expression .)
    REPORTER        reduce using rule 57 (expression -> expression LESSTHAN expression .)
    NOT             reduce using rule 57 (expression -> expression LESSTHAN expression .)
    LPAREN          reduce using rule 57 (expression -> expression LESSTHAN expression .)
    LBRACKET        reduce using rule 57 (expression -> expression LESSTHAN expression .)
    I2C_READ        reduce using rule 57 (expression -> expression LESSTHAN expression .)
    HIGHBYTE        reduce using rule 57 (expression -> expression LESSTHAN expression .)
    LOWBYTE         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    NUMBERLITERAL   reduce using rule 57 (expression -> expression LESSTHAN expression .)
    TIMER           reduce using rule 57 (expression -> expression LESSTHAN expression .)
    RANDOM          reduce using rule 57 (expression -> expression LESSTHAN expression .)
    RECALL          reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SENSOR1         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SENSOR2         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SENSOR3         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SENSOR4         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SENSOR5         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SENSOR6         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SENSOR7         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SENSOR8         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SWITCH1         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SWITCH2         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SWITCH3         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SWITCH4         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SWITCH5         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SWITCH6         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SWITCH7         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SWITCH8         reduce using rule 57 (expression -> expression LESSTHAN expression .)
    NEWIRQ          reduce using rule 57 (expression -> expression LESSTHAN expression .)
    SERIAL          reduce using rule 57 (expression -> expression LESSTHAN expression .)
    RPAREN          reduce using rule 57 (expression -> expression LESSTHAN expression .)
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127

  ! PLUS            [ reduce using rule 57 (expression -> expression LESSTHAN expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> expression LESSTHAN expression .) ]
  ! TIMES           [ reduce using rule 57 (expression -> expression LESSTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 57 (expression -> expression LESSTHAN expression .) ]
  ! PERCENT         [ reduce using rule 57 (expression -> expression LESSTHAN expression .) ]
  ! AND             [ shift and go to state 124 ]
  ! OR              [ shift and go to state 134 ]
  ! XOR             [ shift and go to state 125 ]
  ! LESSTHAN        [ shift and go to state 130 ]
  ! GREATERTHAN     [ shift and go to state 131 ]
  ! EQUALS          [ shift and go to state 128 ]


state 155

    (58) expression -> expression GREATERTHAN expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    AND             reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    OR              reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    XOR             reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    LESSTHAN        reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    GREATERTHAN     reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    EQUALS          reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    REPEAT          reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    WHILE           reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    LOOP            reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    FOREVER         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    IF              reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    IFELSE          reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    WAITUNTIL       reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    WHEN            reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SHOW            reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    MAKE            reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    WAIT            reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SEND            reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    RECORD          reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    ERASE           reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SETSVH          reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SVR             reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SVL             reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SETPOWER        reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    I2C_WRITE       reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    OUTPUT          reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    ONFOR           reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    BSEND           reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    BSR             reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SETDP           reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    FASTSEND        reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    BEEP            reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    STOP            reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    RESET           reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    RESETDP         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    ON              reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    OFF             reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    THISWAY         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    THATWAY         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    RD              reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    BRAKE           reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    LEDON           reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    LEDOFF          reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    I2C_START       reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    I2C_STOP        reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    WHENOFF         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    MOTORATTENTION  reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    BYTES           reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    PROCEDURENAME   reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    END             reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    RBRACKET        reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    REPORTER        reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    NOT             reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    LPAREN          reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    LBRACKET        reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    I2C_READ        reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    HIGHBYTE        reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    LOWBYTE         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    NUMBERLITERAL   reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    TIMER           reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    RANDOM          reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    RECALL          reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SENSOR1         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SENSOR2         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SENSOR3         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SENSOR4         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SENSOR5         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SENSOR6         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SENSOR7         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SENSOR8         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SWITCH1         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SWITCH2         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SWITCH3         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SWITCH4         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SWITCH5         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SWITCH6         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SWITCH7         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SWITCH8         reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    NEWIRQ          reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    SERIAL          reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    RPAREN          reduce using rule 58 (expression -> expression GREATERTHAN expression .)
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127

  ! PLUS            [ reduce using rule 58 (expression -> expression GREATERTHAN expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> expression GREATERTHAN expression .) ]
  ! TIMES           [ reduce using rule 58 (expression -> expression GREATERTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 58 (expression -> expression GREATERTHAN expression .) ]
  ! PERCENT         [ reduce using rule 58 (expression -> expression GREATERTHAN expression .) ]
  ! AND             [ shift and go to state 124 ]
  ! OR              [ shift and go to state 134 ]
  ! XOR             [ shift and go to state 125 ]
  ! LESSTHAN        [ shift and go to state 130 ]
  ! GREATERTHAN     [ shift and go to state 131 ]
  ! EQUALS          [ shift and go to state 128 ]


state 156

    (60) expression -> expression PLUS expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    AND             reduce using rule 60 (expression -> expression PLUS expression .)
    OR              reduce using rule 60 (expression -> expression PLUS expression .)
    XOR             reduce using rule 60 (expression -> expression PLUS expression .)
    LESSTHAN        reduce using rule 60 (expression -> expression PLUS expression .)
    GREATERTHAN     reduce using rule 60 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 60 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 60 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 60 (expression -> expression PLUS expression .)
    REPEAT          reduce using rule 60 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 60 (expression -> expression PLUS expression .)
    LOOP            reduce using rule 60 (expression -> expression PLUS expression .)
    FOREVER         reduce using rule 60 (expression -> expression PLUS expression .)
    IF              reduce using rule 60 (expression -> expression PLUS expression .)
    IFELSE          reduce using rule 60 (expression -> expression PLUS expression .)
    WAITUNTIL       reduce using rule 60 (expression -> expression PLUS expression .)
    WHEN            reduce using rule 60 (expression -> expression PLUS expression .)
    SHOW            reduce using rule 60 (expression -> expression PLUS expression .)
    MAKE            reduce using rule 60 (expression -> expression PLUS expression .)
    WAIT            reduce using rule 60 (expression -> expression PLUS expression .)
    SEND            reduce using rule 60 (expression -> expression PLUS expression .)
    RECORD          reduce using rule 60 (expression -> expression PLUS expression .)
    ERASE           reduce using rule 60 (expression -> expression PLUS expression .)
    SETSVH          reduce using rule 60 (expression -> expression PLUS expression .)
    SVR             reduce using rule 60 (expression -> expression PLUS expression .)
    SVL             reduce using rule 60 (expression -> expression PLUS expression .)
    SETPOWER        reduce using rule 60 (expression -> expression PLUS expression .)
    I2C_WRITE       reduce using rule 60 (expression -> expression PLUS expression .)
    OUTPUT          reduce using rule 60 (expression -> expression PLUS expression .)
    ONFOR           reduce using rule 60 (expression -> expression PLUS expression .)
    BSEND           reduce using rule 60 (expression -> expression PLUS expression .)
    BSR             reduce using rule 60 (expression -> expression PLUS expression .)
    SETDP           reduce using rule 60 (expression -> expression PLUS expression .)
    FASTSEND        reduce using rule 60 (expression -> expression PLUS expression .)
    BEEP            reduce using rule 60 (expression -> expression PLUS expression .)
    STOP            reduce using rule 60 (expression -> expression PLUS expression .)
    RESET           reduce using rule 60 (expression -> expression PLUS expression .)
    RESETDP         reduce using rule 60 (expression -> expression PLUS expression .)
    ON              reduce using rule 60 (expression -> expression PLUS expression .)
    OFF             reduce using rule 60 (expression -> expression PLUS expression .)
    THISWAY         reduce using rule 60 (expression -> expression PLUS expression .)
    THATWAY         reduce using rule 60 (expression -> expression PLUS expression .)
    RD              reduce using rule 60 (expression -> expression PLUS expression .)
    BRAKE           reduce using rule 60 (expression -> expression PLUS expression .)
    LEDON           reduce using rule 60 (expression -> expression PLUS expression .)
    LEDOFF          reduce using rule 60 (expression -> expression PLUS expression .)
    I2C_START       reduce using rule 60 (expression -> expression PLUS expression .)
    I2C_STOP        reduce using rule 60 (expression -> expression PLUS expression .)
    WHENOFF         reduce using rule 60 (expression -> expression PLUS expression .)
    MOTORATTENTION  reduce using rule 60 (expression -> expression PLUS expression .)
    BYTES           reduce using rule 60 (expression -> expression PLUS expression .)
    PROCEDURENAME   reduce using rule 60 (expression -> expression PLUS expression .)
    END             reduce using rule 60 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 60 (expression -> expression PLUS expression .)
    REPORTER        reduce using rule 60 (expression -> expression PLUS expression .)
    NOT             reduce using rule 60 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 60 (expression -> expression PLUS expression .)
    LBRACKET        reduce using rule 60 (expression -> expression PLUS expression .)
    I2C_READ        reduce using rule 60 (expression -> expression PLUS expression .)
    HIGHBYTE        reduce using rule 60 (expression -> expression PLUS expression .)
    LOWBYTE         reduce using rule 60 (expression -> expression PLUS expression .)
    NUMBERLITERAL   reduce using rule 60 (expression -> expression PLUS expression .)
    TIMER           reduce using rule 60 (expression -> expression PLUS expression .)
    RANDOM          reduce using rule 60 (expression -> expression PLUS expression .)
    RECALL          reduce using rule 60 (expression -> expression PLUS expression .)
    SENSOR1         reduce using rule 60 (expression -> expression PLUS expression .)
    SENSOR2         reduce using rule 60 (expression -> expression PLUS expression .)
    SENSOR3         reduce using rule 60 (expression -> expression PLUS expression .)
    SENSOR4         reduce using rule 60 (expression -> expression PLUS expression .)
    SENSOR5         reduce using rule 60 (expression -> expression PLUS expression .)
    SENSOR6         reduce using rule 60 (expression -> expression PLUS expression .)
    SENSOR7         reduce using rule 60 (expression -> expression PLUS expression .)
    SENSOR8         reduce using rule 60 (expression -> expression PLUS expression .)
    SWITCH1         reduce using rule 60 (expression -> expression PLUS expression .)
    SWITCH2         reduce using rule 60 (expression -> expression PLUS expression .)
    SWITCH3         reduce using rule 60 (expression -> expression PLUS expression .)
    SWITCH4         reduce using rule 60 (expression -> expression PLUS expression .)
    SWITCH5         reduce using rule 60 (expression -> expression PLUS expression .)
    SWITCH6         reduce using rule 60 (expression -> expression PLUS expression .)
    SWITCH7         reduce using rule 60 (expression -> expression PLUS expression .)
    SWITCH8         reduce using rule 60 (expression -> expression PLUS expression .)
    NEWIRQ          reduce using rule 60 (expression -> expression PLUS expression .)
    SERIAL          reduce using rule 60 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 60 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127

  ! TIMES           [ reduce using rule 60 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 60 (expression -> expression PLUS expression .) ]
  ! PERCENT         [ reduce using rule 60 (expression -> expression PLUS expression .) ]
  ! AND             [ shift and go to state 124 ]
  ! OR              [ shift and go to state 134 ]
  ! XOR             [ shift and go to state 125 ]
  ! LESSTHAN        [ shift and go to state 130 ]
  ! GREATERTHAN     [ shift and go to state 131 ]
  ! EQUALS          [ shift and go to state 128 ]
  ! PLUS            [ shift and go to state 132 ]
  ! MINUS           [ shift and go to state 129 ]


state 157

    (62) expression -> expression TIMES expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    AND             reduce using rule 62 (expression -> expression TIMES expression .)
    OR              reduce using rule 62 (expression -> expression TIMES expression .)
    XOR             reduce using rule 62 (expression -> expression TIMES expression .)
    LESSTHAN        reduce using rule 62 (expression -> expression TIMES expression .)
    GREATERTHAN     reduce using rule 62 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 62 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 62 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 62 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 62 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 62 (expression -> expression TIMES expression .)
    PERCENT         reduce using rule 62 (expression -> expression TIMES expression .)
    REPEAT          reduce using rule 62 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 62 (expression -> expression TIMES expression .)
    LOOP            reduce using rule 62 (expression -> expression TIMES expression .)
    FOREVER         reduce using rule 62 (expression -> expression TIMES expression .)
    IF              reduce using rule 62 (expression -> expression TIMES expression .)
    IFELSE          reduce using rule 62 (expression -> expression TIMES expression .)
    WAITUNTIL       reduce using rule 62 (expression -> expression TIMES expression .)
    WHEN            reduce using rule 62 (expression -> expression TIMES expression .)
    SHOW            reduce using rule 62 (expression -> expression TIMES expression .)
    MAKE            reduce using rule 62 (expression -> expression TIMES expression .)
    WAIT            reduce using rule 62 (expression -> expression TIMES expression .)
    SEND            reduce using rule 62 (expression -> expression TIMES expression .)
    RECORD          reduce using rule 62 (expression -> expression TIMES expression .)
    ERASE           reduce using rule 62 (expression -> expression TIMES expression .)
    SETSVH          reduce using rule 62 (expression -> expression TIMES expression .)
    SVR             reduce using rule 62 (expression -> expression TIMES expression .)
    SVL             reduce using rule 62 (expression -> expression TIMES expression .)
    SETPOWER        reduce using rule 62 (expression -> expression TIMES expression .)
    I2C_WRITE       reduce using rule 62 (expression -> expression TIMES expression .)
    OUTPUT          reduce using rule 62 (expression -> expression TIMES expression .)
    ONFOR           reduce using rule 62 (expression -> expression TIMES expression .)
    BSEND           reduce using rule 62 (expression -> expression TIMES expression .)
    BSR             reduce using rule 62 (expression -> expression TIMES expression .)
    SETDP           reduce using rule 62 (expression -> expression TIMES expression .)
    FASTSEND        reduce using rule 62 (expression -> expression TIMES expression .)
    BEEP            reduce using rule 62 (expression -> expression TIMES expression .)
    STOP            reduce using rule 62 (expression -> expression TIMES expression .)
    RESET           reduce using rule 62 (expression -> expression TIMES expression .)
    RESETDP         reduce using rule 62 (expression -> expression TIMES expression .)
    ON              reduce using rule 62 (expression -> expression TIMES expression .)
    OFF             reduce using rule 62 (expression -> expression TIMES expression .)
    THISWAY         reduce using rule 62 (expression -> expression TIMES expression .)
    THATWAY         reduce using rule 62 (expression -> expression TIMES expression .)
    RD              reduce using rule 62 (expression -> expression TIMES expression .)
    BRAKE           reduce using rule 62 (expression -> expression TIMES expression .)
    LEDON           reduce using rule 62 (expression -> expression TIMES expression .)
    LEDOFF          reduce using rule 62 (expression -> expression TIMES expression .)
    I2C_START       reduce using rule 62 (expression -> expression TIMES expression .)
    I2C_STOP        reduce using rule 62 (expression -> expression TIMES expression .)
    WHENOFF         reduce using rule 62 (expression -> expression TIMES expression .)
    MOTORATTENTION  reduce using rule 62 (expression -> expression TIMES expression .)
    BYTES           reduce using rule 62 (expression -> expression TIMES expression .)
    PROCEDURENAME   reduce using rule 62 (expression -> expression TIMES expression .)
    END             reduce using rule 62 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 62 (expression -> expression TIMES expression .)
    REPORTER        reduce using rule 62 (expression -> expression TIMES expression .)
    NOT             reduce using rule 62 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 62 (expression -> expression TIMES expression .)
    LBRACKET        reduce using rule 62 (expression -> expression TIMES expression .)
    I2C_READ        reduce using rule 62 (expression -> expression TIMES expression .)
    HIGHBYTE        reduce using rule 62 (expression -> expression TIMES expression .)
    LOWBYTE         reduce using rule 62 (expression -> expression TIMES expression .)
    NUMBERLITERAL   reduce using rule 62 (expression -> expression TIMES expression .)
    TIMER           reduce using rule 62 (expression -> expression TIMES expression .)
    RANDOM          reduce using rule 62 (expression -> expression TIMES expression .)
    RECALL          reduce using rule 62 (expression -> expression TIMES expression .)
    SENSOR1         reduce using rule 62 (expression -> expression TIMES expression .)
    SENSOR2         reduce using rule 62 (expression -> expression TIMES expression .)
    SENSOR3         reduce using rule 62 (expression -> expression TIMES expression .)
    SENSOR4         reduce using rule 62 (expression -> expression TIMES expression .)
    SENSOR5         reduce using rule 62 (expression -> expression TIMES expression .)
    SENSOR6         reduce using rule 62 (expression -> expression TIMES expression .)
    SENSOR7         reduce using rule 62 (expression -> expression TIMES expression .)
    SENSOR8         reduce using rule 62 (expression -> expression TIMES expression .)
    SWITCH1         reduce using rule 62 (expression -> expression TIMES expression .)
    SWITCH2         reduce using rule 62 (expression -> expression TIMES expression .)
    SWITCH3         reduce using rule 62 (expression -> expression TIMES expression .)
    SWITCH4         reduce using rule 62 (expression -> expression TIMES expression .)
    SWITCH5         reduce using rule 62 (expression -> expression TIMES expression .)
    SWITCH6         reduce using rule 62 (expression -> expression TIMES expression .)
    SWITCH7         reduce using rule 62 (expression -> expression TIMES expression .)
    SWITCH8         reduce using rule 62 (expression -> expression TIMES expression .)
    NEWIRQ          reduce using rule 62 (expression -> expression TIMES expression .)
    SERIAL          reduce using rule 62 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 62 (expression -> expression TIMES expression .)

  ! AND             [ shift and go to state 124 ]
  ! OR              [ shift and go to state 134 ]
  ! XOR             [ shift and go to state 125 ]
  ! LESSTHAN        [ shift and go to state 130 ]
  ! GREATERTHAN     [ shift and go to state 131 ]
  ! EQUALS          [ shift and go to state 128 ]
  ! PLUS            [ shift and go to state 132 ]
  ! MINUS           [ shift and go to state 129 ]
  ! TIMES           [ shift and go to state 133 ]
  ! DIVIDE          [ shift and go to state 126 ]
  ! PERCENT         [ shift and go to state 127 ]


state 158

    (55) expression -> expression OR expression .
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    AND             reduce using rule 55 (expression -> expression OR expression .)
    OR              reduce using rule 55 (expression -> expression OR expression .)
    XOR             reduce using rule 55 (expression -> expression OR expression .)
    EQUALS          reduce using rule 55 (expression -> expression OR expression .)
    REPEAT          reduce using rule 55 (expression -> expression OR expression .)
    WHILE           reduce using rule 55 (expression -> expression OR expression .)
    LOOP            reduce using rule 55 (expression -> expression OR expression .)
    FOREVER         reduce using rule 55 (expression -> expression OR expression .)
    IF              reduce using rule 55 (expression -> expression OR expression .)
    IFELSE          reduce using rule 55 (expression -> expression OR expression .)
    WAITUNTIL       reduce using rule 55 (expression -> expression OR expression .)
    WHEN            reduce using rule 55 (expression -> expression OR expression .)
    SHOW            reduce using rule 55 (expression -> expression OR expression .)
    MAKE            reduce using rule 55 (expression -> expression OR expression .)
    WAIT            reduce using rule 55 (expression -> expression OR expression .)
    SEND            reduce using rule 55 (expression -> expression OR expression .)
    RECORD          reduce using rule 55 (expression -> expression OR expression .)
    ERASE           reduce using rule 55 (expression -> expression OR expression .)
    SETSVH          reduce using rule 55 (expression -> expression OR expression .)
    SVR             reduce using rule 55 (expression -> expression OR expression .)
    SVL             reduce using rule 55 (expression -> expression OR expression .)
    SETPOWER        reduce using rule 55 (expression -> expression OR expression .)
    I2C_WRITE       reduce using rule 55 (expression -> expression OR expression .)
    OUTPUT          reduce using rule 55 (expression -> expression OR expression .)
    ONFOR           reduce using rule 55 (expression -> expression OR expression .)
    BSEND           reduce using rule 55 (expression -> expression OR expression .)
    BSR             reduce using rule 55 (expression -> expression OR expression .)
    SETDP           reduce using rule 55 (expression -> expression OR expression .)
    FASTSEND        reduce using rule 55 (expression -> expression OR expression .)
    BEEP            reduce using rule 55 (expression -> expression OR expression .)
    STOP            reduce using rule 55 (expression -> expression OR expression .)
    RESET           reduce using rule 55 (expression -> expression OR expression .)
    RESETDP         reduce using rule 55 (expression -> expression OR expression .)
    ON              reduce using rule 55 (expression -> expression OR expression .)
    OFF             reduce using rule 55 (expression -> expression OR expression .)
    THISWAY         reduce using rule 55 (expression -> expression OR expression .)
    THATWAY         reduce using rule 55 (expression -> expression OR expression .)
    RD              reduce using rule 55 (expression -> expression OR expression .)
    BRAKE           reduce using rule 55 (expression -> expression OR expression .)
    LEDON           reduce using rule 55 (expression -> expression OR expression .)
    LEDOFF          reduce using rule 55 (expression -> expression OR expression .)
    I2C_START       reduce using rule 55 (expression -> expression OR expression .)
    I2C_STOP        reduce using rule 55 (expression -> expression OR expression .)
    WHENOFF         reduce using rule 55 (expression -> expression OR expression .)
    MOTORATTENTION  reduce using rule 55 (expression -> expression OR expression .)
    BYTES           reduce using rule 55 (expression -> expression OR expression .)
    PROCEDURENAME   reduce using rule 55 (expression -> expression OR expression .)
    END             reduce using rule 55 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 55 (expression -> expression OR expression .)
    REPORTER        reduce using rule 55 (expression -> expression OR expression .)
    NOT             reduce using rule 55 (expression -> expression OR expression .)
    LPAREN          reduce using rule 55 (expression -> expression OR expression .)
    LBRACKET        reduce using rule 55 (expression -> expression OR expression .)
    I2C_READ        reduce using rule 55 (expression -> expression OR expression .)
    HIGHBYTE        reduce using rule 55 (expression -> expression OR expression .)
    LOWBYTE         reduce using rule 55 (expression -> expression OR expression .)
    NUMBERLITERAL   reduce using rule 55 (expression -> expression OR expression .)
    TIMER           reduce using rule 55 (expression -> expression OR expression .)
    RANDOM          reduce using rule 55 (expression -> expression OR expression .)
    RECALL          reduce using rule 55 (expression -> expression OR expression .)
    SENSOR1         reduce using rule 55 (expression -> expression OR expression .)
    SENSOR2         reduce using rule 55 (expression -> expression OR expression .)
    SENSOR3         reduce using rule 55 (expression -> expression OR expression .)
    SENSOR4         reduce using rule 55 (expression -> expression OR expression .)
    SENSOR5         reduce using rule 55 (expression -> expression OR expression .)
    SENSOR6         reduce using rule 55 (expression -> expression OR expression .)
    SENSOR7         reduce using rule 55 (expression -> expression OR expression .)
    SENSOR8         reduce using rule 55 (expression -> expression OR expression .)
    SWITCH1         reduce using rule 55 (expression -> expression OR expression .)
    SWITCH2         reduce using rule 55 (expression -> expression OR expression .)
    SWITCH3         reduce using rule 55 (expression -> expression OR expression .)
    SWITCH4         reduce using rule 55 (expression -> expression OR expression .)
    SWITCH5         reduce using rule 55 (expression -> expression OR expression .)
    SWITCH6         reduce using rule 55 (expression -> expression OR expression .)
    SWITCH7         reduce using rule 55 (expression -> expression OR expression .)
    SWITCH8         reduce using rule 55 (expression -> expression OR expression .)
    NEWIRQ          reduce using rule 55 (expression -> expression OR expression .)
    SERIAL          reduce using rule 55 (expression -> expression OR expression .)
    RPAREN          reduce using rule 55 (expression -> expression OR expression .)
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127

  ! LESSTHAN        [ reduce using rule 55 (expression -> expression OR expression .) ]
  ! GREATERTHAN     [ reduce using rule 55 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 55 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 55 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 55 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 55 (expression -> expression OR expression .) ]
  ! PERCENT         [ reduce using rule 55 (expression -> expression OR expression .) ]
  ! AND             [ shift and go to state 124 ]
  ! OR              [ shift and go to state 134 ]
  ! XOR             [ shift and go to state 125 ]
  ! EQUALS          [ shift and go to state 128 ]


state 159

    (10) statement -> WHILE expression LBRACKET statements . RBRACKET

    RBRACKET        shift and go to state 166


state 160

    (16) statement -> WHEN expression LBRACKET expression . RBRACKET
    (54) expression -> expression . AND expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . XOR expression
    (57) expression -> expression . LESSTHAN expression
    (58) expression -> expression . GREATERTHAN expression
    (59) expression -> expression . EQUALS expression
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . PERCENT expression

    RBRACKET        shift and go to state 167
    AND             shift and go to state 124
    OR              shift and go to state 134
    XOR             shift and go to state 125
    LESSTHAN        shift and go to state 130
    GREATERTHAN     shift and go to state 131
    EQUALS          shift and go to state 128
    PLUS            shift and go to state 132
    MINUS           shift and go to state 129
    TIMES           shift and go to state 133
    DIVIDE          shift and go to state 126
    PERCENT         shift and go to state 127


state 161

    (14) statement -> IFELSE expression LBRACKET statements . RBRACKET LBRACKET statements RBRACKET

    RBRACKET        shift and go to state 168


state 162

    (13) statement -> IF expression LBRACKET statements . RBRACKET

    RBRACKET        shift and go to state 169


state 163

    (9) statement -> REPEAT expression LBRACKET statements . RBRACKET

    RBRACKET        shift and go to state 170


state 164

    (15) statement -> WAITUNTIL LBRACKET expression RBRACKET .

    REPEAT          reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    LOOP            reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    FOREVER         reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    IF              reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    IFELSE          reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    WAITUNTIL       reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    WHEN            reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    SHOW            reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    MAKE            reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    WAIT            reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    SEND            reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    RECORD          reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    ERASE           reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    SETSVH          reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    SVR             reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    SVL             reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    SETPOWER        reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    I2C_WRITE       reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    OUTPUT          reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    ONFOR           reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    BSEND           reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    BSR             reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    SETDP           reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    FASTSEND        reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    BEEP            reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    STOP            reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    RESET           reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    RESETDP         reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    ON              reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    OFF             reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    THISWAY         reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    THATWAY         reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    RD              reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    BRAKE           reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    LEDON           reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    LEDOFF          reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    I2C_START       reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    I2C_STOP        reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    WHENOFF         reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    MOTORATTENTION  reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    BYTES           reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    PROCEDURENAME   reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)
    END             reduce using rule 15 (statement -> WAITUNTIL LBRACKET expression RBRACKET .)


state 165

    (11) statement -> LOOP LBRACKET statements RBRACKET .

    REPEAT          reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    WHILE           reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    LOOP            reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    FOREVER         reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    IF              reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    IFELSE          reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    WAITUNTIL       reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    WHEN            reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    SHOW            reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    MAKE            reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    WAIT            reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    SEND            reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    RECORD          reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    ERASE           reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    SETSVH          reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    SVR             reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    SVL             reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    SETPOWER        reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    I2C_WRITE       reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    OUTPUT          reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    ONFOR           reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    BSEND           reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    BSR             reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    SETDP           reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    FASTSEND        reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    BEEP            reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    STOP            reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    RESET           reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    RESETDP         reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    ON              reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    OFF             reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    THISWAY         reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    THATWAY         reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    RD              reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    BRAKE           reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    LEDON           reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    LEDOFF          reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    I2C_START       reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    I2C_STOP        reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    WHENOFF         reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    MOTORATTENTION  reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    BYTES           reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    PROCEDURENAME   reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    RBRACKET        reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)
    END             reduce using rule 11 (statement -> LOOP LBRACKET statements RBRACKET .)


state 166

    (10) statement -> WHILE expression LBRACKET statements RBRACKET .

    REPEAT          reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    WHILE           reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    LOOP            reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    FOREVER         reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    IF              reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    IFELSE          reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    WAITUNTIL       reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    WHEN            reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    SHOW            reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    MAKE            reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    WAIT            reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    SEND            reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    RECORD          reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    ERASE           reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    SETSVH          reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    SVR             reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    SVL             reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    SETPOWER        reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    I2C_WRITE       reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    OUTPUT          reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    ONFOR           reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    BSEND           reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    BSR             reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    SETDP           reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    FASTSEND        reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    BEEP            reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    STOP            reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    RESET           reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    RESETDP         reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    ON              reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    OFF             reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    THISWAY         reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    THATWAY         reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    RD              reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    BRAKE           reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    LEDON           reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    LEDOFF          reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    I2C_START       reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    I2C_STOP        reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    WHENOFF         reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    MOTORATTENTION  reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    BYTES           reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    PROCEDURENAME   reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    RBRACKET        reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)
    END             reduce using rule 10 (statement -> WHILE expression LBRACKET statements RBRACKET .)


state 167

    (16) statement -> WHEN expression LBRACKET expression RBRACKET .

    REPEAT          reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    LOOP            reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    FOREVER         reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    IF              reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    IFELSE          reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    WAITUNTIL       reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    WHEN            reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    SHOW            reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    MAKE            reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    WAIT            reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    SEND            reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    RECORD          reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    ERASE           reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    SETSVH          reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    SVR             reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    SVL             reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    SETPOWER        reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    I2C_WRITE       reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    OUTPUT          reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    ONFOR           reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    BSEND           reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    BSR             reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    SETDP           reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    FASTSEND        reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    BEEP            reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    STOP            reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    RESET           reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    RESETDP         reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    ON              reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    OFF             reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    THISWAY         reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    THATWAY         reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    RD              reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    BRAKE           reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    LEDON           reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    LEDOFF          reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    I2C_START       reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    I2C_STOP        reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    WHENOFF         reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    MOTORATTENTION  reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    BYTES           reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    PROCEDURENAME   reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)
    END             reduce using rule 16 (statement -> WHEN expression LBRACKET expression RBRACKET .)


state 168

    (14) statement -> IFELSE expression LBRACKET statements RBRACKET . LBRACKET statements RBRACKET

    LBRACKET        shift and go to state 171


state 169

    (13) statement -> IF expression LBRACKET statements RBRACKET .

    REPEAT          reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    WHILE           reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    LOOP            reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    FOREVER         reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    IF              reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    IFELSE          reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    WAITUNTIL       reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    WHEN            reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    SHOW            reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    MAKE            reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    WAIT            reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    SEND            reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    RECORD          reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    ERASE           reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    SETSVH          reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    SVR             reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    SVL             reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    SETPOWER        reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    I2C_WRITE       reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    OUTPUT          reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    ONFOR           reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    BSEND           reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    BSR             reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    SETDP           reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    FASTSEND        reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    BEEP            reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    STOP            reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    RESET           reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    RESETDP         reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    ON              reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    OFF             reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    THISWAY         reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    THATWAY         reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    RD              reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    BRAKE           reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    LEDON           reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    LEDOFF          reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    I2C_START       reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    I2C_STOP        reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    WHENOFF         reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    MOTORATTENTION  reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    BYTES           reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    PROCEDURENAME   reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    RBRACKET        reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)
    END             reduce using rule 13 (statement -> IF expression LBRACKET statements RBRACKET .)


state 170

    (9) statement -> REPEAT expression LBRACKET statements RBRACKET .

    REPEAT          reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    WHILE           reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    LOOP            reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    FOREVER         reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    IF              reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    IFELSE          reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    WAITUNTIL       reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    WHEN            reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    SHOW            reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    MAKE            reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    WAIT            reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    SEND            reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    RECORD          reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    ERASE           reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    SETSVH          reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    SVR             reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    SVL             reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    SETPOWER        reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    I2C_WRITE       reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    OUTPUT          reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    ONFOR           reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    BSEND           reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    BSR             reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    SETDP           reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    FASTSEND        reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    BEEP            reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    STOP            reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    RESET           reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    RESETDP         reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    ON              reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    OFF             reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    THISWAY         reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    THATWAY         reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    RD              reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    BRAKE           reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    LEDON           reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    LEDOFF          reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    I2C_START       reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    I2C_STOP        reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    WHENOFF         reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    MOTORATTENTION  reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    BYTES           reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    PROCEDURENAME   reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    RBRACKET        reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)
    END             reduce using rule 9 (statement -> REPEAT expression LBRACKET statements RBRACKET .)


state 171

    (14) statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET . statements RBRACKET
    (7) statements -> . statement statements
    (8) statements -> . statement
    (9) statement -> . REPEAT expression LBRACKET statements RBRACKET
    (10) statement -> . WHILE expression LBRACKET statements RBRACKET
    (11) statement -> . LOOP LBRACKET statements RBRACKET
    (12) statement -> . FOREVER LBRACKET statements RBRACKET
    (13) statement -> . IF expression LBRACKET statements RBRACKET
    (14) statement -> . IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET
    (15) statement -> . WAITUNTIL LBRACKET expression RBRACKET
    (16) statement -> . WHEN expression LBRACKET expression RBRACKET
    (17) statement -> . SHOW expression
    (18) statement -> . SHOW RECEIVER
    (19) statement -> . MAKE RECEIVER expression
    (20) statement -> . WAIT expression
    (21) statement -> . SEND expression
    (22) statement -> . RECORD expression
    (23) statement -> . ERASE expression
    (24) statement -> . SETSVH expression
    (25) statement -> . SVR expression
    (26) statement -> . SVL expression
    (27) statement -> . SETPOWER expression
    (28) statement -> . I2C_WRITE expression
    (29) statement -> . OUTPUT expression
    (30) statement -> . ONFOR expression
    (31) statement -> . BSEND expression
    (32) statement -> . BSR expression
    (33) statement -> . SETDP expression
    (34) statement -> . FASTSEND expression
    (35) statement -> . BEEP
    (36) statement -> . STOP
    (37) statement -> . RESET
    (38) statement -> . RESETDP
    (39) statement -> . ON
    (40) statement -> . OFF
    (41) statement -> . THISWAY
    (42) statement -> . THATWAY
    (43) statement -> . RD
    (44) statement -> . BRAKE
    (45) statement -> . LEDON
    (46) statement -> . LEDOFF
    (47) statement -> . I2C_START
    (48) statement -> . I2C_STOP
    (49) statement -> . WHENOFF
    (50) statement -> . procedurecall
    (51) statement -> . MOTORATTENTION
    (52) statement -> . BYTES
    (96) procedurecall -> . PROCEDURENAME parm
    (97) procedurecall -> . PROCEDURENAME

    REPEAT          shift and go to state 32
    WHILE           shift and go to state 13
    LOOP            shift and go to state 53
    FOREVER         shift and go to state 7
    IF              shift and go to state 28
    IFELSE          shift and go to state 25
    WAITUNTIL       shift and go to state 51
    WHEN            shift and go to state 21
    SHOW            shift and go to state 20
    MAKE            shift and go to state 45
    WAIT            shift and go to state 41
    SEND            shift and go to state 47
    RECORD          shift and go to state 19
    ERASE           shift and go to state 24
    SETSVH          shift and go to state 18
    SVR             shift and go to state 39
    SVL             shift and go to state 31
    SETPOWER        shift and go to state 10
    I2C_WRITE       shift and go to state 40
    OUTPUT          shift and go to state 52
    ONFOR           shift and go to state 37
    BSEND           shift and go to state 42
    BSR             shift and go to state 22
    SETDP           shift and go to state 27
    FASTSEND        shift and go to state 14
    BEEP            shift and go to state 48
    STOP            shift and go to state 11
    RESET           shift and go to state 6
    RESETDP         shift and go to state 33
    ON              shift and go to state 15
    OFF             shift and go to state 16
    THISWAY         shift and go to state 49
    THATWAY         shift and go to state 36
    RD              shift and go to state 23
    BRAKE           shift and go to state 38
    LEDON           shift and go to state 43
    LEDOFF          shift and go to state 9
    I2C_START       shift and go to state 46
    I2C_STOP        shift and go to state 17
    WHENOFF         shift and go to state 44
    MOTORATTENTION  shift and go to state 30
    BYTES           shift and go to state 35
    PROCEDURENAME   shift and go to state 12

    statements                     shift and go to state 172
    procedurecall                  shift and go to state 29
    statement                      shift and go to state 26

state 172

    (14) statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements . RBRACKET

    RBRACKET        shift and go to state 173


state 173

    (14) statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .

    REPEAT          reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    WHILE           reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    LOOP            reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    FOREVER         reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    IF              reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    IFELSE          reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    WAITUNTIL       reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    WHEN            reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    SHOW            reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    MAKE            reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    WAIT            reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    SEND            reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    RECORD          reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    ERASE           reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    SETSVH          reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    SVR             reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    SVL             reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    SETPOWER        reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    I2C_WRITE       reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    OUTPUT          reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    ONFOR           reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    BSEND           reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    BSR             reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    SETDP           reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    FASTSEND        reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    BEEP            reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    STOP            reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    RESET           reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    RESETDP         reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    ON              reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    OFF             reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    THISWAY         reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    THATWAY         reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    RD              reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    BRAKE           reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    LEDON           reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    LEDOFF          reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    I2C_START       reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    I2C_STOP        reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    WHENOFF         reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    MOTORATTENTION  reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    BYTES           reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    PROCEDURENAME   reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    RBRACKET        reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)
    END             reduce using rule 14 (statement -> IFELSE expression LBRACKET statements RBRACKET LBRACKET statements RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for AND in state 119 resolved as shift
WARNING: shift/reduce conflict for OR in state 119 resolved as shift
WARNING: shift/reduce conflict for XOR in state 119 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 119 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 119 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 119 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 119 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 119 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 119 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 119 resolved as shift
WARNING: shift/reduce conflict for AND in state 121 resolved as shift
WARNING: shift/reduce conflict for OR in state 121 resolved as shift
WARNING: shift/reduce conflict for XOR in state 121 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 121 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 121 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 121 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 121 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 121 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 121 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 121 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 121 resolved as shift
WARNING: shift/reduce conflict for AND in state 122 resolved as shift
WARNING: shift/reduce conflict for OR in state 122 resolved as shift
WARNING: shift/reduce conflict for XOR in state 122 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 122 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 122 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 122 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 122 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 122 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 122 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 122 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 122 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 135 resolved as shift
WARNING: shift/reduce conflict for AND in state 152 resolved as shift
WARNING: shift/reduce conflict for OR in state 152 resolved as shift
WARNING: shift/reduce conflict for XOR in state 152 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 152 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 152 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 152 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 152 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 152 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 152 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 152 resolved as shift
WARNING: shift/reduce conflict for PERCENT in state 152 resolved as shift
